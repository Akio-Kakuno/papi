2004-10-20  you
	* src/papi_internal.c 1.93:
		potential memory leak. Before the pinter to be NULL, free it.

	* src/aix.c 1.48:
		replace fread with fscanf, still read byte by byte. This fix
		the multiplex1_pthread problem.

	* src/aix.c 1.49:
		fix a memory leak in _papi_hwd_update_shlib_info()

2004-10-20  terpstra
	* doc/procedure.txt 1.7:
		Updated documentation procedure for use with Adobe 6.

	* doc/PAPI_USER_GUIDE_306.doc 1.1:
		Reformetted Users Guide for PAPI 3.0.6.

2004-10-20  london
	* src/irix-mips.c 1.98:
		Fixed another memory leak with shlib

	* src/x1.c 1.19:
		Fix to compile

2004-10-19  you
	* src/ctests/multiplex3_pthreads.c 1.29:
		add do_misses to ensure PAPI_L2_DCM have counts on power4.

2004-10-19  london
	* src/perfctr-2.6.x/usr.lib/Makefile 1.8:
		Fix conflicts

	* src/perfctr-2.6.x/CHANGES 1.1.1.7:
	* src/perfctr-2.6.x/linux/drivers/perfctr/RELEASE-NOTES 1.1.1.7:
	* src/perfctr-2.6.x/linux/drivers/perfctr/ppc.c 1.1.1.4:
	* src/perfctr-2.6.x/linux/drivers/perfctr/version.h 1.1.1.7:
	* src/perfctr-2.6.x/linux/drivers/perfctr/virtual.c 1.1.1.3:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.28-pre4 1.1.1.1:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.9 1.1.1.1:
	* src/perfctr-2.6.x/perfctr.spec 1.1.1.7:
	* src/perfctr-2.6.x/usr.lib/Makefile 1.1.1.7:
		Import of perfctr 2.6.10.2

	* src/Makefile.inc 1.98:
		The install never called the native_install stubs and so libs like
		libperfctr.so never got installed.

2004-10-18  you
	* src/configure 1.26:
	* src/configure.in 1.25:
		set default pmapi path

2004-10-15  terpstra
	* src/papi.h 1.132:
		Bump the version number up to 3.0.6

	* src/papivi.h 1.5:
		Updated for compatibility with PAPI 3.0.6

2004-10-12  mucci
	* CVS-HOWTO 1.9:
	* TODO 1.10:
		Removed these two files. TODO is outdated. CVS-HOWTO now in the
		FAQ.

	* src/README 1.7:
	* src/aix-power.README 1.12:
	* src/any-null.README 1.3:
	* src/dadd-alpha.README 1.4:
	* src/irix-mips.README 1.6:
	* src/linux-alpha.README 1.3:
	* src/linux-ia64.README 1.6:
	* src/linux-perf.README 1.6:
	* src/linux-perfctr.README 1.12:
	* src/papi.c 1.283:
	* src/solaris-ultra.README 1.4:
	* src/tru64-alpha.README 1.8:
	* src/unicos-ev5.README 1.4:
	* src/unicos-x1.README 1.4:
		Removed implicit thread barrier from papi.c PAPI_shutdown(). This violates UNIX-like
		semantics and now only gets compiled in with -DDEBUG. This doesn't affect
		normal code. Added a magic environment variable PAPI_ALLOW_STOLEN that will
		enable tools to detect if the code they are running has used PAPI from underneath
		them. Only functions properly when linked with the .so. This is a harmless commit
		as it merely tests for the existance of an environment variable on non-Windows platforms.
		
		Also, removed all the README's that are now in the FAQ.
		
		Updated the README to point elsewhere. We should commit directions for configure
		in INSTALL.

	* src/irix-mips.c 1.97:
		Missed this commit on the virtual time fix.

	* src/INSTALL 1.8:
		Simply points elsewhere. Following GNU convention, this file
		should be here.

2004-10-12  you
	* src/configure 1.25:
	* src/configure.in 1.24:
		add Pentium 2
		use sun4u for ultra detection on solaris
		more lib check
		use 64 bit mode as default for platforms only support 64bit mode

2004-10-12  london
	* src/ctests/Makefile 1.122:
	* src/ctests/overflow_one_and_read.c 1.1:
		New test file to make sure we can read counters from a overflow handler

2004-10-12  terpstra
	* PAPI_FAQ.html 1.1:
		Major restructuring of the way we handle READMEs and FAQs.
		Thanks to Phil for taking the lead on this.
		All content for README and platform specific READMEs have been merged into a single FAQ.
		That FAQ is maintained EXCLUSIVELY in the PAPI website database.
		If you need to ADD or EDIT information to the FAQ
		**DO IT ON THE WEBSITE**
		
		David Rogers has added a handy-dandy button in the FAQ editior that will
		generate a stand-alone fully formatted printable FAQ html file.
		That's where this file came from.
		In this way, we can distribute the FAQ with the tarball. It will be viewable
		and printable from any browser. And it'll be in CVS. And on the website.
		But it needs to be maintained from the website interface.

	* INSTALL.txt 1.11:
		Removed reference to the (fixed) Windows Athlon bug.

	* HISTORY.txt 1.6:
		Rewrite content to point to ChangeLog file.

2004-10-08  mucci
	* man/html/papi_set_debug.html 1.10:
		Update from before...

	* src/Makefile.linux-perfctr-p2 1.1:
		Added file for OLD pentiums, pentium2s etc...

	* src/Makefile 1.13:
		Updated our old crufty top level makefile to be consistent with the
		makefiles available and the options to make.

	* src/aix.c 1.47:
	* src/any-proc-null.c 1.6:
	* src/linux-ia64.c 1.116:
	* src/unicos-ev5.c 1.61:
	* src/x1.c 1.18:
		WHOA! Long standing bug on the computation of virtual time. This could affect
		the IA64 by a factor of 978. (1000000/1024). Other systems have been changed
		accordingly. Please test x1, unicos, and aix.

	* man/man3/PAPI_set_debug.3 1.10:
		Added a note to indicate that the user CAN call this before
		PAPI_library_init().

2004-10-08  london
	* src/aix.c 1.46:
	* src/any-null.c 1.37:
	* src/dadd-alpha.c 1.37:
	* src/extras.c 1.120:
	* src/irix-mips.c 1.96:
	* src/linux-alpha.c 1.17:
	* src/linux-ia64.c 1.115:
	* src/papi_internal.c 1.92:
	* src/papi_protos.h 1.47:
	* src/perfctr-p3.c 1.53:
	* src/perfctr-p4.c 1.82:
	* src/solaris-ultra.c 1.98:
	* src/tru64-alpha.c 1.60:
	* src/unicos-ev5.c 1.60:
	* src/x1.c 1.17:
		This fixes the problem with not being able to read the counters inside a handler.
		The only "real" changes are in perfctr-p3.c and perfctr-p4.c.
		
		Before a handler is called now, the EventSet is set the PAPI_PAUSED and then
		that flag is removed once the handler returns.  Then a flags is sent into the
		_papi_hwd_read() calls that has the state of the EventSet and the read can use this
		to determine how to read the counters if it makes a difference (Which it currently
		does for perfctr).  If this is changed later, the PAUSED/flags stuff could be removed
		if needed.

	* src/solaris-ultra.c 1.99:
		Obviously we don't compile with -DDEBUG much, as this platform wouldn't even compile
		with it.  This is fixed now.

	* src/Makefile.solaris-ultra-64bit 1.12:
		Fixes to actually compile in 64 bit mode :)

2004-10-07  mucci
	* src/pfmwrap.h 1.21:
		Bug fix for when PAPI is used in an LD_PRELOAD environment and the
		process calls exec. The LOAD_CONTEXT syscall returns EBUSY when we
		have already initialized our PID. This happens when one process EXEC's
		another and papi is preloaded...the subsequent process doesn't need to load
		the context.

2004-10-04  london
	* src/README 1.6:
	* src/unicos-x1.README 1.3:
		Update for the release

	* INSTALL.txt 1.10:
		Update

2004-10-04  jthomas
	* man/man3/PAPI_read.3 1.14:
		Forgot another .LP

	* man/man3/PAPI_start.3 1.16:
		Missed a dreaded .LP

	* man/man3/PAPI_get_event_info.3 1.6:
		Got rid of some white space in the example.

	* man/man3/PAPI_start.3 1.15:
		PAPI_start/stop tweak.

	* man/man3/PAPI_enum_event.3 1.8:
	* man/man3/PAPI_get_event_info.3 1.5:
	* man/man3/PAPI_get_real_cyc.3 1.8:
	* man/man3/PAPI_get_virt_cyc.3 1.9:
	* man/man3/PAPI_list_events.3 1.12:
	* man/man3/PAPI_num_counters.3 1.13:
	* man/man3/PAPI_num_events.3 1.5:
	* man/man3/PAPI_num_hwctrs.3 1.6:
	* man/man3/PAPI_read.3 1.13:
	* man/man3/PAPI_read_counters.3 1.10:
	* man/man3/PAPI_reset.3 1.13:
	* man/man3/PAPI_start.3 1.14:
	* man/man3/PAPI_start_counters.3 1.12:
	* man/man3/PAPI_stop_counters.3 1.10:
	* man/man3/PAPI_write.3 1.7:
		Man page updates; brace yourself for error check updates.

2004-10-04  terpstra
	* man/html/papi.html 1.12:
	* man/html/papi_accum.html 1.9:
	* man/html/papi_accum_counters.html 1.9:
	* man/html/papi_add_event.html 1.9:
	* man/html/papi_add_events.html 1.9:
	* man/html/papi_cleanup_eventset.html 1.9:
	* man/html/papi_create_eventset.html 1.9:
	* man/html/papi_destroy_eventset.html 1.9:
	* man/html/papi_enum_event.html 1.3:
	* man/html/papi_event_code_to_name.html 1.9:
	* man/html/papi_event_name_to_code.html 1.9:
	* man/html/papi_flips.html 1.3:
	* man/html/papi_flops.html 1.8:
	* man/html/papi_get_dmem_info.html 1.3:
	* man/html/papi_get_event_info.html 1.3:
	* man/html/papi_get_executable_info.html 1.10:
	* man/html/papi_get_hardware_info.html 1.9:
	* man/html/papi_get_multiplex.html 1.3:
	* man/html/papi_get_opt.html 1.9:
	* man/html/papi_get_overflow_event_index.html 1.1:
	* man/html/papi_get_real_cyc.html 1.9:
	* man/html/papi_get_real_usec.html 1.9:
	* man/html/papi_get_shared_lib_info.html 1.3:
	* man/html/papi_get_thr_specific.html 1.3:
	* man/html/papi_get_virt_cyc.html 1.9:
	* man/html/papi_get_virt_usec.html 1.9:
	* man/html/papi_help.html 1.9:
	* man/html/papi_ipc.html 1.3:
	* man/html/papi_is_initialized.html 1.3:
	* man/html/papi_library_init.html 1.9:
	* man/html/papi_list_events.html 1.9:
	* man/html/papi_lock.html 1.8:
	* man/html/papi_multiplex_init.html 1.9:
	* man/html/papi_native.html 1.3:
	* man/html/papi_num_counters.html 1.9:
	* man/html/papi_num_events.html 1.3:
	* man/html/papi_num_hwctrs.html 1.5:
	* man/html/papi_overflow.html 1.10:
	* man/html/papi_perror.html 1.9:
	* man/html/papi_presets.html 1.9:
	* man/html/papi_profil.html 1.11:
	* man/html/papi_query_event.html 1.9:
	* man/html/papi_read.html 1.9:
	* man/html/papi_read_counters.html 1.9:
	* man/html/papi_register_thread.html 1.3:
	* man/html/papi_remove_event.html 1.3:
	* man/html/papi_remove_events.html 1.3:
	* man/html/papi_reset.html 1.9:
	* man/html/papi_set_debug.html 1.9:
	* man/html/papi_set_domain.html 1.9:
	* man/html/papi_set_granularity.html 1.9:
	* man/html/papi_set_multiplex.html 1.6:
	* man/html/papi_set_opt.html 1.9:
	* man/html/papi_set_thr_specific.html 1.3:
	* man/html/papi_shutdown.html 1.9:
	* man/html/papi_sprofil.html 1.12:
	* man/html/papi_start.html 1.9:
	* man/html/papi_start_counters.html 1.9:
	* man/html/papi_state.html 1.9:
	* man/html/papi_stop.html 1.9:
	* man/html/papi_stop_counters.html 1.9:
	* man/html/papi_strerror.html 1.9:
	* man/html/papi_thread_id.html 1.9:
	* man/html/papi_thread_init.html 1.9:
	* man/html/papi_unlock.html 1.8:
	* man/html/papi_write.html 1.9:
	* man/html/papif.html 1.9:
	* man/html/papif_get_clockrate.html 1.6:
	* man/html/papif_get_domain.html 1.6:
	* man/html/papif_get_exe_info.html 1.4:
	* man/html/papif_get_granularity.html 1.6:
	* man/html/papif_get_preload.html 1.6:
	* man/html/papif_set_event_domain.html 1.6:
		HTML Man Pages updated for PAPI 3.

	* doc/cat_progref.bat 1.5:
	* doc/papiprog.bat 1.6:
	* doc/procedure.txt 1.6:
	* doc/progref_template.doc 1.4:
	* man/papiman.bat 1.8:
		Updates for generating PAPI 3 documentation.

2004-10-02  terpstra
	* src/ctests/multiplex1.c 1.43:
		Tweak a print statement for case 4.

	* man/man3/PAPI_multiplex_init.3 1.8:
		Another man page...

	* man/man3/PAPI_profil.3 1.10:
	* man/man3/PAPI_sprofil.3 1.15:
		More man pages.

	* man/man3/PAPI_profil.3 1.11:
		Minor tweak

	* man/man3/PAPI_get_executable_info.3 1.13:
		Looks like Haihang and I were both working on the same file at
		(about) the same time!

2004-10-01  you
	* man/man3/PAPI_add_event.3 1.18:
	* man/man3/PAPI_remove_event.3 1.7:
		manpage update

	* man/man3/PAPI_event_code_to_name.3 1.6:
	* man/man3/PAPI_get_executable_info.3 1.11:
	* man/man3/PAPI_get_executable_info.3 1.12:
	* man/man3/PAPI_get_hardware_info.3 1.9:
	* man/man3/PAPI_library_init.3 1.16:
	* man/man3/PAPI_perror.3 1.9:
	* man/man3/PAPI_query_event.3 1.14:
		man page update

2004-10-01  terpstra
	* man/man3/PAPI_get_overflow_event_index.3 1.4:
	* man/man3/PAPI_overflow.3 1.16:
		More man pages.

2004-10-01  london
	* man/man3/PAPI_set_debug.3 1.9:
		Man page update

	* src/ftests/tenth.F 1.23:
		Set all eventsets to PAPI_NULL before create_eventset

2004-09-30  london
	* src/ftests/accum.F 1.19:
	* src/ftests/case1.F 1.15:
	* src/ftests/case2.F 1.16:
	* src/ftests/cost.F 1.16:
	* src/ftests/description.F 1.15:
	* src/ftests/first.F 1.21:
	* src/ftests/fmatrixlowpapi.F 1.20:
	* src/ftests/johnmay2.F 1.15:
	* src/ftests/native.F 1.43:
	* src/ftests/second.F 1.25:
	* src/ftests/zero.F 1.16:
		Eventsets must == PAPI_NULL before sending to PAPI_create_eventset

	* src/ftests/tenth.F 1.22:
		oops missed one

	* src/ctests/all_events.c 1.11:
	* src/ctests/case1.c 1.17:
	* src/ctests/case2.c 1.15:
	* src/ctests/derived.c 1.17:
	* src/ctests/describe.c 1.7:
	* src/ctests/first.c 1.44:
	* src/ctests/inherit.c 1.11:
	* src/ctests/johnmay2.c 1.14:
	* src/ctests/memory.c 1.17:
	* src/ctests/mpifirst.c 1.8:
	* src/ctests/nineth.c 1.23:
	* src/ctests/overflow.c 1.55:
	* src/ctests/overflow2.c 1.18:
	* src/ctests/overflow3_pthreads.c 1.15:
	* src/ctests/overflow_force_software.c 1.6:
	* src/ctests/overflow_index.c 1.4:
	* src/ctests/overflow_pthreads.c 1.32:
	* src/ctests/overflow_single_event.c 1.37:
	* src/ctests/overflow_twoevents.c 1.19:
	* src/ctests/pernode.c 1.7:
	* src/ctests/profile_pthreads.c 1.31:
	* src/ctests/second.c 1.32:
	* src/ctests/tenth.c 1.29:
	* src/ctests/zero.c 1.31:
	* src/ctests/zero_fork.c 1.4:
	* src/ctests/zero_omp.c 1.30:
	* src/ctests/zero_pthreads.c 1.25:
	* src/ctests/zero_shmem.c 1.5:
	* src/ctests/zero_smp.c 1.26:
		All EventSets must be == to PAPI_NULL before being sent to PAPI_create_eventset
		as specified in the spec/man pages.

	* man/man3/PAPI_thread_id.3 1.11:
		Man Page update

	* man/man3/PAPI_get_thr_specific.3 1.6:
	* man/man3/PAPI_lock.3 1.8:
	* man/man3/PAPI_register_thread.3 1.6:
		Man page update

	* src/papi.c 1.282:
		Changed PAPI_get_thr_specific and PAPI_set_thr_specific to return an
		error if the thread can't be found

	* src/configure 1.24:
	* src/configure.in 1.23:
		We need to support --with-bitmode=  whenever we really do,
		It was only allowing 32 bit configures on linux

2004-09-30  terpstra
	* man/man3/PAPI_get_overflow_event_index.3 1.3:
		Another man page...

	* src/papi_fwrappers.c 1.69:
		Added interface for PAPIF_get_multiplex.

2004-09-29  london
	* man/man3/PAPI_get_dmem_info.3 1.6:
		Man Page update

	* man/man3/PAPI_flops.3 1.11:
	* man/man3/PAPI_ipc.3 1.6:
		More man page updates

2004-09-29  you
	* src/configure 1.23:
	* src/configure.in 1.22:
		fix for t3e

2004-09-29  mucci
	* man/man3/PAPI_get_opt.3 1.16:
	* man/man3/PAPI_set_debug.3 1.8:
		Updates for my recent changes. Much more descriptive now, including output
		format.

	* src/papi.c 1.281:
	* src/papi_internal.c 1.91:
	* src/papi_internal.h 1.153:
		Add support for PAPI_QUIET to the PAPIERROR handler. Setting this makes no
		messages send to stderr, just return codes like a good API should.
		
		Also, unified the output from the error/debug handler and the PAPIERROR
		call. Looks like this when compiled with -DDEBUG. The first is the output
		from PAPIERROR statement. The second is from the papi_return statement.
		As you know, compiling without -DDEBUG turns off the papi_return functionality.
		Setting PAPI_QUIET turns off the PAPIERROR reporting. Nice.
		
		Also added support to get/set the error handler. It was a simple change.
		
		PAPI Error: vperfctr_open() returned NULL.
		PAPI Error: PAPI Error Code -3,PAPI_ESYS,A System/C library call failed: No such file or directory.

2004-09-29  terpstra
	* man/man3/PAPIF.3 1.13:
		More format tweaks after actually *viewing* the html version of
		the page.

	* man/man3/PAPI_get_opt.3 1.17:
	* man/man3/PAPI_native.3 1.4:
	* man/man3/PAPI_set_multiplex.3 1.9:
		More man page changes.

	* man/man3/PAPI.3 1.19:
	* man/man3/PAPIF.3 1.12:
	* man/man3/PAPI_presets.3 1.8:
		Updates to man pages.

	* man/man3/PAPI.3 1.20:
		Format tweaks after actually *viewing* the html version of the
		page.

2004-09-28  you
	* src/configure 1.21:
	* src/configure.in 1.20:
		fix for CPU=opteron again

	* src/configure 1.22:
	* src/configure.in 1.21:
		fix typos

2004-09-28  london
	* man/man3/PAPI_flops.3 1.10:
		Updated man page

	* man/man3/PAPI_destroy_eventset.3 1.11:
		Updated Man page

	* man/man3/PAPI_create_eventset.3 1.13:
		Updated the manpage

	* src/papi_internal.c 1.89:
		PAPI_create_eventset was not checking for EventSet != PAPI_NULL
		as the documentation states

	* src/papi_internal.c 1.90:
		Oops forgot to dereference the pointer

	* src/papi_hl.c 1.68:
		Better error codes returned

2004-09-28  terpstra
	* src/papi.h 1.131:
		Update comment for profiling scale factor.

2004-09-28  mucci
	* tools/papiex/main.c 1.14:
	* tools/papiex/papiex.1 1.4:
	* tools/papiex/papiex.c 1.21:
		More fixes for shells. CSH is unusable with multiplexing and forks, this
		is due to the broken design of csh that closes all FD and resets sig handlers
		before starting.

	* src/multiplex.c 1.55:
		BUG! You can pass NULL to PAPI_stop for the values array. MPX_stop didn't
		allow this. Dumb, dumb, dumb.

	* tools/papiex/papiex.c 1.20:
		Fixed a nasty bug in forking. This showed up when using multiplex eventsets
		and bash and then starting processes in the bash shell. We always got
		profiling timer expired messages, meaning an itimer was being delivered to
		the stock handler! Are itimers really supposed to be inherited? Well, they
		sure seem to be in bash. The fix was to stop the running eventset before the
		fork and then start it after the fork. This stops and starts the timer. The
		other solution was to just temporarily disable the itimer, but that exposes the
		guts too much.

	* src/multiplex.c 1.56:
	* src/papi.c 1.280:
		Changes to PAPI_shutdown. Better cleanup routine that won't leave dud
		event sets around.
		
		Fixes to multiplex. Removed asserts. If things fail, they fail and continue
		to run. Error checking has been added. This allows things to run more smoothly.

	* src/multiplex.c 1.57:
		Removed another assert...

2004-09-27  london
	* src/ctests/Makefile 1.121:
		kurfin test added back to the Makefile

	* src/genpapifdef.c 1.28:
	* src/papi.c 1.277:
	* src/papi.h 1.129:
		Check to make sure PAPI_thread_init is not called more than once.  It also
		checks to make sure PAPI_library_init is called before PAPI_thread_init.
		
		I did not add a check for multiplex initialization as this will be removed anyway
		in a future release (The initialization routine that is).

	* src/papi.c 1.278:
		Fixed a memory leak, PAPI_profil was mallocing memory for the sprofil buffer
		and it was never being freed.  In addition, PAPI_overflow and PAPI_sprofil
		both added new buffers when an eventcode was added with a non-zero threshold
		and was never checking to see if that EventCode already exists, now it does
		and updates the values.
		
		Currently there is no way for me to determine if the sprofil buffer needs
		to be freed at PAPI_shutdown() as it could be an internal buffer or a
		user supplied buffer, perhaps we should add a simple table of pointers that
		need to be freed as a first step to rolling our own malloc?

	* man/man3/PAPI_profil.3 1.9:
		Added a comment under bugs for the possible Memory leak

	* src/any-proc-null.c 1.5:
	* src/dadd-alpha.c 1.36:
	* src/extras.c 1.119:
	* src/linux-alpha.c 1.16:
	* src/linux-ia64.c 1.114:
	* src/multiplex.c 1.54:
	* src/papi.h 1.130:
	* src/papi_hl.c 1.67:
	* src/solaris-ultra.c 1.97:
	* src/solaris-ultra.h 1.35:
	* src/tru64-alpha.c 1.59:
	* src/x1.c 1.16:
		First round of changes for 64 bit semantics, this basically just converted all long long to
		long_long for consistency.  All API's will use PAPI defined sizes as:
		papi_i64, papi_i32, papi_i16, papi_ui64, papi_ui32, papi_ui16
		
		We need to introduce these because we expect the the size of long_long to be 64 bits for example
		but on some platforms long long is 128 bits, etc.....

	* man/man3/PAPI.3 1.18:
	* man/man3/PAPIF.3 1.11:
	* man/man3/PAPI_add_event.3 1.17:
	* man/man3/PAPI_create_eventset.3 1.12:
	* man/man3/PAPI_destroy_eventset.3 1.10:
	* man/man3/PAPI_enum_event.3 1.7:
	* man/man3/PAPI_event_code_to_name.3 1.5:
	* man/man3/PAPI_flops.3 1.9:
	* man/man3/PAPI_get_dmem_info.3 1.5:
	* man/man3/PAPI_get_event_info.3 1.4:
	* man/man3/PAPI_get_executable_info.3 1.10:
	* man/man3/PAPI_get_hardware_info.3 1.8:
	* man/man3/PAPI_get_opt.3 1.15:
	* man/man3/PAPI_get_overflow_event_index.3 1.2:
	* man/man3/PAPI_get_real_cyc.3 1.7:
	* man/man3/PAPI_get_shared_lib_info.3 1.7:
	* man/man3/PAPI_get_thr_specific.3 1.5:
	* man/man3/PAPI_get_virt_cyc.3 1.8:
	* man/man3/PAPI_ipc.3 1.5:
	* man/man3/PAPI_library_init.3 1.15:
	* man/man3/PAPI_list_events.3 1.11:
	* man/man3/PAPI_lock.3 1.7:
	* man/man3/PAPI_multiplex_init.3 1.7:
	* man/man3/PAPI_native.3 1.3:
	* man/man3/PAPI_num_counters.3 1.12:
	* man/man3/PAPI_num_events.3 1.4:
	* man/man3/PAPI_num_hwctrs.3 1.5:
	* man/man3/PAPI_overflow.3 1.15:
	* man/man3/PAPI_perror.3 1.8:
	* man/man3/PAPI_presets.3 1.7:
	* man/man3/PAPI_profil.3 1.8:
	* man/man3/PAPI_query_event.3 1.13:
	* man/man3/PAPI_read.3 1.12:
	* man/man3/PAPI_read_counters.3 1.9:
	* man/man3/PAPI_register_thread.3 1.5:
	* man/man3/PAPI_remove_event.3 1.6:
	* man/man3/PAPI_reset.3 1.12:
	* man/man3/PAPI_set_debug.3 1.7:
	* man/man3/PAPI_set_domain.3 1.11:
	* man/man3/PAPI_set_granularity.3 1.6:
	* man/man3/PAPI_set_multiplex.3 1.8:
	* man/man3/PAPI_shutdown.3 1.9:
	* man/man3/PAPI_sprofil.3 1.14:
	* man/man3/PAPI_start.3 1.13:
	* man/man3/PAPI_start_counters.3 1.11:
	* man/man3/PAPI_state.3 1.10:
	* man/man3/PAPI_stop_counters.3 1.9:
	* man/man3/PAPI_thread_id.3 1.10:
	* man/man3/PAPI_thread_init.3 1.14:
	* man/man3/PAPI_write.3 1.6:
		First round changes on man pages

	* src/papi.c 1.279:
		Changed PAPI_cleanup_eventset to call PAPI_sprofil instead of PAPI_profil
		as this could cause User supplied memory to be freed.

2004-09-27  mucci
	* src/ctests/kufrin.c 1.4:
		Removed redundant PAPI_library_init

	* tools/papiex/papiex.c 1.19:
		Fixed a bug caused by using strtok() on a pointer returned by
		getenv()

	* src/threads.c 1.19:
		Added check for setting thread ID function on AIX. On AIX, the
		set function is a NO-OP because the functions are dlsym'd dynamically
		at run-time. This is all because of the ANY_THREAD_GETS_SIGNAL behavior of
		the itimers.

	* src/papi.c 1.275:
	* src/threads.c 1.20:
		Additional minor fix for AIX

	* src/papi.c 1.274:
		This is a poor attempt at a lock in PAPI_library_init to prevent the
		kind of failures we saw when I checked in my broken multiplex1_pthreads
		test. This test (mistakenly) called PAPI_library_init multiple times causing
		confusion.
		
		We should add a test for this in 3.1
		
		This lock is currently a local static variable. It should be replaced with
		a system semaphore in 3.1. Note that we can't use PAPI locks here because
		they are not initialized yet. Nice huh?

	* src/papi.c 1.276:
		Missed a PAPI return statement!

	* tools/papiex/papiex.c 1.18:
		Commits for my semantic changes for PAPI_add_events

	* tools/papiex/main.c 1.13:
		initialized wait status

2004-09-27  you
	* src/configure 1.19:
	* src/configure.in 1.18:
		fix to check CPU=opteron

	* src/Makefile.in 1.2:
	* src/configure 1.18:
	* src/configure.in 1.17:
		add falg for pmapi path on aix

	* src/configure 1.20:
	* src/configure.in 1.19:
		check certain library on certain platform

	* src/Makefile.aix-power3 1.11:
	* src/Makefile.aix-power4 1.19:
	* src/Makefile.aix-power4-64bit 1.14:
	* src/Makefile.aix5-power3 1.20:
	* src/Makefile.aix5-power3-64bit 1.12:
		comment out PMAPI, it will be set by configure

2004-09-24  you
	* src/configure 1.17:
	* src/configure.in 1.16:
		output error message when the configure can't figure out the
		right platform

	* src/README 1.5:
		add comments for configure

	* src/aix-power.README 1.11:
		add information about first fail on aix5.2 & power4

	* src/configure 1.16:
	* src/configure.in 1.15:
		if bitmode is not supported, configure will print error message
		and fail

2004-09-24  mucci
	* src/ctests/multiplex1_pthreads.c 1.41:
	* src/ctests/overflow_pthreads.c 1.31:
		Much better error checking on both tests. If a pthread_create called before,
		we wouldn't report this as a fail.

	* src/papi.c 1.273:
		Removed unreferenced variable from remove_event

2004-09-24  london
	* src/ctests/multiplex1_pthreads.c 1.42:
		Bugs were introduced into the code, because case[x]() was calling
		init_papi_pthreads, but so was case[1]_pthreads which was bad as
		the init is initializing the library, etc....  This hopefully will
		fix all the platforms.

	* man/man3/PAPI_overflow.3 1.14:
	* man/man3/PAPI_profil.3 1.7:
	* man/man3/PAPI_sprofil.3 1.13:
		Updated for forcing software overflow, and added PAPI_overflow for more info
		in the profil man pages

2004-09-23  you
	* src/jni/FlipInfo.java 1.1:
	* src/jni/FlopInfo.java 1.2:
	* src/jni/IpcInfo.java 1.1:
	* src/jni/PAPI_address_map.java 1.1:
	* src/jni/PAPI_domain_option.java 1.2:
	* src/jni/PAPI_event_info.java 1.1:
	* src/jni/PAPI_exe_info.java 1.2:
	* src/jni/PAPI_granularity_option.java 1.2:
	* src/jni/PAPI_hw_info.java 1.2:
	* src/jni/PAPI_inherit_option.java 1.2:
	* src/jni/PAPI_mh_cache_info.java 1.1:
	* src/jni/PAPI_mh_dcache_info.java 1.1:
	* src/jni/PAPI_mh_dtlb_info.java 1.1:
	* src/jni/PAPI_mh_icache_info.java 1.1:
	* src/jni/PAPI_mh_info.java 1.1:
	* src/jni/PAPI_mh_itlb_info.java 1.1:
	* src/jni/PAPI_mh_level_info.java 1.1:
	* src/jni/PAPI_mh_tlb_info.java 1.1:
	* src/jni/PAPI_multiplex_option.java 1.1:
	* src/jni/PAPI_option.java 1.2:
	* src/jni/PAPI_overflow_option.java 1.1:
	* src/jni/PAPI_preload_info.java 1.1:
	* src/jni/PAPI_shlib_info.java 1.1:
	* src/jni/PAPI_substrate_info.java 1.1:
	* src/jni/PapiJ.java 1.3:
		fixes for supporting papi3.0

	* src/jni/Makefile 1.4:
		fix for supporting 3.0

	* src/jni/Papi.c 1.5:
	* src/jni/examples/papilibtest.java 1.2:
		fix for 3.0

2004-09-23  mucci
	* src/multiplex.c 1.53:
	* src/papi_internal.h 1.152:
		Slight fix to prevent rentrant signals and fix up error strings.
		Multiplexing is still horribly broken when run on a BUSY aix 4.3 box

	* src/ctests/kufrin.c 1.3:
	* src/ctests/low-level.c 1.12:
	* src/ftests/accum.F 1.18:
	* src/ftests/description.F 1.14:
		added proper return value check for PAPI_add_events

	* src/papi.c 1.272:
		Partial success for PAPI_add_events/remove_events...

	* src/ctests/overflow_pthreads.c 1.30:
	* src/ctests/profile_pthreads.c 1.30:
	* src/ctests/zero_pthreads.c 1.24:
		Make these 3 tests consistent in terms on way that they start threads.
		zero_pthreads had a bug in thread arguments that showed up on
		big machines

	* src/ctests/multiplex1.c 1.42:
	* src/ctests/multiplex1_pthreads.c 1.40:
		Make these tests consistent with each other...finally. This may require
		some tweaking but looks ok at the moment.

	* man/man3/PAPI_add_event.3 1.16:
	* man/man3/PAPI_remove_event.3 1.5:
		Both calls can now partially succeed as before...just better return values.
		If partial success, return the number of consecutive entries that failed.
		
		We should have made length a pointer here...Ugh

2004-09-22  london
	* src/ctests/overflow_force_software.c 1.5:
		Updated to test removing/adding events with eventsets that have overflow
		on some events.

	* src/papi.c 1.271:
		We were checking in PAPI_list_events
		if number <= 0, but number was a pointer that wasn't dereferenced ;)

	* src/perfctr-2.6.x/CHANGES 1.1.1.6:
	* src/perfctr-2.6.x/etc/costs/Pentium4Xeon-3.0 1.1.1.1:
	* src/perfctr-2.6.x/etc/costs/PentiumIIIXeon-700 1.1.1.1:
	* src/perfctr-2.6.x/examples/global/x86.c 1.1.1.3:
	* src/perfctr-2.6.x/examples/perfex/x86.c 1.1.1.2:
	* src/perfctr-2.6.x/examples/self/x86.c 1.1.1.3:
	* src/perfctr-2.6.x/examples/signal/x86.c 1.1.1.4:
	* src/perfctr-2.6.x/linux/drivers/perfctr/Makefile 1.1.1.4:
	* src/perfctr-2.6.x/linux/drivers/perfctr/Makefile24 1.1.1.3:
	* src/perfctr-2.6.x/linux/drivers/perfctr/RELEASE-NOTES 1.1.1.6:
	* src/perfctr-2.6.x/linux/drivers/perfctr/marshal.c 1.1.1.2:
	* src/perfctr-2.6.x/linux/drivers/perfctr/version.h 1.1.1.6:
	* src/perfctr-2.6.x/linux/drivers/perfctr/x86.c 1.1.1.6:
	* src/perfctr-2.6.x/linux/drivers/perfctr/x86_setup.c 1.1.1.4:
	* src/perfctr-2.6.x/linux/drivers/perfctr/x86_tests.c 1.1.1.5:
	* src/perfctr-2.6.x/linux/drivers/perfctr/x86_tests.h 1.1.1.4:
	* src/perfctr-2.6.x/linux/include/asm-i386/perfctr.h 1.1.1.3:
	* src/perfctr-2.6.x/linux/include/asm-x86_64/perfctr.h 1.1.1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.21-20.EL-redhat 1.1.1.1:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.27 1.1.1.1:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.28-pre3 1.1.1.1:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.8.1 1.1.1.1:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.9-rc2 1.1.1.1:
	* src/perfctr-2.6.x/perfctr.spec 1.1.1.6:
	* src/perfctr-2.6.x/update-kernel 1.1.1.2:
	* src/perfctr-2.6.x/usr.lib/Makefile 1.1.1.6:
	* src/perfctr-2.6.x/usr.lib/event_set_amd.c 1.1.1.2:
	* src/perfctr-2.6.x/usr.lib/event_set_ppc.c 1.1.1.2:
	* src/perfctr-2.6.x/usr.lib/event_set_x86.c 1.1.1.3:
	* src/perfctr-2.6.x/usr.lib/x86.c 1.1.1.3:
		Perfctr 2.6.10.1 import

	* src/ctests/Makefile 1.120:
		Removed kufrin from default build until, a lockup is fixed

	* src/perfctr-2.6.x/usr.lib/Makefile 1.7:
		Resolved conflicts with the perfctr import

2004-09-22  terpstra
	* man/html/papi_profil.html 1.10:
	* man/html/papi_sprofil.html 1.11:
		Keep html pages current with man pages

	* man/man3/PAPI_profil.3 1.6:
	* man/man3/PAPI_sprofil.3 1.12:
		Split profile pages into two instead of just linking to one;
		Massive rewrite to finally *explain* profiling and the differences between
		profil and sprofil;
		Expansion to describe recent changes to definition of scale factor.

2004-09-22  mucci
	* tools/papiex/main.c 1.12:
	* tools/papiex/papiex.1 1.3:
	* tools/papiex/papiex.c 1.17:
	* tools/papiex/papiex.h 1.9:
		Added code for -q and code for PAPI 3.0.5. Deprecated -L option. Tested with
		Intel OpenMP.

2004-09-21  london
	* src/ctests/overflow_force_software.c 1.4:
		Upped the Threshold when PAPI_event = PAPI_TOT_INS, because the hardware overflow
		would get the exact number, but the software overflow's granularity is so bad
		that I can only get ~20 overflows during the test run, which was way off since
		we were looking for 160. New threshold = threshold*10 when PAPI_event=PAPI_TOT_INS

2004-09-21  terpstra
	* src/perfctr-p3.c 1.52:
		Propagated the fixes from the P4 substrates back to the P3

	* src/perfctr-p4.c 1.81:
		Fixed two nasty bugs:
		1. the clear_control_state routine was not clearing the nrictrs field;
		2. nracntrs was not initialized before being used in a counter swap call.
		
		This should fix the problem Kevin identified in removing overflows in P4.

	* src/ctests/Makefile 1.119:
	* src/ctests/byte_profile.c 1.1:
		Add byte_profile to demonstrate byte level address scaling and
		multi-event simultaneous profiling.

2004-09-21  mucci
	* man/man3/PAPI_add_event.3 1.15:
	* man/man3/PAPI_remove_event.3 1.4:
		Updates to reflect updated semanitcs

	* src/ctests/kufrin.c 1.2:
		Return PAPI_ESYS when you get an error from pthreads.c

	* src/papi.c 1.270:
	* src/papi_internal.c 1.88:
	* src/papi_internal.h 1.151:
	* src/papi_protos.h 1.46:
		Possible bug fix to Rick Kufrins observed threading problem with hundreds of
		eventsets.
		
		This involved doing locks when altering the global eventset map *which we
		weren't doing in the remove case*. Lookups still don't require a lock as
		we only check if the Eventset is < 0 or > totalSlots, which only ever
		increases...never decreases.
		
		Made lookup_eventset inline for performance.
		
		Fixed PAPI_add_events and PAPI_rem_events.
		
		PAPI_add_events now succeeds with ALL or NONE. Before it would return an
		error code but still have added events to the eventset! ARGH!
		
		PAPI_rem_events now does partial success. It will remove all possible ones
		and return the error code of the first error.

	* src/ctests/Makefile 1.118:
	* src/ctests/kufrin.c 1.1:
		In honor of Ricks ability to kill PAPI, he gets his own test case...
		
		64 threads, lots of events...this test may be deprecated for 3.0 release
		but for now, it's good to have.

2004-09-20  terpstra
	* src/papi.c 1.267:
		Tweaked the scale factor checking for a minor bug that caused the sprofile.c
		'single bucket' case (scale = 2) to fail.

	* src/perfctr-p4.c 1.80:
		Added #ifdef DEBUG to a couple of print_control calls

2004-09-20  london
	* src/ctests/overflow_force_software.c 1.2:
	* src/papi.c 1.265:
	* src/papi.h 1.127:
	* src/perfctr-p4.c 1.79:
		Fixes for Force overflow when also trying to overflow in hardware. This should
		fix all the bugs, with the exception you currently can't add an event to
		a EventSet that has a event with overflow turned on.  I am investigating to
		see if this is a general PAPI thing, or something wrong with the p4 substrate.

	* src/papi.c 1.266:
		Fix for Profiling with the new force software overflow, a flag
		was being set inproperly

	* src/papi.c 1.268:
		Change PAPI_remove_event to work without the user having to first call PAPI_overflow
		to remove overflow handeling on that event.

	* src/ctests/overflow_force_software.c 1.3:
		Ooops left my debug print statements in the file

	* src/multiplex.c 1.52:
	* src/papi.h 1.128:
		Changes PAPI_OVERFLOW_FORCE_SW from 0x30 to 0x40 (oops)
		In Multiplex, set default values for variables to stop a compiler warning

	* src/extras.c 1.118:
		
		Bug in software overflow version of profile, this bug, would cause weighted
		smaples, to always increment by 255 as it was - the threshold, instead of the
		deadline, so once a threshold was exceded it would always be exceded on each
		overflow after that.

	* src/papi.c 1.269:
		Changes for profil to work with forced software overflow, and allow profil to use derived
		events in that mode.  In addition, added automatic PAPI_profil calls when removing an event
		that is profiled.

2004-09-17  terpstra
	* src/ctests/multiplex2.c 1.23:
	* src/ctests/multiplex3_pthreads.c 1.28:
		Fixed a minor output formatting problem.

	* src/papi_protos.h 1.45:
		Addition of prototype for _papi_hwi_get_granularity().
		Not sure how the regression tests were compiling without this.

	* src/ctests/earprofile.c 1.19:
	* src/ctests/prof_utils.c 1.2:
	* src/ctests/prof_utils.h 1.3:
	* src/ctests/profile.c 1.50:
	* src/ctests/profile_twoevents.c 1.16:
		Fixed a minor reporting bug in the utility routines for
		profiling.

	* src/p4_events.c 1.46:
	* src/perfctr-p4.c 1.78:
		Check for L3 cache before adding L3 events to the event table.

	* src/extras.c 1.117:
	* src/papi.c 1.264:
		Expanded the definition of the scale factor in PAPI_profile
		to allow for byte level resolution of the address buckets
		as requested by Nathan Tallent and the gang at Rice.
		Also moved scale validity checks from PAPI_profile to PAPI_sprofile
		to make sure they always get checked consistently.

2004-09-17  mucci
	* src/multiplex.c 1.51:
		Slightly better error handling and the removing of a few asserts...most are still necessary due to this code. Yes, I promise a rewrite for PAPI 3.1. Promise!
		
		Asserts should be used when there is absolutely positively no way to handle
		a catastrophic error...(and this usually isn't required)
		
		Or,they should be used for debugging and then compiled with -DNDEBUG for
		production release.
		
		We currently can't ship with -DNDEBUG because of the code in multiplex.c. :-(

	* src/papi_internal.c 1.87:
		Removed debugging asserts...

	* src/irix-mips.c 1.95:
		Removed dead code....

2004-09-16  terpstra
	* src/p4_events.c 1.45:
		New events implemented based on input from Brinkley Sprunt:
		PAPI_LD_INS
		PAPI_SR_INS
		PAPI_LST_INS
		and a bunch of L2 and L3 cache events.
		They haven't been extensively tested, but at least in the case of sdsc-mpx
		the loads and stores generate numbers.
		Further testing would be beneficial.

2004-09-16  mucci
	* src/papi.h 1.126:
		Bumped the revision number for 5. This is needed for code that depends
		on the PAPI_event_info_t structure, like papiex.

2004-09-15  you
	* src/aix.c 1.45:
		fix the segfault sameer reported

2004-09-15  terpstra
	* src/Makefile.linux-perfctr-p4 1.38:
	* src/linux-perfctr.README 1.11:
	* src/p4_events.c 1.44:
	* src/perfctr-p4.c 1.77:
		Changes in the way event tables are handled on Pentium 4. Now, a base table is loaded
		for all p4s, and other tables are conditionally overloaded based on model number, #defines,
		and/or environment variables. Following Phil's model there is now compile time or run time
		control over the definition of PAPI_VEC_INS and PAPI_FP_OPS.
		To minimize overlap and maximize flexibility, PAPI_FP_INS counts ONLY events passing
		through the FP unit, but effective use of tagged native events can change that behavior
		one the fly.
		Tagging conventions have been defined as follows:
		Tag 1: PAPI_FP_INS
		Tag 2: PAPI_FP_OPS
		Tag 3: PAPI_VEC_INS
		Tag 4: undefined

	* src/papi_preset.c 1.16:
		Minor changes to allow dense event tables to overload existing tables.
		This allows a base event table to be modified for processor or compiler differences.
		In this way, events can be added, deleted or modified, based (for instance) on processor model number.
		Implemented and tested for Pentium 4. Possibly also useful for Pentium III/Athlon, etc.

2004-09-15  london
	* src/Makefile 1.11:
	* src/papi.c 1.263:
	* src/papi.h 1.125:
		*** empty log message ***

	* src/Makefile 1.12:
		Ugh, checking in the right version of Makefile

2004-09-14  london
	* src/solaris-ultra.c 1.96:
		Force software fix

	* src/ctests/Makefile 1.117:
	* src/ctests/overflow_force_software.c 1.1:
		First round of changes for forcing software overflow.  The interface has
		been completely rewritten.  Now you pass in PAPI_OVERFLOW_FORCE_SW in the
		flags of the PAPI_overflow to force software overflow.  This will also allow
		users to overflow on Derived events which you can't do with hardware overflow.
		
		There is a new test called overflow_force_software to test the functionality,
		but I still need to fix Itanium and make sure that the force_software plays
		nicely with profiling and make sure the user can't do something stupid like
		set hardware overflow on 1 event and software overflow on another....
		
		More checkins to follow as I examine the above possibilities.
		
		Oh yeah, I didn't put this in the last message but, I added an option to
		PAPI_get_opt called PAPI_SUBSTRATE_SUPPORT which will pass back various info
		such as if hw overflow/profile support exists, etc....

	* src/aix.c 1.44:
	* src/configure 1.15:
	* src/dadd-alpha.c 1.35:
	* src/extras.c 1.116:
	* src/genpapifdef.c 1.27:
	* src/irix-mips.c 1.94:
	* src/linux-ia64.c 1.113:
	* src/papi.c 1.262:
	* src/papi.h 1.124:
	* src/papi_internal.c 1.86:
	* src/papi_internal.h 1.150:
	* src/papi_protos.h 1.44:
	* src/perfctr-p3.c 1.51:
	* src/perfctr-p4.c 1.76:
	* src/solaris-ultra.c 1.95:
	* src/tru64-alpha.c 1.58:
	* src/unicos-ev5.c 1.59:
	* src/x1.c 1.15:
		First round of changes for forcing software overflow.  The interface has
		been completely rewritten.  Now you pass in PAPI_OVERFLOW_FORCE_SW in the
		flags of the PAPI_overflow to force software overflow.  This will also allow
		users to overflow on Derived events which you can't do with hardware overflow.
		
		There is a new test called overflow_force_software to test the functionality,
		but I still need to fix Itanium and make sure that the force_software plays
		nicely with profiling and make sure the user can't do something stupid like
		set hardware overflow on 1 event and software overflow on another....
		
		More checkins to follow as I examine the above possibilities.

2004-09-14  jthomas
	* src/Makefile 1.10:
		Undid previous checkin

	* src/Makefile 1.9:
	* src/papi.c 1.261:
	* src/papi_internal.c 1.85:
	* src/perfctr-p3.c 1.50:
	* src/perfctr-p4.c 1.75:
	* src/unicos-ev5.c 1.58:
		Enabled set_granularity to either perform or return the correct
		error.

2004-09-13  mucci
	* src/Makefile.linux-perfctr-em64t 1.3:
	* src/Makefile.linux-perfctr-p4 1.37:
	* src/linux-perfctr.README 1.10:
	* src/p4_events.c 1.43:
	* src/perfctr-p4.c 1.74:
		Added code to configure PAPI_VEC_INS for MMX or SSE. New default is
		to count packed SSE instructions. Also, dynamically update the descriptions
		according to the settings of FP stuff I checked in before.

2004-09-13  you
	* src/Makefile.aix5-power3-64bit 1.10:
		changes to make the compiler on our power3 happy

	* src/Makefile.aix5-power3-64bit 1.11:
		CC_SHR  = xlc -bnoentry -bE:libpapi.exp -bM:SHR
		still not working on our power3. rollback to the old one which works on eagle.

2004-09-11  london
	* src/x1.c 1.14:
	* src/x1.h 1.7:
		Changed to _rtc for a real time clock

2004-09-10  mucci
	* src/papi_internal.h 1.149:
		Added code to put the thread ID as part of the debug label if threads are
		enabled.

2004-09-10  you
	* src/configure 1.14:
	* src/configure.in 1.14:
		hope this can fix the problem on solaris. What happened is that
		gnu uname would not give the info 'Ultra'.

2004-09-10  london
	* src/ftests/accum.F 1.17:
	* src/ftests/avail.F 1.23:
	* src/ftests/case1.F 1.14:
	* src/ftests/case2.F 1.15:
	* src/ftests/clockres.F 1.14:
	* src/ftests/cost.F 1.15:
	* src/ftests/description.F 1.13:
	* src/ftests/eventname.F 1.12:
	* src/ftests/first.F 1.20:
	* src/ftests/flops.F 1.13:
	* src/ftests/fmatrixlowpapi.F 1.19:
	* src/ftests/fmatrixpapi.F 1.24:
	* src/ftests/fmatrixpapi2.F 1.15:
	* src/ftests/fmultiplex1.F 1.25:
	* src/ftests/fmultiplex2.F 1.18:
	* src/ftests/ftests_util.F 1.36:
	* src/ftests/highlevel.F 1.14:
	* src/ftests/johnmay2.F 1.14:
	* src/ftests/native.F 1.42:
	* src/ftests/nineth.F 1.19:
	* src/ftests/second.F 1.24:
	* src/ftests/strtest.F 1.15:
	* src/ftests/tenth.F 1.21:
	* src/ftests/zero.F 1.15:
		Fixes so fortran will compile on the X1, this implies no
		implicit none, so beware

	* src/ctests/realtime.c 1.8:
		Added a 1% error range

	* src/Rules.x1 1.4:
		Added compile flag to support __FILE__ in fortran

	* src/ctests/tenth.c 1.28:
		Need to prewarm the do_misses for L2 misses

	* src/linux-memory.c 1.26:
		Updated the table for Intel, this was never setting the unified cache correctly,
		this has now been fixed.

2004-09-09  mucci
	* src/Rules.perfctr 1.17:
	* src/p4_events.c 1.42:
		Sure would help if I committed the working P4 patch to have
		configurable FP counts!

2004-09-09  you
	* src/configure 1.12:
	* src/configure.in 1.12:
		fix for solaris. tested on enterprise and hera.

	* src/configure 1.13:
	* src/configure.in 1.13:
		add nocona support by detect family(15) and model(3).

2004-09-09  london
	* src/x1.c 1.13:
	* src/x1.h 1.6:
		Fixes to make X1 work with Phil's latest changes

	* src/ctests/shlib.c 1.14:
		We only opened libpapi.so but on most 64 bit archs, it is libpapi64.so, I added
		a loop to try and open libpapi64.so if libpapi.so fails.

2004-09-08  you
	* src/ctests/earprofile.c 1.18:
		change c++ comment style to c comment style, it will make the
		compiler happy on aix

2004-09-08  mucci
	* src/ctests/multiplex3_pthreads.c 1.27:
		We missed setting retval on an error statement.

	* src/multiplex.c 1.50:
	* src/threads.c 1.18:
		Fixes for AIX from my massive update. Tests seem to pass on AIX 5

2004-09-08  jthomas
	* src/unicos-ev5.c 1.57:
		Fixed a typo of my own.

	* src/unicos-ev5.c 1.56:
		Tested and fixed the T3E substrate.  One typo and one function definition
		were the only problems.  The lock_init() had a compile error; I noticed
		it was completely empty, so I removed.  If we need it in the future, I'll
		be glad to put it back.

2004-09-08  london
	* src/ctests/multiplex2.c 1.21:
		Added check for 0 counts on multiplex was causing a bunch of failures that
		were not really failures because L2 DCM can be 0 on many platforms, added
		do_misses to take care of this, but I am still concerned PAPI_L2_ICM could
		come up as 0, but we will see.

	* src/tru64-alpha.c 1.57:
		ntv stuff for tru-alpha, only prints out the code in hex, should be a little more
		complete....

	* src/ctests/tenth.c 1.27:
		Added do_misses in addition to do_l1misses, it only does 1 iteration on a 4 MB size
		This ups the L2 misses being monitored on solaris, so there is not a large error
		margin.

	* src/ctests/multiplex2.c 1.22:
		Skip PAPI_L1_ICM and PAPI_L2_ICM to make sure we have counts, as we don't always have an
		instruction cache miss and currently we don't have a loop to force them.

2004-09-08  terpstra
	* src/ctests/tenth.c 1.26:
		Reworked this test to repeat the basic test 10 times and compute min, max, and sum.
		This gives better statistics and much smaller errors.
		It now passes every time on itanium.

2004-09-07  mucci
	* src/Makefile.linux-perfctr-em64t 1.2:
	* src/Makefile.linux-perfctr-p4 1.36:
	* src/linux-perfctr.README 1.9:
	* src/p4_events.c 1.41:
	* src/perfctr-p4.c 1.73:
		Added code for 2 things. First are #defines for types of counts
		PAPI_FP_INS and PAPI_FP_OPS should count.
		
		Second is the PAPI_PENTIUM4_FP environment variable that can change
		the behavior at run-time.
		
		Full description of this behavior in linux-perfctr.README.
		
		May be deprecated...this is a sample implementation, but works well.
		
		Default is unchanged on < Model 3 pentiums.

	* src/papi_fwrappers.c 1.68:
		Added wrappers for PAPI_unregistr/register

	* man/man3/PAPI_create_eventset.3 1.11:
	* man/man3/PAPI_enum_event.3 1.6:
	* man/man3/PAPI_get_executable_info.3 1.9:
	* man/man3/PAPI_register_thread.3 1.4:
	* man/man3/PAPI_set_multiplex.3 1.7:
	* man/man3/PAPI_thread_id.3 1.9:
	* man/man3/PAPI_thread_init.3 1.13:
	* man/man3/PAPI_unregister_thread.3 1.1:
		Added new information about OpenMP and dumb calls like omp_get_thread_num
		that don't reflect new LWP-IDs.
		
		Added error values.
		
		Fixed PAPI_PRESET stuff in set_multiplex.

	* src/solaris-memory.c 1.10:
	* src/solaris-ultra.c 1.94:
		Removed an exit found in the code and lots of unused variables.

2004-09-07  terpstra
	* src/examples/PAPI_profil.c 1.5:
	* src/examples/sprofile.c 1.4:
		Forgot to check these in the other day when I converted max
		scale factor from 65535 to 65536.

	* src/p4_events.c 1.40:
		Added a definition for PAPI_RES_STL that generates at least a
		few counts in command_line.

2004-09-07  you
	* src/power3.c 1.37:
	* src/power4.c 1.33:
		add _papi_hwd_ntv_bits_to_info function

2004-09-06  mucci
	* src/Makefile.solaris-ultra 1.58:
	* src/Makefile.solaris-ultra-64bit 1.11:
		Minor fixes with build performance options and gcc flags.

	* src/aix.h 1.24:
		added static keyword to inline

	* src/papi_internal.c 1.84:
	* src/papi_internal.h 1.148:
	* src/papi_protos.h 1.43:
		Moved around PAPIERROR one last time.

	* src/irix-memory.c 1.18:
	* src/irix-mips.c 1.93:
	* src/irix-mips.h 1.31:
		Added errno.h, fixed header files to be conformant and changed locking
		functions o the new papi_hwi_locks which don't lock when threads are not
		enabled.

	* src/Makefile 1.7:
	* src/Makefile.inc 1.96:
	* src/README 1.4:
	* src/Rules.perfctr 1.16:
	* src/ctests/locks_pthreads.c 1.7:
	* src/ctests/sprofile.c 1.24:
	* src/ftests/native.F 1.40:
	* src/papi.c 1.260:
		Makefile and Makefile.inc: install target now installs man pages, headers
		and libs.
		install all does the above AND test programs.
		
		Added note about new debugging in READER
		
		Added back -f<fixed>132 to Rules.perfctr which I deleted. Dop!
		
		papi.c: Added check for bad eventcode to add/remove_event. If you passed
		add event a bad event, you'd get PAPI_EBUG back!

	* src/ftests/native.F 1.41:
		Continuation line needed.

	* src/threads.c 1.17:
		Fixed to broadcast_signal on the platforms that send an itimer to any thread.
		(AIX). More discretion as to who we send the signal to!

	* src/tru64-alpha.c 1.56:
	* src/tru64-alpha.h 1.18:
		Locking fixes, not needed on this platform.

	* src/ctests/zero_omp.c 1.29:
		parallel end is not an openmp construct.

	* src/Makefile 1.8:
	* src/Makefile.linux-perfctr-em64t 1.1:
	* src/ctests/command_line.c 1.3:
	* src/p4_events.c 1.39:
	* src/perfctr-p4.c 1.72:
		Added support for Nocona. Now works. Counts FP instructions via
		scalar-DP-uop and x87 meaning single precision won't count.
		
		Added do_misses line to ctests/command_line along with cache flush.
		
		Added per model notes for p4_events.c

	* src/papi_internal.c 1.83:
	* src/papi_internal.h 1.146:
		Moved debugging macros to be inline so the optimizer can get rid of them
		hopefully...unfortunately when we don't have VARARG macros these functions
		still get called. ARGH!

	* src/extras.c 1.114:
		Cleaned up debugging macros, made the right ones PRF, OVF and INTDBG

	* src/extras.c 1.115:
		New linkage for broadcast call

	* src/Makefile.inc 1.97:
		Papi_protos.h wasn't on the headers dependency

	* src/aix.c 1.43:
		Renamed local lock_init

	* src/x1.c 1.12:
		New lock interface, papi_hwi_lock/unlock

	* src/papi_internal.h 1.147:
	* src/papi_protos.h 1.42:
		Last round of debugging header fixups

	* src/solaris-ultra.c 1.93:
	* src/solaris-ultra.h 1.34:
		Build fixes for Solaris, added errno.h always a good thing.
		Reordered debugging check for unknown thread.

2004-09-05  mucci
	* src/aix-memory.c 1.13:
	* src/aix.c 1.42:
	* src/aix.h 1.23:
	* src/alpha-memory.c 1.9:
	* src/any-proc-null.c 1.4:
	* src/dadd-alpha.c 1.34:
	* src/extras.c 1.113:
	* src/genpapifdef.c 1.26:
	* src/irix-memory.c 1.17:
	* src/irix-mips.c 1.92:
	* src/irix-mips.h 1.30:
	* src/linux-alpha.c 1.15:
	* src/linux-alpha.h 1.5:
	* src/linux-ia64-memory.c 1.18:
	* src/linux-ia64.c 1.112:
	* src/linux-ia64.h 1.39:
	* src/linux-memory.c 1.25:
	* src/linux.c 1.30:
	* src/multiplex.c 1.49:
	* src/p3_events.c 1.36:
	* src/p4_events.c 1.38:
	* src/papi.c 1.259:
	* src/papi_data.c 1.20:
	* src/papi_hl.c 1.66:
	* src/papi_internal.c 1.82:
	* src/papi_preset.c 1.15:
	* src/papi_protos.h 1.41:
	* src/perfctr-p3.c 1.49:
	* src/perfctr-p3.h 1.32:
	* src/perfctr-p4.c 1.71:
	* src/perfctr-p4.h 1.34:
	* src/pfmwrap.h 1.20:
	* src/power3.c 1.36:
	* src/power4.c 1.32:
	* src/run_tests.sh 1.18:
	* src/solaris-memory.c 1.9:
	* src/solaris-ultra.c 1.92:
	* src/t3e_events.c 1.10:
	* src/threads.h 1.1:
	* src/tru64-alpha.c 1.55:
	* src/unicos-ev5.c 1.55:
	* src/unicos-memory.c 1.10:
	* src/unicosmp-memory.c 1.2:
	* src/x1.c 1.11:
	* src/x1.h 1.5:
		Removed all references to DBG to use appropriate DBG macros.
		All messages to stderr now go through PAPIERROR
		
		New dispatch routine in extras.c takes a thread argument. If the substrate
		needs to look it up, extras.c doesn't have to and vice versa. Check the usage.
		Fixed all substrates...
		
		Changed locks to be internal and external to avoid confusion.
		
		Changed headers to be consistent. No more including #SUBSTRATE
		
		Removed bogus _papi_hwd_lock_init entry point to all substrates. This
		now happens inside the substrate as it should.
		
		Removed more bogus calls to getpid() which would break NPTL in ia64.
		
		Removed PAPI_DEBUG_ pollution. User now sets one environment variable
		PAPI_DEBUG to be any/all of THREADS,OVERFLOW,API,ALL etc...
		
		Tested on IA64/x86_64/Pentium3/Pentium4 not Nocona or 2.6 kernels.
		
		Changed run_tests.sh to actually print the tests in the order they are
		run!
		
		Lots more testing to follow...to be tested is everything non-linux
		and Nocona.

	* src/any-null-memory.c 1.7:
	* src/any-null.c 1.36:
	* src/any-null.h 1.12:
		removing more linux/x86isms from this code. Added lock static lock init
		which is no longer called from the high level.

	* src/ctests/Makefile 1.116:
	* src/ctests/locks_pthreads.c 1.6:
	* src/ctests/multiplex2.c 1.20:
	* src/ctests/multiplex3_pthreads.c 1.26:
	* src/ctests/native.c 1.48:
	* src/ctests/profile_twoevents.c 1.15:
	* src/ctests/sprofile.c 1.23:
	* src/ctests/test_utils.c 1.51:
	* src/ctests/test_utils.h 1.29:
	* src/ctests/zero_omp.c 1.28:
	* src/ctests/zero_pthreads.c 1.23:
		Makefile: Added unregister_pthreads test case.
		locks_pthreads.c: Changed test_fail to test skip if thread support not available.
		multiplex2: added check for zero counts
		multiplex3_pthreads: made it look like multiplex2, removed crufty special case code
		native.c: Added initializer to IA64 array, we were overwriting memory!
		profile_twoevents.c sprofile.c: removed comparison of subtraction of two unsigned > 0
		that's always greater than zero because of the data type.
		test_utils.c: changed message to Error
		test_utils.h: changed MAX_TO_ADD to 5 to try and get some decent presets for multiplex cases
		zero_omp.c: Added tough test case submitted by portland group, now uses unregister_thread.
		zero_pthreads.c: Added unregister code and use 4 pthreads instead of 2

	* src/Rules.perfctr 1.15:
	* src/Rules.pfm 1.12:
		Added code for multiple compilers, COMPILER=INTEL,PGROUP,PATHSCALE
		default is GCC
		Added openmp target for INTEL
		Tested with INTEL, PGROUP, PATHSCALE

	* src/libpfm-2.0/include/perfmon/pfmlib_compiler.h 1.2:
		Added fixes so this would compile with INTEL 8.0 compiler, which defines
		the GCC defines! ARGH!

	* src/threads.c 1.16:
		Entirely new thread handling library, required for unregister thread
		and other goods. Now uses __thread keyword with GCC 3 for superfast
		TLS lookups (no searching, constant time!)
		
		New entry points to thread lookup..._papi_hwi_lookup_thread()

	* src/papi.h 1.123:
	* src/papi_internal.h 1.145:
		Restructured TLS and LOCK definitions so the user can't mess up
		PAPI's locks and TLS.
		
		User now has these TLS structures:
		>
		> #define PAPI_USR1_TLS		0
		> #define PAPI_USR2_TLS		1
		> #define PAPI_HIGH_LEVEL_TLS     2
		> #define PAPI_NUM_TLS		3
		
		And these lock structures
		> #define PAPI_USR1_LOCK          	0       /* User controlled locks */
		> #define PAPI_USR2_LOCK          	1       /* User controlled locks */
		> #define PAPI_NUM_LOCK
		
		Naming is now consistent between the two.
		
		Added papi_unregister_thread prototype.
		
		Fixed up debug macros, added DEBUG_ALL and DEBUG_PROFILE, PRFDBG and PAPIERROR
		the new PAPIERROR message routine to be used WHENEVER you MUST print something
		to stderr!!!!
		
		Usage: PAPIERROR("message with no leading Error or trailing punctuation...%d %d", arg1, arg2...)
		
		Added defines fro NEED_CONTEXT and DONT_NEED_CONTEXT for new _papi_hwi_start_signal/stop_signal routines.
		
		Restrructured include files. All papi files should now include 2 things.
		
		#include papi.h
		#include papi_internal.h
		
		papi_internal.h now includes the substrate for you.
		
		Moved/modified threadinfo_t structure to threads.h

	* src/Makefile.any-null 1.13:
	* src/Makefile.inc 1.95:
	* src/Makefile.linux-perfctr-athlon 1.9:
	* src/Makefile.linux-perfctr-opteron 1.16:
	* src/Makefile.linux-perfctr-p3 1.21:
	* src/Makefile.linux-perfctr-p4 1.35:
	* src/Makefile.linux-pfm-itanium 1.21:
	* src/Makefile.linux-pfm-itanium2 1.15:
		Makefile.any-null: Slowly removing all linux dependance from any-null substrate. More to go.
		Makefile.inc: add threads.h
		Makefile.linux-perfctr-athlon: Removed sse flags to support OLD athlons
		Makefile.linux-*: Added support for different compilers selectable by COMPILER=INTEL,PGROUP,PATHSCALE
		default is GCC of course, tested with INTEL, PATHSCALE. PGROUP doesn't compile assembly yet...

2004-09-01  terpstra
	* src/ctests/earprofile.c 1.17:
	* src/ctests/prof_utils.h 1.2:
	* src/ctests/profile.c 1.49:
	* src/ctests/profile_pthreads.c 1.29:
	* src/ctests/profile_twoevents.c 1.14:
	* src/ctests/sprofile.c 1.22:
		In one of my more anal-retentive moments, I decided the profil scale factor couldn't exceed 65535, or 0xFFFF
		This is because in the olden days, scale was implemented as a short (16-bit) int.
		These days, scale is an unsigned int (32-bits), which can easily hold more than 0xFFFF.
		AND 65535/65536 produces a rounding error for a nominal scale of 1.
		So, I broke with tradition and made maximum scale == 65536 for all our profile tests.

2004-08-31  terpstra
	* src/ctests/cost.c 1.24:
		Stuff added to cost to elucidate the cost distribution problem identified by Phil.
		Check out the -d and -s command line options to display cost distribution and
		standard deviation distribution.

	* src/examples/PAPI_profil.c 1.4:
	* src/examples/sprofile.c 1.3:
		Cleanup to match the profiling code in ctests.

2004-08-31  london
	* src/irix-mips.c 1.91:
		Added _papi_hwd_ntv_bits_to_info  and
		_papi_hwd_ntv_code_to_bits.

	* src/configure 1.11:
	* src/configure.in 1.11:
		Submitting the fix for Solaris for the 2nd time, be careful
		overwriting changes ;)

2004-08-31  jthomas
	* src/solaris-ultra.c 1.91:
	* src/solaris-ultra.h 1.33:
		Updates for the new ntv functions.  Compiles AND works.

2004-08-30  you
	* src/configure 1.10:
	* src/configure.in 1.10:
		add t3e

2004-08-27  you
	* src/configure 1.8:
	* src/configure.in 1.8:
		add some fix for solaris-ultra. remove some redundant chekas
		Kevin suggeted

	* src/configure 1.9:
	* src/configure.in 1.9:
		fix for irix

	* src/configure 1.7:
	* src/configure.in 1.7:
		fix for x1

2004-08-27  terpstra
	* src/perfctr-p4.c 1.70:
		Fixed allocation problem with pebs conflict.
		Previously we were bailing out when we updated the control structure.
		This was leaving events in an indeterminate state and screwing things up.
		Now we trap for pebs conflicts during event resource allocation, which prevents
		them from ever making it to the event list.
		Thanks to Aleksandar Donev for finding this stinker.

2004-08-27  jthomas
	* src/p3_events.c 1.35:
	* src/t3e_events.c 1.9:
		Fixed some compile warnings.

	* src/unicos-ev5.c 1.54:
		branches.c works.

2004-08-26  london
	* src/configure 1.5:
		Ooops forgot I need this too

	* src/ctests/Makefile 1.114:
	* src/ctests/command_line.c 1.1:
		New test that takes presets [Native or PAPI] from the command_line and attempts
		to add them in that order, starts them, does 1 do_flops and then stops and prints
		out values.  This will pass if no arguments are given or the tests_quiet arg is passed
		in.  Meant as an easy way to verify problems with our allocation scheme (IE can only
		add in this order, or can add if you add this event, etc....)

	* src/x1.c 1.10:
		Add the ntv stuff for x1

	* src/papi_fwrappers.c 1.67:
		We were copying info.event_note which apparently does not exist anywhere
		and I assume it is suppose to be info.note instead.  The question is
		how was papi_fwrappers.c compiling anywhere?  Dan, can you check this
		to make sure I didn't do anything wrong just in case.  Line 361.

	* src/configure.in 1.5:
		It should be tru64, not true64 for the Makefile on alpha not
		using DADD.

	* src/configure 1.6:
	* src/configure.in 1.6:
		Wouldn't detect Solaris correctly, this is now fixed.

2004-08-26  terpstra
	* src/ctests/command_line.c 1.2:
		This is a waay cool little utility.
		But it was segfaulting on PAPI_perror().
		And it was failing to count if an event didn't add.
		I fixed it.
		Thanks, Kevin!

	* src/ctests/Makefile 1.115:
	* src/ctests/earprofile.c 1.16:
	* src/ctests/prof_utils.c 1.1:
	* src/ctests/prof_utils.h 1.1:
	* src/ctests/profile.c 1.48:
	* src/ctests/profile_pthreads.c 1.28:
	* src/ctests/profile_twoevents.c 1.13:
	* src/ctests/sprofile.c 1.21:
		Rewrite of the profiling routines. They now share a great deal of common code,
		found in prof_utils.c. I don't know if this is any easier, but at least we're making
		the same mistakes the same way every time. Hopefully this will improve maintainability.

2004-08-24  terpstra
	* src/p3_events.c 1.34:
	* src/t3e_events.c 1.8:
		Modified _papi_hwd_ntv_code_to_bits() to hand back data instead
		of a pointer to a structure.

	* src/extras.c 1.112:
		Explicit initialization of retval in
		_papi_hwi_get_native_event_info() to avoid a compiler warning.

	* src/p4_events.c 1.37:
		Added a comment to the _papi_hwd_ntv_code_to_bits() routine.

	* src/linux-ia64.c 1.111:
		Implementation of NULL stubs for _papi_hwd_ntv_code_to_bits() and _papi_hwd_ntv_bits_to_info() routines.
		I'd rather implement real routines, but I'm not sure where the register info is stored in itanium.

2004-08-24  you
	* src/configure 1.4:
	* src/configure.in 1.4:
		add cray-x1

2004-08-23  jthomas
	* src/unicos-ev5.c 1.53:
		Updated T3e with all major functionality working.

2004-08-23  you
	* src/configure 1.3:
	* src/configure.in 1.3:
		still fix for power4 aix5

	* src/Makefile.in 1.1:
		this file is needed by configure

	* src/config.h.in 1.1:
	* src/configure 1.1:
	* src/configure.in 1.1:
		add configure, it would generate right Makefile for the platforms we currently support.
		configure --prefix=/... --with-bitmode=64
		bitmode default is 32, and it won't be 64 if the platform does not support 64 bit mode.
		prefix default is /usr/local

	* src/configure 1.2:
	* src/configure.in 1.2:
		little twist for aix5.2

2004-08-20  jthomas
	* src/t3e_events.c 1.7:
		Added an extra definition of a function on my previous
		commit.

2004-08-20  terpstra
	* src/papi.c 1.258:
	* src/perfctr-p3.c 1.48:
	* src/perfctr-p4.c 1.69:
		More support for DERIVED_CMPD. Basically, I had to allow
		overflow to work on DERIVED_CMPD events as well

2004-08-18  terpstra
	* src/papi_internal.c 1.81:
		Added a case for DERIVED_CMPD, a derived type that has existed forever,
		but was never implemented. It does nothing, but should be supported. I added
		it to the P4 event table when testing the avail changes. That broke papi_internal.

	* src/ctests/avail.c 1.30:
		Ya gotta change the code, not just the help text. Doh!

2004-08-18  jthomas
	* src/ctests/profile.c 1.47:
		profile.c was seg faulting on t3e because we hard-
		coded some values concerning data-type sizes.  Tested on the
		pentium3.  If I hurt another substrate, let me know and I'll
		implement another fix.

	* src/t3e_events.c 1.6:
		Added  _papi_hwd_ntv_bits_to_info().

	* src/p3_events.c 1.33:
		Updated new native event table function.

2004-08-17  jthomas
	* src/extras.c 1.110:
		PAPI's version of ffsll wasn't working properly in the case
		sizeof(int)==sizeof(long_long).

2004-08-17  terpstra
	* src/extras.c 1.111:
	* src/p3_events.c 1.32:
	* src/p4_events.c 1.36:
	* src/papi.h 1.122:
	* src/papi_protos.h 1.40:
		Changes to PAPI to implement reporting of information on native events.
		Adds a new _hwd_ call:
		_papi_hwd_ntv_bits_to_info()
		that converts a hwd_register_t structure into a series of names and values.
		See the bottom of p4_events.c for a reference implementation;
		See the bottom of p3_events.c for the minimum 'no-op' implementation to pass the linker.
		
		I thought I checked these in yesterday, but forgot to merge first. Oops.

	* src/ctests/avail.c 1.28:
		Beefed up avail.c to make it work more like a tool and less like a test.
		Try typing avail -h.
		New options to display in the old tabular format (-t),
		and the new full detail format (-f).
		As well as the event detail format (-e).

	* src/papi_fwrappers.c 1.66:
		Minor mods to make PAPIf_get_event_info work with the new event_info struct.
		Very little change was needed.
		Doesn't support all C functionality, but at least what it does support now works as advertised.

	* src/ctests/avail.c 1.29:
		Rearrangement of options.

2004-08-16  terpstra
	* src/ctests/avail.c 1.27:
		Oops.
		Added code to support the full info display of a named native event.

	* src/ctests/avail.c 1.26:
	* src/ctests/native_avail.c 1.18:
		Changes to PAPI ctests to implement reporting of information on native events.
		avail now supports a new command line parameter:
		> avail -f(ull) PAPI_TOT_INS
		will present all information on one specific event, including all native event info
		for each term associated with a preset event.

2004-08-16  min
	* src/linux-ia64.c 1.110:
		
		return an error when the user try to set the domain to PAPI_DOM_OTHER
		  in function set_domain

	* src/irix-mips.c 1.90:
		
		return an error when the user tries to set multiple overflow on
		two and more events and these events happen to be counted by one
		hardware counter.

2004-08-14  min
	* src/irix-mips.c 1.89:
	* src/linux-ia64.c 1.109:
	* src/solaris-ultra.c 1.90:
		
		changed set_granularity function according to dan's suggestion

2004-08-13  mucci
	* src/Makefile.linux-perfctr-opteron 1.15:
	* src/Makefile.linux-perfctr-p4 1.34:
	* src/Rules.perfctr 1.14:
		Common for x86_64 archtectures. If uname -m reports x86_64, then we
		build with -fPIC for the shared lib and append 64 to the library
		suffix.

2004-08-13  min
	* src/irix-mips.README 1.5:
	* src/irix-mips.c 1.87:
	* src/irix-mips.h 1.29:
		
		added multiple overflow support in IRIX

2004-08-13  jthomas
	* src/aix.c 1.41:
	* src/any-null.c 1.35:
	* src/dadd-alpha.c 1.33:
	* src/genpapifdef.c 1.25:
	* src/irix-mips.c 1.88:
	* src/linux-alpha.c 1.14:
	* src/linux-ia64.c 1.108:
	* src/papi.c 1.257:
	* src/papi.h 1.121:
	* src/papi_protos.h 1.39:
	* src/papivi.h 1.4:
	* src/perfctr-p3.c 1.47:
	* src/perfctr-p4.c 1.68:
	* src/solaris-ultra.c 1.89:
	* src/tru64-alpha.c 1.54:
	* src/unicos-ev5.c 1.51:
	* src/win2k/substrate/win32.c 1.17:
	* src/x1.c 1.9:
		Removed maxmem option from set_opt and all _papi_hwd_setmaxmem()
		references.

	* src/unicos-ev5.c 1.52:
	* src/unicos-ev5.h 1.15:
	* src/unicos-memory.c 1.9:
		Fixes for the T3E.  Profiling tests are still in the works.

2004-08-11  terpstra
	* src/papi.h 1.120:
		Clarification of the new EventInfo structure.

	* src/Makefile.linux-perfctr-p4 1.33:
		Phil's recent addition of the following line:
		
		SHRFLAGS	= -fPIC
		
		causes our Pentium 4 (torc17) to blow up with the following error:
		
		linux-memory.c: In function `cpuid':
		linux-memory.c:736: Can't find a register in class `BREG' while reloading `asm'.
		make: *** [libpapi.so] Error 1
		
		Seems like we've been here before. s the fPIC flag valid only for 64 bit x86 implementations?

2004-08-11  min
	* src/ctests/profilehw.c 1.10:
		
		removed this program from ctests directory.

	* src/solaris-ultra.c 1.88:
		
		tweak on set_granularity function

	* src/ctests/Makefile 1.113:
		
		minor change to compile memory.c

2004-08-10  jthomas
	* src/ctests/second.c 1.31:
		Cray T3e needs the same special case.

	* src/ftests/native.F 1.39:
		Added case for the Cray T3E.

	* src/papi.c 1.256:
		Fixed a bug with PAPI_get_event_info().  This escaped most
		substrates, but not the T3E or probably other 64-bit systems.
		An EventCode was where an i was supposed to be.  It's better
		now.

2004-08-10  min
	* src/ctests/Makefile 1.112:
	* src/ctests/clockcore.c 1.14:
	* src/ctests/cost.c 1.23:
	* src/ctests/papi_test.h 1.20:
		
		Add mix/max/stddev information to 'cost' and 'clockres' test cases

	* src/ctests/overflow_twoevents.c 1.18:
		
		change the output order

2004-08-09  jthomas
	* src/ctests/do_loops.c 1.26:
	* src/papi.c 1.255:
	* src/unicos-ev5.c 1.50:
		T3E updates.  Event add order corrected.  Updated for Dan's changes.
		Also, do_read() looked at /dev/zero which doesn't exist on the T3E,
		so I made it look at another big file (p3_events.c).

	* src/t3e_events.c 1.5:
		Some corrected presets.

2004-08-09  mucci
	* src/Makefile.linux-perfctr-p4 1.32:
	* src/Rules.perfctr 1.13:
	* src/ctests/Makefile 1.111:
	* src/ctests/zero.c 1.30:
	* src/p4_events.c 1.35:
	* src/perfctr-p4.c 1.67:
	* src/perfctr-p4.h 1.33:
		Fixes for Nocona/EMT64. Fairly simple changes. No test cases pass but
		that's due to other changes going on in the library. Retrofitting these
		changes on 3-0-4 seemed to work.
		
		Do NOT compile with -O2 or greater with GCC 3.3.3 or else things will dump
		core.

2004-08-09  london
	* tools/perfometer/perfometer.c 1.67:
		Was only sending the last event, should have been sending the strcat buffer,
		not the tmp variable ;)  A few additional debug statements.

2004-08-09  terpstra
	* src/ctests/avail.c 1.25:
	* src/ctests/memory.c 1.16:
	* src/ctests/native_avail.c 1.17:
		Checking in changes to ctests that I should've committed *before* leaving on vacation.
		Sorry, guys...

2004-08-06  london
	* tools/perfometer/perfometer.c 1.66:
		Change to Exe info, now send all start/end exe addresses as 64 bits to
		avoid truncation.  Plus some additional Debug statements.

2004-08-02  jthomas
	* src/Makefile.unicos-t3e 1.29:
	* src/ctests/native.c 1.47:
	* src/t3e_events.c 1.4:
	* src/unicos-ev5.c 1.48:
	* src/unicos-ev5.h 1.14:
	* src/unicos-memory.c 1.8:
		T3e updates - can count.

	* src/unicos-ev5.c 1.49:
		Huge error in _papi_hwd_read caused counts to be wacky at
		times.  35/77 tests pass now.

2004-07-30  jthomas
	* src/t3e_events.c 1.3:
		Mod to get native_avail to work.

2004-07-30  terpstra
	* src/papi.c 1.254:
	* src/papi.h 1.119:
	* src/papi_data.c 1.19:
	* src/papi_internal.c 1.80:
	* src/papi_internal.h 1.144:
	* src/papi_preset.c 1.14:
	* src/papi_preset.h 1.9:
		Major rewrite (first pass) of pepi_event_info functionality.
		Data structure changes have been implemented in the independent layer
		and tested on Pentium 4 and POWER3. No other changes should be required
		in other substrates (for now).
		
		CAVEAT: To conserve memory footprint and string copies, the info in the
		hwi_search_t structures on each substrate ARE ASSUMED TO BE CONST.
		Therefore, those platforms (Itanium??) that use non-standard event arrays
		should be examined to guarantee that the structure passed to
		_papi_hwi_setup_all_presets() is NOT MODIFIED after initialization.
		
		New functionality implemented in an interim version of avail includes
		the display of derived type, postfix operators, and developer notes.
		It also includes hex codes and names of all native events in a preset.
		
		Still to come: modifications to native event info to allow the display of
		hwd_register_t contents. This will require more significant changes in
		each substrate.

2004-07-29  jthomas
	* src/t3e_events.c 1.2:
		The t3e's preset map was incorrect.

2004-07-29  london
	* RELEASENOTES.txt 1.2:
		Updated the release number and added X1

2004-07-29  terpstra
	* src/genpapifdef.c 1.24:
		Changes to support the removal of the international strings
		files.

	* src/power3.c 1.35:
	* src/power4.c 1.31:
		Eliminate an unreferenced data structure.

	* src/aix.c 1.40:
	* src/any-null.c 1.34:
	* src/dadd-alpha.c 1.32:
	* src/irix-mips.c 1.86:
	* src/linux-ia64.c 1.107:
	* src/perfctr-p3.c 1.46:
	* src/solaris-ultra.c 1.87:
	* src/tru64-alpha.c 1.53:
	* src/unicos-ev5.c 1.47:
	* src/x1.c 1.8:
		Changed all substrates to support new event_info functionality.
		This change basically just adds a parameter to the
		_papi_hwi_setup_all_presets() call. If the new parameter is NULL,
		 nothing changes. If the new parameter is a pointer to a dense <notes>
		array, developer notes can be added in a space efficient way to any event.
		See the Pentium 4 implementation {perfctr-p4.c and p4_events.c}
		for more specifics.
		All other substrates are NULLed.
		NOTE: This tests clean on Pentium4 and POWER3.
		All other platforms beware...

	* src/p4_events.c 1.34:
	* src/perfctr-p4.c 1.66:
		This substrate {perfctr-p4.c and p4_events.c} is the reference implementation
		for changes to _papi_hwi_setup_all_presets()  to add new developer notes
		functionality. This change basically just adds a parameter to the
		call. If the new parameter is NULL, nothing changes.
		If the new parameter is a pointer to a dense <notes>array,
		developer notes can be added in a space efficient way to any event.

	* src/papiStrings.h 1.8:
	* src/papiStrings_IT.h 1.7:
	* src/papiStrings_US.h 1.7:
		Deprecated the header files that provided internationalization support
		for event strings and error messages. This 'feature', introduced
		by me 3 years ago, was a misguided attempt to add multiple language
		functionality to a product that didn't need it. It ended up just getting in the
		way and complicating things.
		Now, strings are initialized directly in papi_data.c.

	* src/extras.c 1.109:
		Minor tweaks in preparation to rewrite _papi_hwi_get_native_event_info()
		to better support more comprehensive documentation of native events.

2004-07-29  min
	* src/solaris-ultra.c 1.86:
		
		tweak on papi_hwd_reset

2004-07-28  jthomas
	* src/t3e_events.c 1.1:
		Event table for the t3e.

	* src/Makefile.unicos-t3e 1.28:
	* src/ctests/native.c 1.46:
	* src/ctests/overflow_index.c 1.3:
	* src/unicos-ev5.c 1.45:
	* src/unicos-ev5.h 1.13:
		Updated files for the t3e port.

	* src/unicos-ev5.c 1.46:
		Removed a #define that is no longer needed.

2004-07-28  min
	* src/ctests/second.c 1.30:
		
		added special treatment in IRIX

	* src/Makefile.solaris-ultra 1.57:
	* src/Makefile.solaris-ultra-64bit 1.10:
	* src/solaris-ultra.c 1.85:
		
		fixed the overflow but in UltraSparcIII

	* src/libpfm-2.0/examples/Makefile 1.2:
		
		recover the original Makefile in libpfm-2.0

	* src/ctests/second.c 1.29:
		
		changed the test events to PAPI_TOT_CYC and PAPI_TOT_INS

2004-07-28  london
	* src/unicosmp-memory.c 1.1:
		Ooops forgot to add this file

	* src/Makefile.unicos-x1-ssp 1.3:
		A few flag changes for Fortran

	* src/perfctr-2.6.x/usr.lib/Makefile 1.6:
		*** empty log message ***

	* src/perfctr-2.6.x/CHANGES 1.1.1.5:
	* src/perfctr-2.6.x/etc/costs/Athlon64-2.0 1.1.1.2:
	* src/perfctr-2.6.x/examples/global/ppc.c 1.1.1.2:
	* src/perfctr-2.6.x/examples/self/ppc.c 1.1.1.2:
	* src/perfctr-2.6.x/linux/drivers/perfctr/Makefile 1.1.1.3:
	* src/perfctr-2.6.x/linux/drivers/perfctr/RELEASE-NOTES 1.1.1.5:
	* src/perfctr-2.6.x/linux/drivers/perfctr/compat24.h 1.1.1.3:
	* src/perfctr-2.6.x/linux/drivers/perfctr/cpumask.h 1.1.1.2:
	* src/perfctr-2.6.x/linux/drivers/perfctr/ppc.c 1.1.1.3:
	* src/perfctr-2.6.x/linux/drivers/perfctr/ppc_compat.h 1.1.1.2:
	* src/perfctr-2.6.x/linux/drivers/perfctr/ppc_tests.c 1.1.1.2:
	* src/perfctr-2.6.x/linux/drivers/perfctr/ppc_tests.h 1.1.1.2:
	* src/perfctr-2.6.x/linux/drivers/perfctr/version.h 1.1.1.5:
	* src/perfctr-2.6.x/linux/drivers/perfctr/virtual.c 1.1.1.2:
	* src/perfctr-2.6.x/linux/drivers/perfctr/x86.c 1.1.1.5:
	* src/perfctr-2.6.x/linux/drivers/perfctr/x86_tests.c 1.1.1.4:
	* src/perfctr-2.6.x/linux/include/asm-i386/perfctr.h 1.1.1.2:
	* src/perfctr-2.6.x/linux/include/asm-ppc/perfctr.h 1.1.1.2:
	* src/perfctr-2.6.x/patches/aliases 1.1.1.4:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.27-rc3 1.1.1.1:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.5-7.95-suse 1.1.1.1:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.7 1.1.1.1:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.8-rc2 1.1.1.1:
	* src/perfctr-2.6.x/perfctr.spec 1.1.1.5:
	* src/perfctr-2.6.x/usr.lib/Makefile 1.1.1.5:
	* src/perfctr-2.6.x/usr.lib/ppc.c 1.1.1.3:
		Perfctr 2.6.9

	* src/Makefile.unicos-x1-msp 1.2:
	* src/Rules.x1 1.3:
		Some flag changes

2004-07-27  min
	* src/ctests/native.c 1.45:
		
		fix the compile warning message in tru64-alpha

	* src/pfmwrap.h 1.19:
		
		fix the compile warning in itanium2

	* src/ctests/profile.c 1.46:
		
		changed a local variable length from unsigned long to long,
		because the condition if (length > 0) would otherwise always
		be true.

2004-07-27  mucci
	* tools/vprof/vmon.c 1.4:
		Added GMPI_ID code from Craig Tierney

2004-07-27  jthomas
	* src/perfctr-p3.h 1.31:
		Removed a useless typedef of _papi_hwd_context_t.

2004-07-27  london
	* src/papi.c 1.252:
	* src/papi_internal.c 1.79:
		Definition for _papi_hwi_dummy_handler would not compile on the Cray X1, this is the
		fix.  Please test your platforms to make sure the fix doesn't screw up compiles on
		other platforms.

	* src/Makefile.unicos-x1-ssp 1.2:
	* src/Rules.x1 1.2:
	* src/x1.c 1.7:
		Turn off debugging and fix a variable that was never set before being used.  Luckily
		the compiler set it to 0, not it is explicit though ;)

	* src/Makefile.unicos-x1 1.5:
	* src/Makefile.unicos-x1-msp 1.1:
	* src/Makefile.unicos-x1-ssp 1.1:
	* src/Rules.x1 1.1:
	* src/ctests/overflow.c 1.54:
	* src/papi.c 1.253:
	* src/x1.c 1.6:
		Added debugging info in papi.c for overflow.  Fixed bug where X1 used hardware and software
		overflow at the same time, new Makefiles for msp and ssp libraries.  Added __crayx1 defines
		to overflow so it shows flops at correct rate and shows that the 2nd reading of floating
		point instrcutions is inaccurate (in this case 0), because we used hardware overflow

2004-07-24  min
	* src/Makefile.tru64-alpha 1.38:
	* src/alpha-memory.c 1.8:
		
		fix the compile warning message

	* src/Makefile.dadd-alpha 1.15:
		
		fix a compile warning message

	* src/Makefile.solaris-ultra 1.56:
	* src/Makefile.solaris-ultra-64bit 1.9:
		
		deleted a duplicated compile option

2004-07-23  london
	* src/unicos-x1.README 1.2:
		Added that overflow threshold for P-Chips is compared to the aggregate of the 4 SSP
		counters for software profiling, but the threshold is compared against each individual
		SSP counter for hardware overflow

	* src/papi.c 1.251:
	* src/papi.h 1.117:
	* src/papi_internal.c 1.78:
	* src/papi_internal.h 1.143:
		New setopt to override HW overflowing (Needed fo Cray X1)
		PAPI_FORCE_SW_OVERFLOW, setting this to 1 will force
		using software overflow.

	* src/unicos-x1.README 1.1:
		X1 Readme file

	* src/Rules.perfctr 1.12:
		Added shlib to test targets, look at this for example.
		
		Just need to add shlib to TARGETS:

2004-07-23  min
	* src/multiplex.c 1.48:
	* src/papi_internal.h 1.142:
	* src/threads.c 1.15:
		
		1. change the data type for pid to pid_t;
		2. change the data type for tid to unsigned long int;

	* src/Makefile.irix-mips 1.49:
	* src/irix-memory.c 1.16:
	* src/irix-mips.c 1.85:
	* src/papi_protos.h 1.38:
		Updated _papi_hwd_update_control_state()'s arguments to reflect
		Kevin's changes.

	* src/Makefile.irix-mips 1.50:
	* src/Makefile.irix-mips-64bit 1.17:
		
		added shared targets

	* src/Rules.pfm 1.11:
	* src/linux-ia64.c 1.106:
	* src/pfmwrap.h 1.18:
		
		1. added -D_GNU_SOURCE in the makefile;
		2. replaced getpid with syscall(__NR_gettid);
		3. other fixes to reflect Kevin's change;

	* src/linux.c 1.29:
		
		fixed a bug which caused itanium to include executable information of itself
		into the shared library array;

	* src/Makefile.solaris-ultra 1.55:
	* src/Makefile.solaris-ultra-64bit 1.8:
		
		added shared target

	* src/Makefile.solaris-ultra 1.54:
		
		deleted -DDEBUG option

	* src/Makefile.dadd-alpha 1.14:
	* src/Makefile.irix-mips-64bit 1.16:
	* src/Makefile.tru64-alpha 1.37:
	* src/dadd-alpha.c 1.31:
	* src/tru64-alpha.c 1.52:
		
		Updated _papi_hwd_update_control_state()'s arguments to reflect
		Kevin's changes.

2004-07-23  you
	* src/power4.c 1.30:
		minor fix to reflect Kevin's changes

	* src/Makefile.aix-power3 1.10:
	* src/Makefile.aix-power4 1.18:
	* src/Makefile.aix-power4-64bit 1.13:
	* src/Makefile.aix5-power3 1.19:
	* src/Makefile.aix5-power3-64bit 1.9:
		add -DNEED_FFSLL

	* src/power3.c 1.34:
		minor fixes to reflect previous changes

2004-07-23  terpstra
	* src/papi.h 1.118:
		Added MH_TYPE_WT and MH_TYPE_WB flag bits to the memory heirarchy stuff to allow encoding for write-through and write-back cache types.
		These bits are exclusive and not currently set anywhere. If neither is set, characteristic is 'not known' or 'not defined'.
		
		Also added a MH_TYPE_VECTOR cache type for Cray X1 support.
		Question: Does the cache array size now need to be bumped from 2 to 3 to support vector, instr, and data?

2004-07-22  min
	* src/Makefile.solaris-ultra 1.53:
	* src/Makefile.solaris-ultra-64bit 1.7:
	* src/solaris-ultra.c 1.84:
		
		Updated _papi_hwd_update_control_state()'s arguments to reflect
		Kevin's changes.

	* src/papi.c 1.250:
	* src/papi_internal.c 1.77:
		
		change the return type of function _papi_hwi_dummy_handler
		to PAPI_overflow_handler_t;

2004-07-22  terpstra
	* src/ctests/profile.c 1.45:
		Kevin's X1 changes went back to profiling the entire address
		space. This broke the recent fix I introduced for Itanium only.

	* src/p4_events.c 1.33:
	* src/p4_events.h 1.8:
		Updated defines to match most recent Intel docs; added a new
		native event group for model 3.

	* src/perfctr-p4.c 1.65:
		Updated _papi_hwd_update_control_state()'s arguments to reflect
		Kevin's changes.

2004-07-22  jthomas
	* src/perfctr-p3.c 1.45:
		Updated _papi_hwd_update_control_state()'s arguments to reflect
		Kevin's changes.

2004-07-22  london
	* src/Makefile.unicos-x1 1.4:
	* src/ctests/Makefile 1.110:
	* src/ctests/native.c 1.44:
	* src/ctests/native_avail.c 1.16:
	* src/ctests/profile.c 1.44:
	* src/ctests/test_utils.c 1.50:
	* src/ctests/zero.c 1.29:
	* src/extras.c 1.108:
	* src/genpapifdef.c 1.23:
	* src/irix-mips.c 1.84:
	* src/linux-ia64.c 1.105:
	* src/papi.c 1.249:
	* src/papi.h 1.116:
	* src/papiStrings.h 1.7:
	* src/papiStrings_IT.h 1.6:
	* src/papiStrings_US.h 1.6:
	* src/papi_data.c 1.18:
	* src/papi_internal.c 1.76:
	* src/papi_internal.h 1.141:
	* src/papi_protos.h 1.37:
	* src/perfctr-p3.c 1.44:
	* src/perfctr-p4.c 1.64:
	* src/solaris-ultra.c 1.83:
	* src/tru64-alpha.c 1.51:
	* src/unicos-ev5.c 1.44:
	* src/x1-native-presets.h 1.3:
	* src/x1-native.h 1.4:
	* src/x1-presets.h 1.3:
	* src/x1.c 1.5:
	* src/x1.h 1.4:
		Several Check ins as follows:
		New error code: PAPI_EPERM for cases where you don't have sufficent permissions to
		execute.  For example running Kernel or Exception count mode on the X1 or SGI
		machines.  This will also cause test cases to skip instead of failing.
		
		Support for hardware/software mixed profiling.  This doesn't mean you can do
		both at the same time, but allows the X1 to use hardware profiling when it can
		and software profiling when it can't
		
		The X1 Port:
		There are a few technical issues to realize with the X1 port, which I will
		further document in a X1 Readme file.
		For overflowing/profiling when only overflowing on the p-chip then the X1 port
		will use hardware overflowing support, but if overflowing on a e or m chip (alone
		or in combination with a p chip) then the port uses software overflow as the m and
		e chips don't support hardware overflow.
		
		Overheads are not consistant as it depends on which events you are monitoring, each
		chip has to be read by a seperate ioctl call.  This means that if you are monitoring
		events from all 3 chips, each start/stop/read requires 3 ioctl calls, and so if you
		monitor on only 1 chip at a time you get less overhead.
		
		There is now support for monitoring each m/e chip instead of an aggregated count of all
		of them.  PAPI currently doesn't use this, but this should be explored to see if
		perhaps we should.
		
		When running in MSP mode, currently we add all the counters from each ssp and return
		this value, but because ssp DM applications such as MPI jobs can take advantage of the ssp's
		(Running multiple mpi processes on one MSP), it is probably better to come up with a
		way to return each individual SSP, Dan and I have talked about possibly extending
		PAPI to support multiple dimension values that depend on the substrate it is on, maybe
		something to explore.
		
		The Cray X1 does not support shared objects, thus this is not supported.
		
		The presets need to be fleshed out, and decisions on what should be included where,
		for example should vector fp ins be included with the scalar fp ins?  In addition,
		there are 3 tlb's, vector, instruction and scalar.  How should this map?
		
		Cache information is not supported yet, but will be added at the same time I flesh
		out the presets.  In addition, I need to adjust the Makefile to compile a MSP and
		SSP version of the library.
		
		Fortran has not been tested yet, as I need to find the fortran compiler on the machine
		I have access to.  Everything should work, unless the X1 uses string formats the same
		way the T3E does and in this case I would just need to add the proper additional
		#defines.
		
		There are some more technical issues, but I will add those to the X1.README file that
		I will add later.
		
		Cheers,
		Kevin

2004-07-21  jthomas
	* src/Makefile.solaris-ultra 1.52:
	* src/Makefile.solaris-ultra-64bit 1.6:
		We had some errors in the case the user wanted to use the gcc
		compiler.

2004-07-19  terpstra
	* src/linux-ia64.c 1.104:
		Minor modifications to the declarations of the event tables so
		that itanium 1 can be distinguished from itanium 2.

2004-07-15  terpstra
	* src/power3.c 1.33:
	* src/power4.c 1.29:
		hwi_search_t structures were declared with PAPI_MAX_PRESET_EVENTS entries.
		This resulted in dead entries and an unnecessarily large footprint.
		I removed the fixed size constraint, renamed the tables for consistent naming convention,
		 and declared the structs as 'static const'.

2004-07-15  min
	* src/ctests/overflow_single_event.c 1.36:
		
		tweak to avoid compile warning message

	* src/ctests/first.c 1.43:
		
		tweak to avoid compilor warning message in Solaris

	* src/ctests/profile.c 1.43:
	* src/ctests/sprofile.c 1.20:
		
		tweak to avoid compilor warning message in Itanium

	* src/ctests/profile_pthreads.c 1.27:
		tweak to avoid compile warning message

	* src/linux-ia64.h 1.38:
		
		include  <libgen.h> which has the prototype for function basename

2004-07-14  min
	* src/ctests/papi_test.h 1.19:
	* src/ctests/test_utils.c 1.49:
		
		change the prototype for add_two_events

	* src/power4.c 1.28:
		
		nothing is changed except a blank line is gone.

	* src/Rules.pfm 1.10:
	* src/irix-mips.h 1.28:
	* src/linux-ia64.c 1.103:
	* src/linux-ia64.h 1.37:
	* src/pfmwrap.h 1.17:
	* src/power4.c 1.27:
		
		used another method to capture the overflow signal in Itanium

	* src/libpfm-3.0/examples/Makefile 1.2:
	* src/libpfm-3.0/examples/multiplex.c 1.2:
	* src/libpfm-3.0/examples/notify_self.c 1.2:
		
		My bad, should not check in these files.

	* src/libpfm-3.0/examples/Makefile 1.3:
		revoke the change made by me

	* src/ctests/overflow.c 1.53:
		changed the output order of the events

2004-07-14  you
	* src/aix.h 1.22:
		as we discovered that _AIXVERSION_510 and _AIXVERSION_520 are defined in standards.h,
		changed defined( _AIX51) || defined(_AIX52) to defined( _AIXVERSION_510) || defined(_AIXVERSION_520)

	* src/power3.c 1.32:
	* src/power4.c 1.26:
		remove old unnecessary comments

2004-07-13  min
	* src/ctests/first.c 1.42:
	* src/ctests/overflow.c 1.52:
	* src/ctests/overflow2.c 1.17:
	* src/ctests/overflow3_pthreads.c 1.14:
	* src/ctests/overflow_index.c 1.2:
	* src/ctests/overflow_pthreads.c 1.29:
	* src/ctests/overflow_single_event.c 1.35:
	* src/ctests/overflow_twoevents.c 1.17:
	* src/ctests/profile.c 1.42:
	* src/ctests/profile_pthreads.c 1.26:
	* src/ctests/profile_twoevents.c 1.12:
	* src/ctests/zero.c 1.28:
	* src/ctests/zero_flip.c 1.10:
	* src/ctests/zero_fork.c 1.3:
	* src/ctests/zero_omp.c 1.27:
	* src/ctests/zero_pthreads.c 1.22:
	* src/ctests/zero_smp.c 1.25:
		
		now these programs call add_two_events to add events to the eventset

	* src/ctests/test_utils.c 1.48:
		
		add a function called add_two_events. This function always adds PAPI_TOT_CYC
		into the eventset. Depending on the platform and availability of the event,
		this function also adds PAPI_FP_INS or PAPI_FP_OPS or PAPI_TOT_INS into
		the eventset.

2004-07-12  terpstra
	* src/ctests/profile.c 1.40:
		Modify to properly support Itanium's function descriptors instead of function pointers;
		Also tweak output to better handle 64-bit addresses.

	* src/ctests/profile.c 1.41:
		Cleaned up event checking for propagation to other profile
		tests.

2004-07-09  london
	* src/Makefile.aix-power3 1.9:
	* src/Makefile.aix-power4 1.17:
	* src/Makefile.aix-power4-64bit 1.12:
	* src/Makefile.aix5-power3 1.18:
	* src/Makefile.aix5-power3-64bit 1.8:
	* src/Makefile.any-null 1.12:
	* src/Makefile.dadd-alpha 1.13:
	* src/Makefile.inc 1.94:
	* src/Makefile.irix-mips 1.48:
	* src/Makefile.irix-mips-64bit 1.15:
	* src/Makefile.linux-alpha 1.6:
	* src/Makefile.solaris-ultra 1.51:
	* src/Makefile.solaris-ultra-64bit 1.5:
	* src/Makefile.tru64-alpha 1.36:
	* src/Makefile.unicos-t3e 1.27:
	* src/Makefile.unicos-x1 1.3:
	* src/Rules.perfctr 1.11:
	* src/Rules.pfm 1.9:
	* src/ftests/ftests_util.F 1.35:
	* src/run_tests.sh 1.17:
		Fixes so that the shlib test can find libperfctr.so.5 even if LD_LIBRARY_PATH
		or LIBPATH (AIX) is not set.  This should be considered a bandaid, and
		a better fix would be use autoconfig or some other measures.

2004-07-08  you
	* src/linux-ia64.c 1.102:
		new preset definition
		 PAPI_L1_LDM  =  L1D_READ_MISSES_RETIRED
		 PAPI_L2_LDM  =  L3_READS_DATA_READS_ALL
		 PAPI_L3_LDM  =  L3_READS_DATA_READS_MISS

2004-07-07  london
	* tools/perfometer/Perfometer_communication.doc 1.6:
	* tools/perfometer/perfometer.c 1.65:
		Tweaks to the communication for profiling and new perfometer features

2004-07-02  terpstra
	* src/ctests/earprofile.c 1.15:
	* src/ctests/profile_pthreads.c 1.25:
	* src/ctests/profile_twoevents.c 1.11:
		Tweak calling sequence to PAPI_profil to match new tighter
		prototype.

	* src/ctests/profile.c 1.39:
		Refactor and restructure this test.
		Now incorporates profile calls for all three bucket sizes, allowing direct comparison.
		Displays additional info about profile settings.
		Properly explains and mallocs memory for bin buffers.
		Profiles only on do_flops rather than the entire text address space.

	* src/papi.h 1.115:
		Remove deprecated structure fields for old mem_info descriptions;
		Expand descriptions of profile bucket and scaling info;
		Tweak PAPI_profil parameters for greater consistency and tighter typing

	* src/extras.c 1.107:
		Restructure low level profile support routines to properly handle bucket sizes.
		Bucket sizes shouldn't affect address resolution.
		Resolution defaults to minimum 2 addresses per bucket, modified by scale.
		Results are now identical for 16, 32, and 64 bit bucket sizes, if bin buffers are
		allocated appropriately.
		Also, proper checks are in place to guarantee no buffer overwrites.

	* src/ctests/Makefile 1.109:
		Deprecate profile_32 and profile_64 because they are now
		incorporated into profile.c.

	* src/ctests/papi_test.h 1.18:
		Expose prototype for fdo_flops to enable it to be used as an
		ending address for profile tests.

	* src/ctests/version.c 1.1:
		New test to examine full PAPI version. Probably should just be
		incorporated into avail.

	* src/ctests/profile_32.c 1.10:
	* src/ctests/profile_64.c 1.10:
		Deprecate these tests because they are now incorporated into
		profile.c.

	* src/papi.c 1.248:
		Set PAPI_profil bucket size to 16 as default if not set;
		Check for only one bucket size set; error if more;
		Tweak PAPI_profil parameters for greater consistency and tighter typing.

2004-07-02  mucci
	* src/ctests/shlib.c [papi-3-0-beta-3] 1.11.2.2:
		Added informative line about not found papi library that I thought had
		already been added.

	* src/Makefile.aix-power4 1.16:
	* src/Makefile.aix-power4-64bit 1.11:
	* src/Makefile.aix5-power3 1.17:
	* src/Makefile.aix5-power3-64bit 1.7:
	* src/aix-memory.c 1.12:
	* src/aix.h 1.21:
	* src/power3.c 1.31:
	* src/power4.c 1.25:
	* src/threads.c 1.14:
		Added changes from 3-0-3 branch....

	* src/Makefile.aix-power4 [papi-3-0-beta-3] 1.15.2.1:
	* src/Makefile.aix-power4-64bit [papi-3-0-beta-3] 1.10.2.1:
	* src/Makefile.aix5-power3 [papi-3-0-beta-3] 1.16.2.1:
	* src/Makefile.aix5-power3-64bit [papi-3-0-beta-3] 1.6.2.1:
	* src/aix-memory.c [papi-3-0-beta-3] 1.11.2.1:
	* src/aix.h [papi-3-0-beta-3] 1.20.2.1:
	* src/power3.c [papi-3-0-beta-3] 1.30.2.1:
	* src/power4.c [papi-3-0-beta-3] 1.24.2.1:
		Makefile fixes for the various forms of AIX5 and Powers. Fixed
		duplicate! update_shlib_info in power?.c, fixed header file includes
		fixed build for shared library, -bnoentry

2004-07-01  min
	* src/solaris-ultra.c 1.82:
	* src/solaris-ultra.h 1.32:
		
		used a different way to reset the counter and decreased
		a little bit overhead on _papi_hwd_read

2004-06-30  london
	* tools/perfometer/Perfometer_communication.doc 1.5:
	* tools/perfometer/perf_comm_utils.c 1.4:
	* tools/perfometer/perfometer.c 1.64:
	* tools/perfometer/perfometer_internal.h 1.4:
		New changes to the Profiling data to be sent back.  The backend should now be ready
		to support perfometer and profometer.

2004-06-29  mucci
	* src/libpfm-3.0/ChangeLog 1.2:
	* src/libpfm-3.0/ChangeLog [papi-3-0-beta-3] 1.1.1.1.2.1:
	* src/libpfm-3.0/include/perfmon/pfmlib.h 1.2:
	* src/libpfm-3.0/include/perfmon/pfmlib.h [papi-3-0-beta-3] 1.1.1.1.2.1:
	* src/libpfm-3.0/lib/Makefile 1.2:
	* src/libpfm-3.0/lib/Makefile [papi-3-0-beta-3] 1.1.1.1.2.1:
	* src/libpfm-3.0/lib/itanium2_events.h 1.2:
	* src/libpfm-3.0/lib/itanium2_events.h [papi-3-0-beta-3] 1.1.1.1.2.1:
	* src/libpfm-3.0/lib/pfmlib_common.c 1.2:
	* src/libpfm-3.0/lib/pfmlib_common.c [papi-3-0-beta-3] 1.1.1.1.2.1:
	* src/libpfm-3.0/lib/pfmlib_generic_ia64.c 1.2:
	* src/libpfm-3.0/lib/pfmlib_generic_ia64.c [papi-3-0-beta-3] 1.1.1.1.2.1:
	* src/libpfm-3.0/lib/pfmlib_itanium.c 1.2:
	* src/libpfm-3.0/lib/pfmlib_itanium.c [papi-3-0-beta-3] 1.1.1.1.2.1:
	* src/libpfm-3.0/lib/pfmlib_itanium2.c 1.2:
	* src/libpfm-3.0/lib/pfmlib_itanium2.c [papi-3-0-beta-3] 1.1.1.1.2.1:
		Updated patch from Stephane Eranian for L2 Cache events

2004-06-28  terpstra
	* src/papi.c 1.247:
	* src/papi.h 1.114:
		Add a new option to PAPI_get_opt() to report the complete papi version.
		Thanks to Rick Kufrin for the suggestion.
		See ctests/version.c for example usage.

2004-06-28  min
	* src/examples/Makefile 1.4:
	* src/examples/Makefile.AIX 1.1:
	* src/examples/Makefile.IRIX64 1.1:
	* src/examples/Makefile.OSF1 1.1:
	* src/examples/PAPI_add_remove_event.c 1.4:
	* src/examples/PAPI_add_remove_events.c 1.3:
	* src/examples/PAPI_flips.c 1.2:
	* src/examples/PAPI_flops.c 1.2:
	* src/examples/PAPI_get_executable_info.c 1.3:
	* src/examples/PAPI_get_opt.c 1.4:
	* src/examples/PAPI_get_real_cyc.c 1.3:
	* src/examples/PAPI_get_virt_cyc.c 1.3:
	* src/examples/PAPI_hw_info.c 1.3:
	* src/examples/PAPI_ipc.c 1.2:
	* src/examples/PAPI_overflow.c 1.3:
	* src/examples/PAPI_perror.c 1.2:
	* src/examples/PAPI_profil.c 1.3:
	* src/examples/PAPI_reset.c 1.2:
	* src/examples/PAPI_set_domain.c 1.2:
	* src/examples/PAPI_state.c 1.2:
	* src/examples/README 1.1:
	* src/examples/high_level.c 1.2:
	* src/examples/locks_pthreads.c 1.2:
	* src/examples/multiplex.c 1.3:
	* src/examples/overflow_pthreads.c 1.3:
	* src/examples/sprofile.c 1.2:
		
		example programs, tested in AIX, Linux, Solaris, IRIX

	* src/examples/run_examples.sh 1.1:
		
		added a shell script to test the example programs

	* src/linux-ia64.c 1.101:
		
		rename papi_hwd_mdi_init to mdi_init and change it's type to static

2004-06-22  terpstra
	* src/papi_internal.c 1.75:
		Convert EventSet > 100 sanity check into an assert.

2004-06-22  min
	* src/solaris-ultra.c 1.81:
		
		removed two useless global variables

	* src/linux-ia64.c 1.100:
		
		use a flexible way to define macro NUM_OF_PRESET_EVENTS

2004-06-22  mucci
	* src/threads.c [papi-3-0-beta-3] 1.13.2.1:
		Fixed an off-by-one-line lock on lookup function. This could affect
		distributed SMP's like Altix and the NovaScale.

2004-06-18  min
	* src/ctests/shlib.c 1.13:
		
		Now this program use the absolute path to find libpapi.so

	* src/Makefile.solaris-ultra 1.50:
	* src/Makefile.solaris-ultra-64bit 1.4:
	* src/solaris-ultra.c 1.80:
		
		moved the function from svr4.c to the substrate;
		
		reimplemented the function _papi_hwd_update_shlib_info by parsing
		the output of pmap

	* src/svr4.c 1.9:
		
		deprecated this file

	* src/Makefile.irix-mips 1.47:
	* src/Makefile.irix-mips-64bit 1.14:
	* src/irix-mips.c 1.83:
	* src/irix-mips.h 1.27:
		moved the function from svr4.c to the substrate

2004-06-16  london
	* tools/perfometer/Linux.inc 1.16:
	* tools/perfometer/Perfometer_communication.doc 1.4:
	* tools/perfometer/perfometer.c 1.63:
	* tools/perfometer/perfometer_internal.h 1.3:
	* tools/perfometer/tests/Makefile 1.29:
		Tweak on the communication model and first run implementation of the profile
		backend for profometer.

2004-06-15  london
	* tools/perfometer/Perfometer_communication.doc 1.3:
		Updated communication doc

2004-06-15  min
	* src/ctests/Makefile 1.108:
	* src/ctests/overflow_index.c 1.1:
		
		added a test program for PAPI_get_overflow_event_index

	* src/papi_data.c 1.17:
	* src/papi_internal.c 1.74:
		
		removed the static initialization for _papi_hwi_system_info;
		added necessary fields initialization for _papi_hwi_system_info in
		  function _papi_hwi_mdi_init() in papi_internal.c

	* src/papi.c 1.246:
		
		added error check for empty eventset for PAPI_get_overflow_event_index

2004-06-14  mucci
	* src/ctests/papi_test.h 1.17:
	* src/ctests/shlib.c 1.12:
		Test files should only include papi_test.h, nothing else!
		
		Added #ifdef NO_DLFCN to papi_test.h

	* src/ctests/cost.c 1.21:
	* src/ctests/multiplex1_pthreads.c 1.39:
	* src/ctests/overflow_twoevents.c 1.16:
		More test fixes. cost now uses ITERS definition from test_utils.h
		multiplex1_pthreads now ises DO_BOTH call insteaf of braindead
		loops. Fixed typecast in overflow_twoevents.c
		
		Still awaiting test case for PAPI_get_overflow_index from Min.

	* CVS-HOWTO 1.8:
		Added a note how to easily remove directories and directory structures
		from CVS.

	* src/ctests/shlib.c [papi-3-0-beta-3] 1.11.2.1:
		Removed bad headers and errno definition in shlib.c

	* src/ctests/papi_test.h [papi-3-0-beta-3] 1.16.2.1:
		Added proper dlfcn include

	* src/Makefile.any-null 1.11:
	* src/any-null.c 1.33:
	* src/any-null.h 1.11:
	* src/ctests/cost.c 1.22:
	* src/ctests/multiplex3_pthreads.c 1.25:
	* src/ctests/overflow3_pthreads.c 1.13:
	* src/perfctr-p3.h 1.30:
		Fixed up the test cases to look like each other, since they test the
		same thing.
		
		New cut at a much improved any-null substrate. Currently only working
		on x86 due to locking functions. This may help trace down the MPX issues
		on NCSA.

2004-06-11  terpstra
	* ChangeLogP303.txt 1.1:
		Change log of all commits between PAPI 3.0.2 and 3.0.3

	* RELEASENOTES.txt 1.1:
		A first cut at Release Notes for PAPI 3.0 beta 3.
		I'm sure there's more that I forgot than that I remembered, but it's a start.

	* src/papi_internal.c 1.73:
		For some reason, Windows doesn't like the fact that
		#include SUBSTRATE
		isn't in this file. Even though it isn't needed. It causes the next file in the compile line to fail.
		This change isn't needed for PAPI 3.0.3., but I didn't want to lose it.


