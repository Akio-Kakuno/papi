How do I use remote CVS anonymously?
------------------------------------

The first time, the Checkout phase:

> setenv CVSROOT :pserver:anonymous@hera.cs.utk.edu:/cvs/homes/papi
> cvs login
> Password: <cr>
> cvs co all|papi|src|man|spec|tools

The next time, the Update phase:

> cd <directory>
> cvs update

The last time: :-(

> cd <directory>
> cvs logout


How do I add a user 'username' to CVS?
--------------------------------------

0) You must be in the group papi. 
1) Login to nala.cs.utk.edu.
2) Make a temporary directory called foo.
3) Do the following:

> cd foo;
> cvs -d /cvs/homes/papi co CVSROOT
.
.
.
> cd CVSROOT
>

4) Add 'username' to the 'writers' file.
5) Add a password to the 'passwd' file with htpasswd program.

> /usr/local/apache/bin/htpasswd ~/tmp/CVSROOT/passwd 'username'
New password: <enter password>
Re-type new password: <again>
Added password for user 'username'
>

6) Commit the changes back to CVS.

> cvs commit -m "Added user 'username' to the cvs list"
.
.
.
cvs commit: Rebuilding administrative file database


How do I merge branches of the PAPI project back to the main trunk?
-------------------------------------------------------------------
1) Check out the main trunk of the PAPI project:
	> cvs checkout -P papi
2) Update the main trunk by joining with the branch:
	> cvs update -j papi-2-3-3
3) Tag the branch for future updates:
	> cvs tag papi-2-3-3m1
4) Resolve any outstanding conflicts

5) Commit the modified files back to the main trunk:
	> cvs commit ...
...later...
6) To merge from the same branch again, repeat the steps above,
	but update from the tag created in step 3 rather than 
	the branch point. This guarantees that only the changes
	made since the last merge are merged.


How do I add external code (like perfctr) to the papi cvs project?
------------------------------------------------------------------
The correct way to do it is:

untar the new distribution
cd <dir of new dist>
cvs import -ko -m "Blah blah" papi/src/perfctr perfctr_dist
perfctr_x_y_z

Here perfctr_dist is the "vendor tag" and perfctr_x_y_z is the release
version like perfctr_2_4_1

Then if we have locally modified our copy (made changes to the distro)
CVS will warn us to merge in our changes. We do this by

cvs checkout -jperfctr_dist:yesterday -jperfctr_dist papi/src/perfctr

CVS will then do the merge for us. If there are any conflicts, we fix
them, then cvs commit them.

Got it? Good.

We should follow this model for all 3rd party sources in the source tree.

This is all available in further detail in the CVS Manual, under 'import'.

	