diff -Naur iprobe.old/driver/src/linux/driver_linux.c iprobe.new/driver/src/linux/driver_linux.c
--- iprobe.old/driver/src/linux/driver_linux.c	Fri Jul  2 07:32:13 1999
+++ iprobe.new/driver/src/linux/driver_linux.c	Tue May 21 09:20:01 2002
@@ -74,6 +74,9 @@
 #include "ipr_kernel_int_defs.h"
 #include "ipr_driver_linux.h"
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,4,9)
+MODULE_LICENSE("GPL");
+#endif 
 
 #define NON_DATA_VALUE 0xffffffffffffffffL
 
@@ -98,7 +101,11 @@
    use this on the alpha. 
    */
 
-#define DEFAULT_MAJOR_NUMBER 61
+//The original device number
+//#define DEFAULT_MAJOR_NUMBER 61
+
+// Use this number to not conflict with rtscts
+#define DEFAULT_MAJOR_NUMBER 72
 
 
 #define DEVICE_NAME "ipr"
@@ -447,7 +454,7 @@
 } 
 
 /* The FLUSH was added for the later kernels. ie, 2.1.12X and beyond */
-
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0)
 struct file_operations ipr_fops = {
 	NULL,		/* lseek */
 	NULL,       	/* read */
@@ -461,6 +468,28 @@
 	ipr_close,	/* release */
 	NULL		/* fsync */
 };
+#else
+struct file_operations ipr_fops = {
+  NULL,               /* module owner */
+  NULL,               /* seek */
+  NULL, 
+  NULL,
+  NULL,              /* readdir */
+  NULL,              /* select */
+  ipr_ioctl,         /* ioctl */
+  NULL,              /* mmap */
+  ipr_open,
+  NULL,              /* flush */
+  ipr_close,         /* a.k.a. close */
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL,
+  NULL
+};
+#endif
 
 /* I believe that this takes the place of ipr_init for modules. */
 	
@@ -900,9 +929,9 @@
             case IPR_HMASK_M_ADDRESS :
                datum = THIS_PC();
                break;
-            case IPR_HMASK_M_PRIORITY :
-               datum = THIS_PRIORITY();
-               break;
+	       //            case IPR_HMASK_M_PRIORITY :
+	       //               datum = THIS_PRIORITY();
+	       //               break;
             default :
                datum = NON_DATA_VALUE;
                break;
@@ -1027,8 +1056,8 @@
             *Data64++ = THIS_CTR();
          else if (bmask == IPR_DMASK_M_PID)
             *Data64++ = THIS_PID();
-         else if (bmask == IPR_DMASK_M_PRIORITY)
-            *Data64++ = THIS_PRIORITY();
+	 //         else if (bmask == IPR_DMASK_M_PRIORITY)
+	 //            *Data64++ = THIS_PRIORITY();
          else
             *Data64++ = 0;
       }
@@ -1050,8 +1079,8 @@
             *Data32++ = THIS_CTR();
          else if (bmask == IPR_DMASK_M_PID)
             *Data32++ = THIS_PID();
-         else if (bmask == IPR_DMASK_M_PRIORITY)
-            *Data32++ = THIS_PRIORITY();
+	 //         else if (bmask == IPR_DMASK_M_PRIORITY)
+	 //            *Data32++ = THIS_PRIORITY();
          else
             *Data32++ = 0;
       }
diff -Naur iprobe.old/iprobe/src/common/iprobe_counting.c iprobe.new/iprobe/src/common/iprobe_counting.c
--- iprobe.old/iprobe/src/common/iprobe_counting.c	Tue Apr 13 10:14:35 1999
+++ iprobe.new/iprobe/src/common/iprobe_counting.c	Tue May 21 09:58:09 2002
@@ -74,6 +74,7 @@
 #include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
+#include <time.h>
 #ifdef nt
 #define WIN32_LEAN_AND_MEAN 1
 #include <windows.h>
diff -Naur iprobe.old/iprobe/src/common/iprobe_histogram.c iprobe.new/iprobe/src/common/iprobe_histogram.c
--- iprobe.old/iprobe/src/common/iprobe_histogram.c	Mon Dec 14 13:36:24 1998
+++ iprobe.new/iprobe/src/common/iprobe_histogram.c	Tue May 21 09:58:58 2002
@@ -57,6 +57,7 @@
 #include <stdio.h>
 #include <string.h>
 #include <math.h>
+#include <time.h>
 #include "stdtypes.h"
 #include "iprobe_struct.h"
 #include "iprobe_eventlib.h"
diff -Naur iprobe.old/lib/inc/common/ev6_masks.h iprobe.new/lib/inc/common/ev6_masks.h
--- iprobe.old/lib/inc/common/ev6_masks.h	Wed Jun 23 13:58:28 1999
+++ iprobe.new/lib/inc/common/ev6_masks.h	Tue May 21 08:58:55 2002
@@ -79,8 +79,30 @@
 #define ev6_muxctl_v_pc0 ev6_muxctl_l_overlay.EV6_MUXCTL_V_PC0
 #define ev6_muxctl_v_pcmux0 ev6_muxctl_l_overlay.EV6_MUXCTL_V_PCMUX0
 #define ev6_muxctl_v_pcmux1 ev6_muxctl_l_overlay.EV6_MUXCTL_V_PCMUX1
-#endif /* #ifndef __EV6_MASKS_LOADED */
-
-
-
 
+// ++
+//  EV6 Read-format PALcode argument
+// --
+typedef union _ev6_rdfmt
+{
+   uint64 ev6_rdfmt_q_bits;
+   struct
+   {
+     unsigned EV6_RDFMT_V_RIGN2 : 6;	//  Ignored <5:0>
+     unsigned EV6_RDFMT_V_CTR1 : 20;	//  Counter 1 <25:6>
+     unsigned EV6_RDFMT_V_RIGN1 : 2;	//  Ignored <27:26>
+     unsigned EV6_RDFMT_V_CTR0 : 20;	//  Counter 0 <47:28>
+     unsigned EV6_RDFMT_V_RIGN0 : 16;	//  Ignored <63:48>
+   } ev6_rdfmt_l_overlay;
+} EV6_RDFMT;
+#define EV6_RDFMT_M_RIGN0 0x0
+#define EV6_RDFMT_M_RIGN1 0x0
+#define EV6_RDFMT_M_RIGN2 0x3
+#define EV6_RDFMT_M_CTR1 0x0
+#define EV6_RDFMT_M_CTR0 0x0
+#define ev6_rdfmt_v_rign0 ev6_rdfmt_l_overlay.EV6_RDFMT_V_RIGN0
+#define ev6_rdfmt_v_rign1 ev6_rdfmt_l_overlay.EV6_RDFMT_V_RIGN1
+#define ev6_rdfmt_v_rign2 ev6_rdfmt_l_overlay.EV6_RDFMT_V_RIGN2
+#define ev6_rdfmt_v_ctr1 ev6_rdfmt_l_overlay.EV6_RDFMT_V_CTR1
+#define ev6_rdfmt_v_ctr0 ev6_rdfmt_l_overlay.EV6_RDFMT_V_CTR0
+#endif /* #ifndef __EV6_MASKS_LOADED */
diff -Naur iprobe.old/lib/makefile iprobe.new/lib/makefile
--- iprobe.old/lib/makefile	Wed Jun 23 13:58:23 1999
+++ iprobe.new/lib/makefile	Tue May 21 08:48:36 2002
@@ -216,6 +216,9 @@
 $(LIB_OBJ)/liblipr.so:		$(ALL_LINUX_LIBRARY_OBJS)
 	$(DLD) $(DLD_FLAGS) -o $@ $(ALL_LINUX_LIBRARY_OBJS)
 
+$(LIB_OBJ)/liblipr.a:		$(ALL_LINUX_LIBRARY_OBJS)
+	ar cr $@ $(ALL_LINUX_LIBRARY_OBJS)
+
 ########################################################################
 #OS SPECIFIC: FreeBSD
 ########################################################################
@@ -247,7 +250,7 @@
 	cp $(LIB_OBJ)/libipr.a $(INSTALL_DIR)/lib/libipr.a
 	chown root:wheel $(INSTALL_DIR)/lib/libipr.a
 
-linux_library:			$(LIB_OBJ)/liblipr.so
+linux_library:	$(LIB_OBJ)/liblipr.a	$(LIB_OBJ)/liblipr.so
 linux_library_install:
 	cp $(LIB_OBJ)/liblipr.so $(INSTALL_DIR)/lib/liblipr.so
 
diff -Naur iprobe.old/lib/src/common/ev6_routines.c iprobe.new/lib/src/common/ev6_routines.c
--- iprobe.old/lib/src/common/ev6_routines.c	Wed Jun 23 13:58:31 1999
+++ iprobe.new/lib/src/common/ev6_routines.c	Tue May 21 09:34:06 2002
@@ -463,6 +463,9 @@
    PtrDisable = &Ev6Disable;
    PtrPause = &Ev6Pause;
    PtrResume = &Ev6Resume;
+   PtrWrite = &Ev6Write;
+   PtrRead = &Ev6Read;
+   PtrClear = &Ev6Clear;
    PtrCounterEvents = &Ev6CounterEvents;
    PtrAvailableCounters = &Ev6AvailableCounters;
    Ev6OSInit ();
diff -Naur iprobe.old/lib/src/linux/ipr_routines_linux.c iprobe.new/lib/src/linux/ipr_routines_linux.c
--- iprobe.old/lib/src/linux/ipr_routines_linux.c	Wed Jun 23 13:58:32 1999
+++ iprobe.new/lib/src/linux/ipr_routines_linux.c	Tue May 21 09:47:22 2002
@@ -60,6 +60,7 @@
 #include "evx_vms_osf.h"
 #include "ipr_driver_linux.h"
 
+//#define CPLANT 1 
 
 static int
    exit_handler_block [6],
@@ -93,13 +94,19 @@
 #if defined DEBGG
     ipr_udbg=1;			/* if compiled with DEBGG set the debug falg */
 #endif
+
+#ifdef CPLANT
+    if( (ipr_fd=open("enfs:/dev/ipr", O_RDONLY )) < 0 ){ 
+#else    
     if( (ipr_fd=open("/dev/ipr", O_RDONLY )) < 0 ){
+#endif
 	perror("couldn't open the counter device");
 	exit(1);
     }
     status = create_shared_area();
 }
 
+
 extern int cpu_number()
 {
     return 0;
diff -Naur iprobe.old/lib/src/vms_dunix/ev6_routines_vms_osf.c iprobe.new/lib/src/vms_dunix/ev6_routines_vms_osf.c
--- iprobe.old/lib/src/vms_dunix/ev6_routines_vms_osf.c	Wed Jun 23 13:58:33 1999
+++ iprobe.new/lib/src/vms_dunix/ev6_routines_vms_osf.c	Tue May 21 09:38:17 2002
@@ -189,3 +189,100 @@
    PtrGetStopCode = &Ev6GetStopCode;
    Ev6Sh -> modes . ipr_mmask_v_selected = 1;
 }
+
+extern IPR_STATUS Ev6Read (int ctx, const IPR_CTRMASK ctrs, int *values,
+                           IPR_SIZE vsize)
+{
+   EV6_RDFMT
+      tmp;
+   IPR_STATUS
+      status;
+   IPR_CTRMASK
+      tmpctrs;
+   int i;
+
+   status = KIprUpdatePerfmon (ctx, EV6_PERFMON_READ_COUNTERS, 0,
+                               &tmp . ev6_rdfmt_q_bits);
+   if (!IPR_SUCCESS (status))
+      return status;
+
+/*   printf("In Ev6Read:\n");
+     printf("tmp . ev6_rdfmt_q_bits = 0x%lx\n",tmp . ev6_rdfmt_q_bits); */
+
+   tmpctrs = (ctrs ? ctrs : EV6_COUNTER_MASK) & EV6_COUNTER_MASK;
+   if ((tmpctrs & (1 << 0)) && vsize > 0)
+      values [0] = tmp . ev6_rdfmt_v_ctr0;
+   if ((tmpctrs & (1 << 1)) && vsize > 1)
+      values [1] = tmp . ev6_rdfmt_v_ctr1;
+/*   for (i = 0; i < vsize; ++i)
+     printf("values[%d] =  0x%x\n",i,values[i]);
+     printf("\n");*/
+
+   return IPR__SUCCESS;
+}
+
+
+extern IPR_STATUS Ev6Write (int ctx, const IPR_CTRMASK ctrs, int *values,
+                            IPR_SIZE vsize)
+{
+   EV6_RDFMT
+      tmp;
+   IPR_STATUS
+      status;
+   IPR_CTRMASK
+      tmpctrs;
+   int i;
+
+   printf("In Ev6Write:\n");
+   for (i = 0; i < vsize; ++i)
+   printf("values[%d] =  0x%x\n",i,values[i]);
+
+   tmp . ev6_rdfmt_q_bits = 0;
+   tmpctrs = (ctrs ? ctrs : EV6_COUNTER_MASK) & EV6_COUNTER_MASK;
+   if (tmpctrs != EV6_COUNTER_MASK)
+   {
+      status = KIprUpdatePerfmon (ctx, EV6_PERFMON_READ_COUNTERS, 0,
+                                  &tmp . ev6_rdfmt_q_bits);
+      if (!IPR_SUCCESS (status))
+         return status;
+   }
+   if ((tmpctrs & (1 << 0)) && vsize > 0)
+      tmp . ev6_rdfmt_v_ctr0 = values [0];
+   if ((tmpctrs & (1 << 1)) && vsize > 1)
+      tmp . ev6_rdfmt_v_ctr1 = values [1];
+
+   tmp . ev6_rdfmt_v_rign2 = 0x3;
+
+   printf("tmp . ev6_rdfmt_q_bits = 0x%lx\n\n",tmp . ev6_rdfmt_q_bits); 
+   return KIprUpdatePerfmon (ctx, EV6_PERFMON_WRITE_COUNTERS, tmp . 
+			     ev6_rdfmt_q_bits, NULL);
+}
+
+extern IPR_STATUS Ev6Clear (int ctx, const IPR_CTRMASK ctrs)
+{
+   EV6_RDFMT
+      tmp;
+   IPR_STATUS
+      status;
+   IPR_CTRMASK
+      tmpctrs;
+
+   tmpctrs = (ctrs ? ctrs : EV6_COUNTER_MASK) & EV6_COUNTER_MASK;
+   if (tmpctrs != EV6_COUNTER_MASK)
+      tmp . ev6_rdfmt_q_bits = 0;
+   else
+   {
+      status = KIprUpdatePerfmon (ctx, EV6_PERFMON_READ_COUNTERS, 0,
+                                  &tmp . ev6_rdfmt_q_bits);
+      if (!IPR_SUCCESS (status))
+         return status;
+      if (tmpctrs & (1 << 0))
+         tmp . ev6_rdfmt_v_ctr0 = 0;
+      if (tmpctrs & (1 << 1))
+         tmp . ev6_rdfmt_v_ctr1 = 0;
+   }
+   KIprUpdatePerfmon (ctx, EV6_PERFMON_WRITE_COUNTERS,
+		      tmp . ev6_rdfmt_q_bits, NULL);
+   return KIprUpdatePerfmon (ctx, EV6_PERFMON_WRITE_COUNTERS,
+			     tmp . ev6_rdfmt_q_bits, NULL);
+}
diff -Naur iprobe.old/rep/makefile~ iprobe.new/rep/makefile~
--- iprobe.old/rep/makefile~	Wed Jun 23 13:58:33 1999
+++ iprobe.new/rep/makefile~	Wed Dec 31 17:00:00 1969
@@ -1,285 +0,0 @@
-
-# Revision History:
-#
-#               P. Ezolt                                ??-Jul-1997
-#                       Original version
-#
-#               J. Goddard                      10-Sep-1997
-#                       Add machinery to product C listing files and
-#                       a linker map file. This includes adding the
-#                       new directory 'LIS'.
-#
-#               J. Goddard                      10-Sep-1997
-#                       Added version/rev numbers to make file.
-#		P. Ezolt			10-Sep-1998
-#			Merged the makefiles of all four OSs. (This is THE RIGHT THING to do..)
-#
-#
-#------------------------------------------------------------------------------------------
-#
-# REP version and revision numbers...
-#
-# The version number only gets incremented for major releases and must
-# be one decimal digit in length.
-#
-#               version number          description
-#   --------------    -----------
-#         3           Major cleanup of REP done during the summer of
-#
-#        1997. REP mostly complies with the internal C   coding standard, has all known bugs fixed and
-#     	  was resturctured in various place for correctness, readablility or sanity.
-#
-# The revision number gets incremented for each patch or sequence of patches
-# (if they were applied together). The revision number may be from one to
-# three decimal digits in length.
-#
-#        revision number          description
-#        ---------------          -----------
-#               0                 Initial rev as per version 3
-#
-#               1                 Yanked out the symbol processing code that used files and arrays
-#                                 and replaced it with a doubly linkedlist scheme. Symbols are
-#                                 now accumulated in memory in ascending order on a doubly linked list.
-#                                      
-#               2                 modified the 'duplicate symbols' message output as per request
-#                                 by John Henning. The duplicate symbol messageno longer appears
-#                                 unless you also use the -l switch.
-#
-#               3                 Reworked symbol list processing...the function/module name lists no
-#                                 longer exist. Instead the names are placed directly into the
-#                                 symbol node
-#
-#               4                 update copyright date in help text
-#
-#               5                 fix -i switch symbol merge (use ferror() instead of feof() for I/O
-#                                 error check. clarify -i help.
-#
-#               6                 correct scanf format in AppendRepFiles...was hard coded whcih was changed
-#                                 to SCAN_INPUT
-#
-#               7                 fix 'whitespace in function name' problem (NT only) and speed up REP
-#
-#               8                 fix resolution problem caused by #7 above
-#                                             
-
-
-
-#
-# NT likes "\" and unix likes "/". (Of course unix is right.. :-)) In any event,
-# All of the "$(subst /,\\,$(REP_INCLUDE)) " sprinkled through out the makefile
-# simply converts the unix style paths into NT style paths.  For some reason
-# "\" doesn't appear to substitute correctly, so I have to use "\\".  It isn't
-# harmfull, it is just a little ugly.  If I get time, I'll try to fix it. 
-#
-# --P. Ezolt
-
-# Clean doesn't yet work on NT.  Fixing this will involve moving the
-# clean rule into the os_specific places, and then telling it to 
-# use "del" for nt and "rm" for unix.
-# --P. Ezolt
-
-# Now, everything includes everything else.  This is bad.  Things should
-# Only include what they belong to.  For example
-# NT should not know about Digital unix's includes.
-#
-
-
-##############
-#Common Flags#
-##############
-REP_OBJ = $(TOPDIR)/rep/obj
-
-REP_COMMON_INC = $(TOPDIR)/rep/inc/common
-REP_DUNIX_INC = $(TOPDIR)/rep/inc/dunix
-REP_DULINUX_INC = $(TOPDIR)/rep/inc/dunix_linux
-REP_VMSDUNIX_INC = $(TOPDIR)/rep/inc/vms_dunix
-REP_VMSDULINUX_INC = $(TOPDIR)/rep/inc/vms_dunix_linux
-REP_NT_INC = $(TOPDIR)/rep/inc/nt
-
-REP_COMMON_SRC = $(TOPDIR)/rep/src/common
-REP_LINUX_SRC = $(TOPDIR)/rep/src/linux
-REP_FREEBSD_SRC = $(TOPDIR)/rep/src/freebsd
-REP_DUNIX_SRC = $(TOPDIR)/rep/src/dunix
-REP_DULINUX_SRC = $(TOPDIR)/rep/src/dunix_linux
-REP_VMSDUNIX_SRC = $(TOPDIR)/rep/src/vms_dunix
-REP_NT_SRC = $(TOPDIR)/rep/src/nt
-
-REP_DEFS = $(SUITE_DEFS)
-
-REP_VPATH =  $(REP_COMMON_SRC):$(REP_DUNIX_SRC):$(REP_FREEBSD_SRC):$(REP_LINUX_SRC):$(REP_DULINUX_SRC):$(REP_NT_SRC)
-
-#############
-#NT Flags#
-#############
-ifeq ($(OS),Windows_NT)
-
-REP_INCLUDE = $(INC) -I$(REP_COMMON_INC) -I$(REP_NT_INC)
-
-REP_LIB = $(TOPDIR)\\rep\\nt_libs
-
-REP_LIBS = $(REP_LIB)\\imagehlp.lib $(REP_LIB)\\psapi.lib $(REP_LIB)\\msdbi50.lib libc.lib kernel32.lib advapi32.lib winmm.lib user32.lib    
-
-# This Make magic transforms are -Idir/dir into -Idir\dir
-
-REP_CFLAGS = $(subst /,\\,$(REP_INCLUDE)) -Dnt -D_ALPHA_=1 -D__NT -DWIN32_LEAN_AND_MEAN $(REP_DEFS) 
-
-
-$(REP_OBJ)/%.o: %.c
-	$(CC) $(REP_CFLAGS) -c /Fo$(subst /,\\,$@) $(subst /,\\,$<) /FAs /Fa$(subst /,\\,$(subst .o,.lis,$@))
-
-endif
-
-#############
-#DUNIX Flags#
-#############
-
-ifeq ($(OSTYPE),OSF1)
-
-REP_CFLAGS = -migrate -g -show all -source_listing -Dunix -Dosf -D__OSF1__ -DOSF  -verbose $(INC) -I$(REP_VMSDUNIX_INC) -I$(REP_VMSDULINUX_INC) -I$(REP_COMMON_INC) -I$(REP_DUNIX_INC) -I$(REP_DULINUX_INC) $(REP_DEFS) 
-
-$(REP_OBJ)/%.o: %.c
-	$(CC) $(REP_CFLAGS) -c -o $@ $<
-
-endif
-
-
-#############
-#LINUX Flags#
-#############
-
-ifeq ($(OSTYPE),Linux)
-
-REP_CFLAGS = -D__LINUX__ -I/usr/src/linux/include $(INC) -I$(REP_VMSDULINUX_INC) -I$(REP_COMMON_INC) -I$(REP_DULINUX_INC) $(REP_DEFS) -g
-
-$(REP_OBJ)/%.o: %.c
-	$(CC) $(REP_CFLAGS) -c -o $@ $<
-
-endif
-
-#############
-#FreeBSD Flags#
-#############
-
-ifeq ($(OSTYPE),FreeBSD)
-
-REP_CFLAGS =  $(INC) $(BINUTILSINCS) -I$(REP_VMSDULINUX_INC) -I$(REP_COMMON_INC) -I$(REP_DULINUX_INC) $(REP_DEFS) -g
-$(REP_OBJ)/%.o: %.c
-	$(CC) $(REP_CFLAGS) -c -o $@ $<
-
-endif
-
-
-#
-# rep sources
-#
-
-
-ALL_COMMON_REP_OBJS =			$(REP_OBJ)/rep_resolve_addresses.o\
-					$(REP_OBJ)/rep_cmdln.o \
-					$(REP_OBJ)/rep_files.o \
-					$(REP_OBJ)/structs.o 
-
-ALL_NT_REP_OBJS = 			$(ALL_COMMON_REP_OBJS) \
-					$(REP_OBJ)/rep_nt.o \
-					$(REP_OBJ)/rep_nt_image.o \
-					$(REP_OBJ)/rep_nt_readpdb.o 
-
-
-ALL_LINUX_REP_OBJS = 			$(ALL_COMMON_REP_OBJS) \
-					$(REP_OBJ)/rep_linux.o 
-
-ALL_FREEBSD_REP_OBJS = 			$(ALL_COMMON_REP_OBJS) \
-					$(REP_OBJ)/rep_freebsd.o 
-
-ALL_DUNIX_REP_OBJS = 			$(ALL_COMMON_REP_OBJS) \
-					$(REP_OBJ)/rep_osf.o 
-
-
-#
-# Headers for REP.EXE
-#
-
-$(REP_OBJ)/structs.o:			$(REP_COMMON_SRC)/structs.c 
-
-$(REP_OBJ)/rep_resolve_addresses.o:	$(REP_COMMON_SRC)/rep_resolve_addresses.c
-
-# "FORCE" guarentees that this command will be rebuilt. 
-#  We need that so the latest version of the suite is always embedded in the program help.
-
-$(REP_OBJ)/rep_cmdln.o:			FORCE \
-					$(REP_COMMON_SRC)/rep_cmdln.c 
-
-$(REP_OBJ)/structs.o:			$(REP_COMMON_SRC)/structs.c 
-
-$(REP_OBJ)/rep_files.o:			$(REP_COMMON_SRC)/rep_files.c 
-
-
-########################################################################
-#OS SPECIFIC: Windows NT
-########################################################################
-
-$(REP_OBJ)/rep_nt.o:		$(REP_NT_SRC)/rep_nt.c
-
-$(REP_OBJ)/nt_rep.exe:		$(ALL_NT_REP_OBJS)
-	link /MAP:$(subst /,\\,$(REP_OBJ))\\nt_rep.map /out:$(subst /,\\,$@) /debug:full /debugtype:both $(subst /,\\,$(ALL_NT_REP_OBJS)) $(REP_LIBS) /NODEFAULTLIB   
-
-
-########################################################################
-#OS SPECIFIC: Linux
-########################################################################
-
-$(REP_OBJ)/rep_linux.o:		$(REP_LINUX_SRC)/rep_linux.c
-
-$(REP_OBJ)/linux_rep:		$(ALL_LINUX_REP_OBJS)
-<<<<<<< makefile
-	$(CC) -o $@ $(ALL_LINUX_REP_OBJS) -L/usr/lib -L. -lc -lm -lbfd -liberty
-
-########################################################################
-#OS SPECIFIC: FreeBSD
-########################################################################
-
-$(REP_OBJ)/rep_freebsd.o:	$(REP_FREEBSD_SRC)/rep_freebsd.c
-
-$(REP_OBJ)/freebsd_rep:		$(ALL_FREEBSD_REP_OBJS)
-	$(CC) -o $@ $(ALL_FREEBSD_REP_OBJS) $(BINUTILSLIBS) -L. -lc -lm -lbfd -liberty
-=======
-	$(CC) -static -o $@ $(ALL_LINUX_REP_OBJS) -L/usr/lib -L. -lc -lm -lbfd -liberty
->>>>>>> 1.19
-
-
-########################################################################
-#OS SPECIFIC: Dunix/OSF
-########################################################################
-
-$(REP_OBJ)/rep_osf.o:		$(REP_DUNIX_SRC)/rep_osf.c
-
-$(REP_OBJ)/dunix_rep:		$(ALL_DUNIX_REP_OBJS)
-	$(CC) -g -call_shared -Wl,-expect_unresolved,ldr_process_context \
-	-o $@ $(ALL_DUNIX_REP_OBJS) -lxproc -lst -lmld -lots 
-
-
-
-########################################################################
-
-clean-rep:
-	-rm $(REP_OBJ)/*
-
-#This links all of the objects into a single kernel module. 
-
-freebsd_rep:			$(REP_OBJ)/freebsd_rep
-freebsd_rep_install:
-	cp $(REP_OBJ)/freebsd_rep $(INSTALL_DIR)/bin/rep
-	chown root:wheel $(INSTALL_DIR)/bin/rep
-
-linux_rep:			$(REP_OBJ)/linux_rep
-linux_rep_install:
-	cp $(REP_OBJ)/linux_rep $(INSTALL_DIR)/bin/rep
-
-
-dunix_rep:			$(REP_OBJ)/dunix_rep
-nt_rep:				$(REP_OBJ)/nt_rep.exe
-
-
-
-
-
diff -Naur iprobe.old/suite_common/inc/common/ev6_routines.h iprobe.new/suite_common/inc/common/ev6_routines.h
--- iprobe.old/suite_common/inc/common/ev6_routines.h	Tue Aug 17 06:32:30 1999
+++ iprobe.new/suite_common/inc/common/ev6_routines.h	Tue May 21 09:06:20 2002
@@ -121,7 +121,10 @@
    Ev6SetModes (int ctx, IPR_MMASK modes),
    Ev6SetEvents (int ctx, uint64 *MUXvalue),
    Ev6Enable (int ctx, IPR_CTRMASK ctrs),
-   Ev6Disable (int ctx, IPR_CTRMASK ctrs);
+   Ev6Disable (int ctx, IPR_CTRMASK ctrs),
+   Ev6Read (int ctx, const IPR_CTRMASK ctrs, int *values, IPR_SIZE vsize),
+   Ev6Write(int ctx, const IPR_CTRMASK ctrs, int *values, IPR_SIZE vsize),
+   Ev6Clear(int ctx, const IPR_CTRMASK ctrs);
 extern void
    Ev6OSInit (void);
 
diff -Naur iprobe.old/suite_common/inc/linux/ipr_driver_linux.h iprobe.new/suite_common/inc/linux/ipr_driver_linux.h
--- iprobe.old/suite_common/inc/linux/ipr_driver_linux.h	Mon Dec 14 13:09:29 1998
+++ iprobe.new/suite_common/inc/linux/ipr_driver_linux.h	Tue May 21 09:08:12 2002
@@ -229,7 +229,8 @@
 } IPR_ARGDeallocate;
 
 
-#define IPROBE_IOC_MAGIC 'i'
+/*#define IPROBE_IOC_MAGIC 'i'*/
+#define IPROBE_IOC_MAGIC 0x3D
 
 /*
  * ioctl's
diff -Naur iprobe.old/suite_common/inc/linux/ipr_kernel_int_linux.h iprobe.new/suite_common/inc/linux/ipr_kernel_int_linux.h
--- iprobe.old/suite_common/inc/linux/ipr_kernel_int_linux.h	Mon Dec 14 13:09:50 1998
+++ iprobe.new/suite_common/inc/linux/ipr_kernel_int_linux.h	Tue May 21 09:55:01 2002
@@ -41,7 +41,10 @@
 // X-1	BFW		Brian F. Wibecan	28-Oct-1994
 //	Original version.
 */
+
+/* For some reason, RedHat 7.1 has a problem with this
 #include <string.h>
+*/
 
 #include "ipr_kernel_ext_defs.h"
 
