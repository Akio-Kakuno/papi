$Id$

			CHANGES
			=======

[High-level changes in reverse chronological order. Detailed
 driver changes are in linux/drivers/perfctr/RELEASE-NOTES.]


Version 1.6, 2000-11-21
- Updated for kernels 2.4.0-test11 and 2.2.18pre22.
- Preliminary implementation of /proc/self/perfctr as a more direct
  way of accessing one's virtual perfctrs. (If this works out,
  the /dev/perfctr interface to vperfctrs will be phased out.)
  The driver can still be built as an autoloadable module.
  (For now, only supported in 2.2.18pre22 and 2.4.0-test11.)
- Some user-space library API changes to accommodate /proc/self/perfctr.
- The per-process virtual TSC is no longer restarted from zero
  when the perfctrs are reprogrammed, which allows it to be used
  as a high-res per-process clock (i.e. gethrvtime()).
- Rewrote the `command' example application to use perfctr inheritance
  instead of the recently removed "remote control" facility.
- WinChip documentation updates and corrections.

Version 1.5, 2000-09-03
- The virtual perfctr "remote control" facility has been removed,
  resulting in major simplifications in the driver.
  Since version 1.3 of the driver, the most common application of
  the remote control facility (to record events from unmodified
  applications) can be more easily implemented using the perfctr
  inheritance facility (perfctr control setup is inherited from parent
  to child processes, and a child's event counts are propagated back
  to its parent). Removing the remote control facility simplified
  resource management and eliminated a number of concurrency issues.
- Code cleanups. Dropped support for intermediate 2.3 and early 2.4
  kernels. The code now supports kernels 2.2.xx and 2.4.0-test7 or
  later only (via a 2.4-on-2.2 simulation layer).
- A number of changes to the user-space library. The API is now thread-
  safe (the library has no internal state), and the naming scheme has
  been simplified due to the removal of the remote-control facility.
  The zero-syscall perfctr sampling code has been rewritten and should
  be faster and more robust. (It fixed a sampling problem one user had
  on a 4-way MP box.)

Version 1.4, 2000-08-11
- Updates to comply which changes in 2.4.0-test kernels, in particular
  concerning module owner and use count tracking, and the Virtual File
  System (VFS) infrastructure.
- A bug which prevented reclaiming VFS resources (dentries and
  inodes) allocated to virtual perfctrs has been fixed. This bug
  affected both 2.2.x and 2.4.0-test kernels.

Version 1.3, 2000-06-29
- Implemented inheritance for per-process virtual perfctrs.
  This means that a child's performance-monitoring counts are
  attributed to its parent, similarly to how time is handled.
  The parent must have active perfctrs before forking off the child,
  and neither parent nor child must have reprogrammed its perfctrs
  when the child exits, otherwise no propagation occurs.
  Threads created implicitly by the kernel via request_module()
  are protected from perfctr inheritance.
- Added an example program to illustrate inheritance.
- Fixed two small buglets in the driver.
- Preliminary changes to make the user-space library thread-safe.
- Updated driver for kernel 2.4.0-test2.
- The driver now exports the CPU clock frequency to user-space,
  to enable mapping of accumulated TSC counts to actual time.
- Clarified that this package is licensed under the GNU LGPL.

Version 1.2, 2000-05-24
- Added support for kernels 2.2.16pre4 and 2.3.99-pre9-5.
- Added support for generic x86 processors with a time-stamp counter
  but no performance-monitoring counters. By using the driver to
  virtualise the TSC, accurate cycle-count measurements are now
  possible on PMC-less processors like the AMD K6.
- Fixed a bug in the WinChip driver.
- Miscellaneous code cleanups.

Version 1.1, 2000-05-13
- Support for Linux kernels 2.2.14, 2.2.15 and 2.3.99-pre8.
- Changes to the driver and user-space library to reduce the
  number of getpid() calls. (Suggested by Ulrich Drepper.)
- Added support for the VIA Cyrix III processor.
- Performance improvements in the x86 driver interface.
- Some code cleanups.

Version 1.0, 2000-01-31
- Support for Linux kernels 2.3.41, 2.2.15pre5, and 2.2.14.
- Code cleanups in order to handle drivers for non-x86 processors.
- Changes to the x86 drivers to reduce cache footprint and
  sampling overhead. (Sample low 32 bits of counters, but
  maintain 64-bit sums.)

Version 0.11, 2000-01-30
- Support for Linux kernels 2.3.41 and 2.2.14.
- Minor code cleanups and fixes.
- The CR4.PCE flag is now globally enabled on x86, except for
  those processors which does not support it. This is done in part
  to reduce the overhead of virtualising the performance counters,
  but it is also necessary due to changes in kernel 2.3.40.

Version 0.10, 2000-01-23
- Support for Linux kernels 2.3.40 and 2.2.14.
- Global-mode performance counters are now implemented.
- Added hardware support for the WinChip 3 processor.
- More source code reorganisation.

Version 0.9, 2000-01-02
- Support for Linux kernels 2.3.35, 2.2.14pre18, and 2.2.13.
- The driver can now be built as a module.
- The driver now installs itself as the /dev/perfctr device instead
  of adding a system call.
- Significant source code reorganisation.

Version 0.8, 1999-11-14
- Support for Linux kernels 2.3.28 and 2.2.13.
- Major updates to reduce the overhead of maintaining virtual
  performance-monitoring counters:
    - The control registers are cached and updated lazily.
    - The counter registers are no longer written to.
    - Unused counters are no longer manipulated at all.
      (This matters especially for the AMD K7.)
- Reduced the process scheduling overhead for processes not
  using performance-monitoring counters.
- Minor code cleanups, bug fixes, and documentation updates.

Version 0.7, 1999-10-25
- Support for Linux kernels 2.3.22 and 2.2.13.
- Improved performance. (Uses RDPMC instead of RDMSR when possible.)
- The AMD K7 Athlon should now work properly.
- User-space now uses mmap() to read the kernel's accumulated
  counter state.
- The driver is now invoked via a new sys_perfctr() system call,
  instead of abusing prctl().
- The kernel patch has been cleaned up. The "#ifdef CONFIG_PERFCTR"
  mess has been eliminated.

Version 0.6, 1999-09-08
- Version 0.6 with support for Linux kernels 2.3.17 and 2.2.12.
- Preliminary support for AMD Athlon added.

Version 0.5, 1999-08-29
- Support for Linux kernel 2.3.15.
- The user-space buffer is updated whenever state.status changes,
  even when a remote command triggers the change.
- Reworked and simplified the high-level code. All accesses
  now require an attached file in order to implement proper
  accounting and syncronisation. The only exception is UNLINK:
  a process may always UNLINK its own PMCs.
- Fixed counting bug in sys_perfctr_read().
- Improved support for the Intel Pentium III.
- Another WinChip fix: fake TSC update at process resume.
- The code should now be safe for 'gcc -fstrict-aliasing'.

Version 0.4, 1999-07-31
- Support for Linux kernel 2.3.12.
- Implemented PERFCTR_ATTACH and PERFCTR_{READ,CONTROL,STOP,UNLINK}
  on attached perfctrs. An attached perfctr is represented as a file.
- Fixed an error in the WinChip-specific code.
- Perfctrs now survive exec().

Version 0.3, 1999-07-22
- Support for Linux kernel 2.3.11.
- Interface now via sys_prctl() instead of /dev/perfctr.
- Added NYI stubs for accessing other processes' perfctrs.
- Moved to dynamic allocation of a task's perfctr state.
- Minor code cleanups.

Version 0.2, 1999-06-07
- Support for Linux kernel 2.3.5.
- Added support for WinChip CPUs.
- Restart counters from zero, not their previous values. This
  corrected a problem for Intel P6 (WRMSR writes 32 bits to a PERFCTR
  MSR and then sign-extends to 40 bits), and also simplified the code.
- Added support for syncing the kernel's counter values to a user-
  provided buffer each time a process is resumed. This feature, and
  the fact that the driver enables RDPMC in processes using PMCs,
  allows user-level computation of a process' accumulated counter
  values without incurring the overhead of making a system call.

Version 0.1, 1999-05-30
- First public release for Linux kernel 2.3.3.
