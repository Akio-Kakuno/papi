	   Linux x86 Performance-Monitoring Counters Driver
		by Mikael Pettersson <mikpe@csd.uu.se>
		       [Last updated 2000-11-18]
========================================================================


Overview
--------
This package adds support to the Linux kernel for using the
Performance-Monitoring Counters (PMCs) found in many modern
x86-class processors. Supported processors are:
- All Intel family 5 and 6 processors, i.e. Pentium, Pentium MMX,
  Pentium Pro, Pentium II, Celeron, and Pentium III.
- AMD K7 Athlon.
- Cyrix 6x86MX, MII, and III.
- WinChip C6, 2, 2A, 2B, and 3.

PMCs are "event counters" capable of recording any of a large
number of performance-related events during execution.
These events typically include instructions executed, cache
misses, TLB misses, stalls, and other events specific to
the microarchitecture of the processor being used.

PMCs are primarily used by compiler writers, runtime system
developers, and kernel developers, to identify code sections
exhibiting low-level performance problems, and to validate
code changes intended to improve performance.

Limited support is available for generic x86 processors with
a Time-Stamp Counter but no PMCs, such as the AMD K6 family.
For these processors, only TSC-based cycle-count measurements
are possible. However, all high-level facilities implemented
by the driver are still available.


Features
--------
Each Linux process has its own set of "virtual" PMCs. That is,
to a process the PMCs appear to be private and unrelated to the
activities of other processes in the system. The virtual PMCs
have 64-bit precision, even though current processors only
implement 40 or 48-bit PMCs. Each process also has a virtual
Time-Stamp Counter (TSC). On most machines, the virtual PMCs can
be sampled entirely in user-space without incurring the overhead
of a system call.

Virtual PMCs are inherited from parent to child processes, and
a child's final accumulated counts are attributed to its parent.
This requires no cooperation from the monitored processes.
Inheritance is disabled if either parent or child explicitly
reprograms its PMCs.

The driver also supports global-mode or system-wide PMCs.
In this mode, each PMC on each processor can be controlled
and read. The PMCs and TSC on active processors are sampled
periodically and the accumulated sums have 64-bit precision.


Limitations
-----------
- Almost no documentation. "Use the source, Luke."
- Neither the kernel driver nor the sample user-space library
  attempt to hide any processor-specific details from the user.
- The local APIC perfctr interrupt feature in P6 and K7 Model 2
  processors is not yet used.
- This package makes it possible to compute aggregate event and
  cycle counts for sections of code. Since many x86-type processors
  use out-of-order execution, it is impossible to attribute exact
  event or cycle counts to individual instructions.
  See the "Continuous Profiling" and "ProfileMe" papers at Compaq's
  DCPI web site (URL below) for more information on this issue.


Availability
------------
This and future versions of this package can be downloaded from
http://www.csd.uu.se/~mikpe/linux/perfctr/.


Licensing
---------
Copyright (C) 1999-2000  Mikael Pettersson <mikpe@csd.uu.se>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
