--- linux-2.4.0-test7-perfctr/CREDITS.~1~	Thu Aug 24 13:30:49 2000
+++ linux-2.4.0-test7-perfctr/CREDITS	Sat Sep  2 17:24:29 2000
@@ -2046,6 +2046,7 @@
 E: mikpe@csd.uu.se
 W: http://www.csd.uu.se/~mikpe/
 D: Miscellaneous fixes
+D: Performance-monitoring counters driver
 
 N: Reed H. Petty
 E: rhp@draper.net
--- linux-2.4.0-test7-perfctr/Documentation/Configure.help.~1~	Thu Aug 24 13:30:49 2000
+++ linux-2.4.0-test7-perfctr/Documentation/Configure.help	Sat Sep  2 17:37:02 2000
@@ -2790,6 +2790,82 @@
 
   If you don't know what to do, choose "386".
 
+Performance-monitoring counters support
+CONFIG_PERFCTR
+  This driver provides access to the performance-monitoring counter
+  registers available in some (but not all) modern processors.
+  These special-purpose registers can be programmed to count low-level
+  performance-related events which occur during program execution,
+  such as cache misses, pipeline stalls, etc.
+
+  The driver supports all x86-class processors known to have
+  performance-monitoring counters: Intel Pentium and newer,
+  AMD K7 Athlon, Cyrix 6x86MX/MII/III, and WinChip C6/2/2A/3.
+
+  On processors which have a time-stamp counter but no performance-
+  monitoring counters, such as the AMD K6 family, the driver supports
+  plain cycle-count performance measurements only.
+
+  You can safely say Y here, even if you intend to run the kernel
+  on a processor without performance-monitoring counters.
+
+  You can also say M here to compile the driver as a module; the
+  module will be called `perfctr.o'.
+
+Init-time hardware tests
+CONFIG_PERFCTR_INIT_TESTS
+  This option makes the driver run additional hardware tests
+  during initialisation. This is not necessary for normal
+  operation, but is sometimes useful during driver development.
+
+  If unsure, say N.
+
+Support WinChip processors
+CONFIG_PERFCTR_WINCHIP
+  The time-stamp counter is a standard facility on Pentium-class
+  processors for counting clock cycles. Normally, the time-stamp
+  counter is unrelated to the performance-monitoring counters.
+  However, WinChip C6/2/2A/3 processors implement the time-stamp
+  counter by running the performance-monitoring counters in a
+  special mode, and then synthesising the 64-bit time-stamp from
+  the low 32 bits of both performance-monitoring counters.
+
+  One of several problems caused by this design is that all access
+  to the time-stamp counter must be disabled if the performance-
+  monitoring counters are to be used. This, in turn, will increase
+  the cost of time-keeping operations in both the kernel and user
+  applications.
+
+  To use the performance-monitoring counters on a WinChip processor,
+  you must select this option and also configure the kernel for a
+  processor model which does not imply a working time-stamp counter,
+  i.e. 386, 486, or generic 586.
+
+  If unsure, say N.
+
+Virtual performance counters support
+CONFIG_PERFCTR_VIRTUAL
+  The processor's performance-monitoring counters are special-purpose
+  global registers. This option adds support for virtual per-process
+  performance-monitoring counters which only run when the process
+  to which they belong is executing. This improves the accuracy of
+  performance measurements by reducing "noise" from other processes.
+
+  Say Y.
+
+Global performance counters support
+CONFIG_PERFCTR_GLOBAL
+  This option adds driver support for global-mode (system-wide)
+  performance-monitoring counters. In this mode, the driver allows
+  each performance-monitoring counter on each processor to be
+  controlled and read. The driver provides a sampling timer to
+  maintain 64-bit accumulated event counts.
+
+  Global-mode performance counters cannot be used if some process
+  is currently using virtual-mode performance counters, and vice versa.
+
+  Say Y.
+
 VGA text console
 CONFIG_VGA_CONSOLE
   Saying Y here will allow you to use Linux in text mode through a
--- linux-2.4.0-test7-perfctr/Documentation/ioctl-number.txt.~1~	Sat Jul  1 00:13:51 2000
+++ linux-2.4.0-test7-perfctr/Documentation/ioctl-number.txt	Sat Sep  2 17:24:29 2000
@@ -185,3 +185,5 @@
 0xB1	00-1F	PPPoX			<mailto:mostrows@styx.uwaterloo.ca>
 0xCB	00-1F	CBM serial IEC bus	in development:
 					<mailto:michael.klein@puffin.lb.shuttle.de>
+0xD0	all	performance counters	in development:
+					<mailto:mikpe@csd.uu.se>
--- linux-2.4.0-test7-perfctr/MAINTAINERS.~1~	Thu Aug 24 13:30:49 2000
+++ linux-2.4.0-test7-perfctr/MAINTAINERS	Sat Sep  2 17:24:29 2000
@@ -903,6 +903,12 @@
 L:	linux-net@vger.kernel.org
 S:	Maintained
 
+PERFORMANCE-MONITORING COUNTERS DRIVER
+P:	Mikael Pettersson
+M:	mikpe@csd.uu.se
+W:	http://www.csd.uu.se/~mikpe/linux/perfctr/
+S:	Maintained
+
 PNP SUPPORT
 P:	Tom Lees
 M:	tom@lpsg.demon.co.uk
--- linux-2.4.0-test7-perfctr/Makefile.~1~	Thu Aug 24 13:30:49 2000
+++ linux-2.4.0-test7-perfctr/Makefile	Sat Sep  2 17:24:29 2000
@@ -179,6 +179,10 @@
 
 DRIVERS += $(DRIVERS-y)
 
+ifdef CONFIG_PERFCTR
+DRIVERS += drivers/perfctr/kperfctr.o
+endif
+
 include arch/$(ARCH)/Makefile
 
 # use '-fno-strict-aliasing', but only if the compiler can take it
--- linux-2.4.0-test7-perfctr/arch/i386/config.in.~1~	Thu Aug 24 13:30:49 2000
+++ linux-2.4.0-test7-perfctr/arch/i386/config.in	Sat Sep  2 17:24:29 2000
@@ -192,6 +192,7 @@
 fi
 
 source drivers/pci/Config.in
+source drivers/perfctr/Config.in
 
 if [ "$CONFIG_VISWS" != "y" ]; then
    bool 'MCA support' CONFIG_MCA
--- linux-2.4.0-test7-perfctr/arch/i386/kernel/process.c.~1~	Tue Jul 11 19:35:04 2000
+++ linux-2.4.0-test7-perfctr/arch/i386/kernel/process.c	Sat Sep  2 17:35:16 2000
@@ -32,6 +32,7 @@
 #include <linux/delay.h>
 #include <linux/reboot.h>
 #include <linux/init.h>
+#include <linux/perfctr.h>
 
 #include <asm/uaccess.h>
 #include <asm/pgtable.h>
@@ -460,7 +461,7 @@
  */
 void exit_thread(void)
 {
-	/* nothing to do ... */
+	perfctr_exit_thread(&current->thread);
 }
 
 void flush_thread(void)
@@ -477,6 +478,7 @@
 
 void release_thread(struct task_struct *dead_task)
 {
+	perfctr_release_thread(&current->thread, &dead_task->thread);
 	if (dead_task->mm) {
 		void * ldt = dead_task->mm->segments;
 
@@ -545,6 +547,8 @@
 	unlazy_fpu(current);
 	struct_cpy(&p->thread.i387, &current->thread.i387);
 
+	perfctr_copy_thread(&p->thread, clone_flags);
+
 	return 0;
 }
 
@@ -627,6 +631,8 @@
 				 *next = &next_p->thread;
 	struct tss_struct *tss = init_tss + smp_processor_id();
 
+	perfctr_suspend_thread(prev);
+
 	unlazy_fpu(prev_p);
 
 	/*
@@ -682,11 +688,13 @@
 			 */
 			tss->bitmap = INVALID_IO_BITMAP_OFFSET;
 	}
+
+	perfctr_resume_thread(next);
 }
 
 asmlinkage int sys_fork(struct pt_regs regs)
 {
-	return do_fork(SIGCHLD, regs.esp, &regs);
+	return do_fork(CLONE_PERFCTR | SIGCHLD, regs.esp, &regs);
 }
 
 asmlinkage int sys_clone(struct pt_regs regs)
@@ -713,7 +721,7 @@
  */
 asmlinkage int sys_vfork(struct pt_regs regs)
 {
-	return do_fork(CLONE_VFORK | CLONE_VM | SIGCHLD, regs.esp, &regs);
+	return do_fork(CLONE_PERFCTR | CLONE_VFORK | CLONE_VM | SIGCHLD, regs.esp, &regs);
 }
 
 /*
--- linux-2.4.0-test7-perfctr/arch/i386/kernel/setup.c.~1~	Thu Aug 24 13:30:49 2000
+++ linux-2.4.0-test7-perfctr/arch/i386/kernel/setup.c	Sat Sep  2 17:24:29 2000
@@ -91,6 +91,7 @@
 #include <asm/dma.h>
 #include <asm/mpspec.h>
 #include <asm/mmu_context.h>
+#include <asm/perfctr.h>
 /*
  * Machine setup..
  */
@@ -1585,7 +1586,7 @@
 void __init dodgy_tsc(void)
 {
 	get_cpu_vendor(&boot_cpu_data);
-
+	perfctr_dodgy_tsc();
 	if(boot_cpu_data.x86_vendor != X86_VENDOR_CYRIX)
 		return;
 
--- linux-2.4.0-test7-perfctr/drivers/Makefile.~1~	Thu Aug 24 13:30:49 2000
+++ linux-2.4.0-test7-perfctr/drivers/Makefile	Sat Sep  2 17:24:29 2000
@@ -13,6 +13,7 @@
 				ieee1394 macintosh video dio zorro fc4 \
 				usb nubus tc atm pcmcia i2c telephony \
 				acpi mtd input
+ALL_SUB_DIRS += perfctr
 
 ifdef CONFIG_DIO
 SUB_DIRS += dio
@@ -194,6 +195,15 @@
 else
   ifeq ($(CONFIG_I2C),m)
   MOD_SUB_DIRS += i2c
+  endif
+endif
+
+ifeq ($(CONFIG_PERFCTR),y)
+SUB_DIRS += perfctr
+else
+  ifeq ($(CONFIG_PERFCTR),m)
+  SUB_DIRS += perfctr
+  MOD_SUB_DIRS += perfctr
   endif
 endif
 
--- linux-2.4.0-test7-perfctr/include/asm-i386/processor.h.~1~	Thu Aug 10 13:31:19 2000
+++ linux-2.4.0-test7-perfctr/include/asm-i386/processor.h	Sat Sep  2 17:24:29 2000
@@ -330,6 +330,11 @@
 	unsigned long __cacheline_filler[5];
 };
 
+/*
+ * Virtual per-process performance-monitoring counters.
+ */
+struct vperfctr;	/* opaque; no need to depend on <linux/perfctr.h> */
+
 struct thread_struct {
 	unsigned long	esp0;
 	unsigned long	eip;
@@ -349,6 +354,8 @@
 /* IO permissions */
 	int		ioperm;
 	unsigned long	io_bitmap[IO_BITMAP_SIZE+1];
+/* performance counters */
+	struct vperfctr *perfctr;
 };
 
 #define INIT_THREAD  {						\
@@ -358,7 +365,8 @@
 	0, 0, 0,						\
 	{ { 0, }, },		/* 387 state */			\
 	0,0,0,0,0,0,						\
-	0,{~0,}			/* io permissions */		\
+	0,{~0,},		/* io permissions */		\
+	NULL,			/* performance counters */	\
 }
 
 #define INIT_MMAP \
--- linux-2.4.0-test7-perfctr/include/linux/sched.h.~1~	Thu Aug 24 13:30:56 2000
+++ linux-2.4.0-test7-perfctr/include/linux/sched.h	Sat Sep  2 17:32:50 2000
@@ -38,6 +38,7 @@
 #define CLONE_PTRACE	0x00002000	/* set if we want to let tracing continue on the child too */
 #define CLONE_VFORK	0x00004000	/* set if the parent wants the child to wake it up on mm_release */
 #define CLONE_PARENT	0x00008000	/* set if we want to have the same parent as the cloner */
+#define CLONE_PERFCTR	0x00020000	/* set if child should inherit perfctrs */
 
 /*
  * These are the constant used to fake the fixed-point load-average
