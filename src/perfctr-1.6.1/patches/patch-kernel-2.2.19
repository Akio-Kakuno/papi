--- linux-2.2.19-perfctr/CREDITS.~1~	Mon Mar 26 22:41:59 2001
+++ linux-2.2.19-perfctr/CREDITS	Wed Mar 28 21:11:21 2001
@@ -1729,6 +1729,12 @@
 D: implemented kmod
 D: modularized BSD Unix domain sockets
 
+N: Mikael Pettersson
+E: mikpe@csd.uu.se
+W: http://www.csd.uu.se/~mikpe/
+D: Miscellaneous fixes
+D: Performance-monitoring counters driver
+
 N: Reed H. Petty
 E: rhp@draper.net
 W: http://www.draper.net
--- linux-2.2.19-perfctr/Documentation/Configure.help.~1~	Mon Mar 26 22:41:59 2001
+++ linux-2.2.19-perfctr/Documentation/Configure.help	Wed Mar 28 21:13:01 2001
@@ -1771,6 +1771,82 @@
 
   If you don't know what to do, choose "386".
 
+Performance-monitoring counters support
+CONFIG_PERFCTR
+  This driver provides access to the performance-monitoring counter
+  registers available in some (but not all) modern processors.
+  These special-purpose registers can be programmed to count low-level
+  performance-related events which occur during program execution,
+  such as cache misses, pipeline stalls, etc.
+
+  The driver supports most x86-class processors known to have
+  performance-monitoring counters: Intel Pentium to Pentium III,
+  AMD K7 Athlon, Cyrix 6x86MX/MII/III, and WinChip C6/2/3.
+
+  On processors which have a time-stamp counter but no performance-
+  monitoring counters, such as the AMD K6 family, the driver supports
+  plain cycle-count performance measurements only.
+
+  You can safely say Y here, even if you intend to run the kernel
+  on a processor without performance-monitoring counters.
+
+  You can also say M here to compile the driver as a module; the
+  module will be called `perfctr.o'.
+
+Init-time hardware tests
+CONFIG_PERFCTR_INIT_TESTS
+  This option makes the driver run additional hardware tests
+  during initialisation. This is not necessary for normal
+  operation, but it can be useful during driver development.
+
+  If unsure, say N.
+
+Support WinChip processors
+CONFIG_PERFCTR_WINCHIP
+  The time-stamp counter is a standard facility on Pentium-class
+  processors for counting clock cycles. Normally, the time-stamp
+  counter is unrelated to the performance-monitoring counters.
+  However, WinChip C6/2/3 processors implement the time-stamp
+  counter by running the performance-monitoring counters in a
+  special mode, and then synthesising the 64-bit time-stamp from
+  the low 32 bits of both performance-monitoring counters.
+
+  One of several problems caused by this design is that all access
+  to the time-stamp counter must be disabled if the performance-
+  monitoring counters are to be used. This, in turn, will increase
+  the cost of time-keeping operations in both the kernel and user
+  applications.
+
+  To use the performance-monitoring counters on a WinChip processor,
+  you must select this option and also configure the kernel for a
+  processor model which does not imply a working time-stamp counter,
+  i.e. 386, 486, or generic 586.
+
+  If unsure, say N.
+
+Virtual performance counters support
+CONFIG_PERFCTR_VIRTUAL
+  The processor's performance-monitoring counters are special-purpose
+  global registers. This option adds support for virtual per-process
+  performance-monitoring counters which only run when the process
+  to which they belong is executing. This improves the accuracy of
+  performance measurements by reducing "noise" from other processes.
+
+  Say Y.
+
+Global performance counters support
+CONFIG_PERFCTR_GLOBAL
+  This option adds driver support for global-mode (system-wide)
+  performance-monitoring counters. In this mode, the driver allows
+  each performance-monitoring counter on each processor to be
+  controlled and read. The driver provides a sampling timer to
+  maintain 64-bit accumulated event counts.
+
+  Global-mode performance counters cannot be used if some process
+  is currently using virtual-mode performance counters, and vice versa.
+
+  Say Y.
+
 VGA text console
 CONFIG_VGA_CONSOLE
   Saying Y here will allow you to use Linux in text mode through a
--- linux-2.2.19-perfctr/Documentation/ioctl-number.txt.~1~	Mon Mar 26 22:41:59 2001
+++ linux-2.2.19-perfctr/Documentation/ioctl-number.txt	Wed Mar 28 21:11:21 2001
@@ -134,3 +134,5 @@
 0xA3	90-9F	DoubleTalk driver	in development:
 					<mailto:jrv@vanzandt.mv.com>
 0xAB	00-06	Network block device
+0xD0	all	performance counters	in development:
+					<mailto:mikpe@csd.uu.se>
--- linux-2.2.19-perfctr/MAINTAINERS.~1~	Mon Mar 26 22:41:59 2001
+++ linux-2.2.19-perfctr/MAINTAINERS	Wed Mar 28 21:11:21 2001
@@ -804,6 +804,12 @@
 L:	linux-net@vger.kernel.org
 S:	Maintained
 
+PERFORMANCE-MONITORING COUNTERS DRIVER
+P:	Mikael Pettersson
+M:	mikpe@csd.uu.se
+W:	http://www.csd.uu.se/~mikpe/linux/perfctr/
+S:	Maintained
+
 PNP SUPPORT
 P:	Tom Lees
 M:	tom@lpsg.demon.co.uk
--- linux-2.2.19-perfctr/Makefile.~1~	Mon Mar 26 22:41:59 2001
+++ linux-2.2.19-perfctr/Makefile	Wed Mar 28 21:11:21 2001
@@ -218,6 +218,10 @@
 DRIVERS := $(DRIVERS) drivers/telephony/telephony.a
 endif
 
+ifdef CONFIG_PERFCTR
+DRIVERS += drivers/perfctr/kperfctr.o
+endif
+
 include arch/$(ARCH)/Makefile
 
 .S.s:
--- linux-2.2.19-perfctr/arch/i386/config.in.~1~	Mon Mar 26 22:41:59 2001
+++ linux-2.2.19-perfctr/arch/i386/config.in	Wed Mar 28 21:11:21 2001
@@ -4,6 +4,8 @@
 #
 mainmenu_name "Linux Kernel Configuration"
 
+define_bool CONFIG_X86 y
+
 mainmenu_option next_comment
 comment 'Code maturity level options'
 bool 'Prompt for development and/or incomplete code/drivers' CONFIG_EXPERIMENTAL
@@ -77,6 +79,7 @@
   fi
   bool '   Backward-compatible /proc/pci' CONFIG_PCI_OLD_PROC
 fi
+source drivers/perfctr/Config.in
 bool 'MCA support' CONFIG_MCA
 bool 'SGI Visual Workstation support' CONFIG_VISWS
 if [ "$CONFIG_VISWS" = "y" ]; then
--- linux-2.2.19-perfctr/arch/i386/kernel/process.c.~1~	Mon Dec 11 22:10:07 2000
+++ linux-2.2.19-perfctr/arch/i386/kernel/process.c	Wed Mar 28 21:11:21 2001
@@ -31,6 +31,7 @@
 #include <linux/smp.h>
 #include <linux/reboot.h>
 #include <linux/init.h>
+#include <linux/perfctr.h>
 #include <linux/mc146818rtc.h>
 
 #include <asm/uaccess.h>
@@ -524,7 +525,7 @@
  */
 void exit_thread(void)
 {
-	/* nothing to do ... */
+	perfctr_exit_thread(&current->tss);
 }
 
 void flush_thread(void)
@@ -544,6 +545,7 @@
 
 void release_thread(struct task_struct *dead_task)
 {
+	perfctr_release_thread(&current->tss, &dead_task->tss);
 }
 
 /*
@@ -610,6 +612,8 @@
 	unlazy_fpu(current);
 	p->tss.i387 = current->tss.i387;
 
+	perfctr_copy_thread(&p->tss, clone_flags);
+
 	return 0;
 }
 
@@ -706,6 +710,8 @@
  */
 void __switch_to(struct task_struct *prev, struct task_struct *next)
 {
+	perfctr_suspend_thread(&prev->tss);
+
 	/* Do the FPU save and set TS if it wasn't set before.. */
 	unlazy_fpu(prev);
 
@@ -759,11 +765,13 @@
 		loaddebug(next,6);
 		loaddebug(next,7);
 	}
+
+	perfctr_resume_thread(&next->tss);
 }
 
 asmlinkage int sys_fork(struct pt_regs regs)
 {
-	return do_fork(SIGCHLD, regs.esp, &regs);
+	return do_fork(CLONE_PERFCTR | SIGCHLD, regs.esp, &regs);
 }
 
 asmlinkage int sys_clone(struct pt_regs regs)
@@ -790,7 +798,7 @@
  */
 asmlinkage int sys_vfork(struct pt_regs regs)
 {
-	return do_fork(CLONE_VFORK | CLONE_VM | SIGCHLD, regs.esp, &regs);
+	return do_fork(CLONE_PERFCTR | CLONE_VFORK | CLONE_VM | SIGCHLD, regs.esp, &regs);
 }
 
 /*
--- linux-2.2.19-perfctr/arch/i386/kernel/setup.c.~1~	Mon Mar 26 22:41:59 2001
+++ linux-2.2.19-perfctr/arch/i386/kernel/setup.c	Wed Mar 28 21:11:21 2001
@@ -74,6 +74,7 @@
 #include <asm/msr.h>
 #include <asm/dma.h>
 #include <asm/e820.h>
+#include <asm/perfctr.h>
 
 /*
  * Machine setup..
@@ -1227,7 +1228,7 @@
 __initfunc(void dodgy_tsc(void))
 {
 	get_cpu_vendor(&boot_cpu_data);
-	
+	perfctr_dodgy_tsc();
 	if(boot_cpu_data.x86_vendor != X86_VENDOR_CYRIX)
 	{
 		return;
--- linux-2.2.19-perfctr/drivers/Makefile.~1~	Mon Dec 11 22:10:08 2000
+++ linux-2.2.19-perfctr/drivers/Makefile	Wed Mar 28 21:11:21 2001
@@ -11,6 +11,7 @@
 MOD_SUB_DIRS := $(SUB_DIRS)
 ALL_SUB_DIRS := $(SUB_DIRS) pci sgi scsi sbus cdrom isdn pnp \
 				macintosh video dio zorro fc4 nubus usb telephony i2o
+ALL_SUB_DIRS += perfctr
 
 ifdef CONFIG_DIO
 SUB_DIRS += dio
@@ -125,6 +126,15 @@
 else
   ifeq ($(CONFIG_I2O),m)
   MOD_SUB_DIRS += i2o
+  endif
+endif
+
+ifeq ($(CONFIG_PERFCTR),y)
+SUB_DIRS += perfctr
+else
+  ifeq ($(CONFIG_PERFCTR),m)
+  SUB_DIRS += perfctr
+  MOD_SUB_DIRS += perfctr
   endif
 endif
 
--- linux-2.2.19-perfctr/include/asm-i386/processor.h.~1~	Mon Mar 26 22:42:01 2001
+++ linux-2.2.19-perfctr/include/asm-i386/processor.h	Wed Mar 28 21:11:21 2001
@@ -13,6 +13,11 @@
 #include <asm/page.h>
 
 /*
+ * Virtual per-process performance-monitoring counters.
+ */
+struct vperfctr;	/* opaque; no need to depend on <linux/perfctr.h> */
+
+/*
  *  CPU type and hardware bug flags. Kept separately for each CPU.
  *  Members of this structure are referenced in head.S, so think twice
  *  before touching them. [mj]
@@ -244,6 +249,8 @@
 	struct vm86_struct * vm86_info;
 	unsigned long screen_bitmap;
 	unsigned long v86flags, v86mask, v86mode, saved_esp0;
+/* performance counters */
+	struct vperfctr *perfctr;
 };
 
 #define INIT_MMAP \
@@ -267,6 +274,7 @@
 	{ 0, },							\
 	{ { 0, }, },  /* 387 state */				\
 	NULL, 0, 0, 0, 0, 0, /* vm86_info */			\
+	NULL, /* performance counters */			\
 }
 
 #define start_thread(regs, new_eip, new_esp) do {		\
--- linux-2.2.19-perfctr/include/linux/sched.h.~1~	Mon Mar 26 22:42:02 2001
+++ linux-2.2.19-perfctr/include/linux/sched.h	Wed Mar 28 21:11:21 2001
@@ -34,6 +34,7 @@
 #define CLONE_PID	0x00001000	/* set if pid shared */
 #define CLONE_PTRACE	0x00002000	/* set if we want to let tracing continue on the child too */
 #define CLONE_VFORK	0x00004000	/* set if the parent wants the child to wake it up on mm_release */
+#define CLONE_PERFCTR	0x00020000	/* set if child should inherit perfctrs */
 
 /*
  * These are the constant used to fake the fixed-point load-average
