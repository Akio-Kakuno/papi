ALL = papi_br_ins papi_br_msp papi_fp_ops papi_tot_cyc papi_tot_ins

all: $(ALL)


display_error.o:	display_error.c display_error.h
	$(CC) $(INCLUDE) $(CFLAGS) $(OPTFLAGS) -c display_error.c


branches_testcode.o:	branches_testcode.c testcode.h
	$(CC) $(INCLUDE) $(CFLAGS) $(OPTFLAGS) -c branches_testcode.c

flops_testcode.o:	flops_testcode.c testcode.h
	$(CC) $(INCLUDE) $(CFLAGS) $(OPTFLAGS) -c flops_testcode.c

instructions_testcode.o:	instructions_testcode.c testcode.h
	$(CC) $(INCLUDE) $(CFLAGS) $(OPTFLAGS) -c instructions_testcode.c


matrix_multiply.o:	matrix_multiply.c matrix_multiply.h
	$(CC) $(INCLUDE) $(CFLAGS) $(OPTFLAGS) -c matrix_multiply.c


papi_br_ins: papi_br_ins.c $(TESTLIB) $(PAPILIB) display_error.o branches_testcode.o
	$(CC) $(INCLUDE) $(CFLAGS) $(OPTFLAGS) papi_br_ins.c $(TESTLIB) display_error.o branches_testcode.o $(PAPILIB) $(LDFLAGS) -o $@

papi_br_msp: papi_br_msp.c $(TESTLIB) $(PAPILIB) display_error.o branches_testcode.o
	$(CC) $(INCLUDE) $(CFLAGS) $(OPTFLAGS) papi_br_msp.c $(TESTLIB) display_error.o branches_testcode.o $(PAPILIB) $(LDFLAGS) -o $@

papi_fp_ops: papi_fp_ops.c $(TESTLIB) $(PAPILIB) display_error.o branches_testcode.o flops_testcode.o
	$(CC) $(INCLUDE) $(CFLAGS) $(OPTFLAGS) papi_fp_ops.c $(TESTLIB) display_error.o branches_testcode.o flops_testcode.o $(PAPILIB) $(LDFLAGS) -o $@

papi_tot_cyc: papi_tot_cyc.c $(TESTLIB) $(PAPILIB) display_error.o matrix_multiply.o
	$(CC) $(INCLUDE) $(CFLAGS) $(OPTFLAGS) papi_tot_cyc.c $(TESTLIB) display_error.o matrix_multiply.o $(PAPILIB) $(LDFLAGS) -lrt -o $@

papi_tot_ins: papi_tot_ins.c $(TESTLIB) $(PAPILIB) display_error.o instructions_testcode.o
	$(CC) $(INCLUDE) $(CFLAGS) $(OPTFLAGS) papi_tot_ins.c $(TESTLIB) display_error.o instructions_testcode.o $(PAPILIB) $(LDFLAGS) -o $@


.PHONY : all clean

clean:
	rm -f *.o *.stderr *.stdout core *~ $(ALL)
