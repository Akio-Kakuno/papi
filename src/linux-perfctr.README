/* 
* File:    linux-2.4-x86.README
* CVS:     $Id$
* Author:  Philip Mucci
*          mucci@cs.utk.edu
*          Nils Smeds
*          smeds@pdc.kth.se
* Mods:    <your name here>
*          <your email address>
*/  

Linux Kernel Notes
----------------------

You patch your kernel with the appropriate patch 
either Perfctr 1.6 from perfctr/ or Perfctr 2.3 from perfctr-2.3/.

The latest distribution can always be obtained from Mikael Petterson's
web site although it is not guaranteed to work. 

		http://www.csd.uu.se/~mikpe/linux/perfctr/

If you're not sure how to patch, recompile and reinstall your linux
kernel, check the Linux HOWTO's on the web. 

		http://www.linuxhq.com.

Before you compile
------------------

cd perfctr or perfctr-2.3
more INSTALL

If your getting compilation errors regarding not being able to find
include files, then your probably running a broken redhat installation.
Edit the path to your kernel include files at the top of either
Makefile.linux-perfctr or Makefile.linux-perfctr-2.3

x86 Native Event Notes
----------------------

For *all* the native event codes, see the x86-events.h header file and
the website at

		http://www.sandpile.org

The native event counter format is:

	event_code = 16 bit event selector code and MESI unit mask.
	hw_counter_num = Event register number 0 through 1, (2 or 3 on K7).
			
	event = (event_code << 8) | (hw_counter_num).

Hardware interrupt driven counters
----------------------------------

With Perfctr 2.3.3 or later it is possible to make the performance counters
generate an interrupt when the counter reaches a certain count. This requires
support in the Linux kernel, Perfctr, PAPI and the CPU to work properly.

The necessary kernel support is available if your kernel is compiled with
SMP APIC support or uni-processor APIC support compiled in. This is true
for 2.4-ac kernels and kernels 2.4.10 or later. This topic is discussed in
more detail in Mikael Pettersson's installation instructions for PerfCtr.

For hardware interrupts to be enabled in PAPI you need to set the compile-time
option -DPAPI_PERFCTR_INTR_SUPPORT.

Finally your CPU must be a Pentium 686 or similar which can generate APIC 
interrupts for performance counter events. This is _not_ true for mobile
Pentium processors.

Finally, hardware driven interrupts in PAPI is a very new thing. There are
probably bugs in it that we need your help to find. You can always go back
to the previous time-based overflow mode by recompiling PAPI without the
-DPAPI_PERFCTR_INTR_SUPPORT switch.
