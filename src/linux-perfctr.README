/* 
* File:    linux-2.4-x86.README
* CVS:     $Id$
* Author:  Philip Mucci
*          mucci@cs.utk.edu
*          Nils Smeds
*          smeds@pdc.kth.se
* Mods:    <your name here>
*          <your email address>
*/  

PAPI and the Linux Kernel
-------------------------

PAPI requires your Linux kernel to be patched with the PerfCtr patch. For 
compatability reasons, we have included this patch here. You should patch
your kernel using the PerfCtr distribution found in the papi/src/perfctr
directory.

The latest distribution can always be obtained from Mikael Petterson's
web site although it is not guaranteed to work. 

		http://www.csd.uu.se/~mikpe/linux/perfctr/

If you're not sure how to patch, recompile and reinstall your linux
kernel, check the Linux HOWTO's on the web. 

		http://www.linuxhq.com.

Before you compile
------------------

cd perfctr
more INSTALL

If your getting compilation errors regarding not being able to find
include files, then your probably running a broken redhat installation.
Edit the path to your kernel include files at the top of either
Makefile.linux-perfctr

If you have already patched your kernel
---------------------------------------

If you have a properly functioning Perfctr patch from a previous
release of PAPI, you will obviously not want to repatch your kernel. PAPI
is compatible with PerfCtr 2.4.x and Perfctr 2.6.x. 

The x86 Makefiles:
Makefile.linux-perfctr-p3
Makefile.linux-perfctr-p4
Makefile.linux-athlon
Makefile.linux-opteron

To recompile PAPI *not* using the included PerfCtr distribution, you simply
pass the PERFCTR argument to the appropriate Makefile.

make -f Makefile.linux-perfctr-p3 PERFCTR=/usr/src/perfctr-2.4.x

To use Perfctr 2.6.x, simply type:
make -f Makefile.linux-perfctr-p3

To use the older version:
make -f Makefile.linux-perfctr-p3 VERSION=2.4.x

Easy huh?

Hardware interrupt driven counters
----------------------------------

YOU MUST COMPILE YOUR KERNEL WITH APIC SUPPORT IF YOU WANT
INTERRUPT SUPPORT!

With Perfctr 2.3.3 or later it is possible to make the performance counters
generate an interrupt when the counter reaches a certain count. This requires
support in the Linux kernel, Perfctr, PAPI and the CPU to work properly.

The necessary kernel support is available if your kernel is compiled with
SMP APIC support or uni-processor APIC support compiled in. This is true
for 2.4-ac kernels and kernels 2.4.10 or later. This topic is discussed in
more detail in Mikael Pettersson's installation instructions for PerfCtr.

Your CPU must be a Pentium 686/AMD K7 or similar which can generate APIC 
interrupts for performance counter events. This is _not_ true for some mobile
Pentiums and early revisions of the AMD K7 or Athlon.

You can verify that all is working by running the perfctr/examples/perfex 
program with the -i flag. If you do not see "pcint" as one of the flags, 
you need to recompile your kernel or buy a real CPU. ;-)

Floating point counts on the Pentium 4 series
---------------------------------------------

As you may or may not know, the Pentium 4 can generate floating point
instructions either through the x87 hardware or with SSE. Furthermore with
SSE it can generate packed (multiple operands in one 128-bit register) or
unpacked (signal operand in one 128-bit register). Depending on your compiler
you will get different instructions. In order to enable PAPI to count these,
we have introduced 2 methods.

1) The PAPI_PENTIUM4_FP environment variable.

   Set this to one or two of the following, and it will change the
   behavior of PAPI_FP_INS and PAPI_FP_OPS.

   X87: count all x87 instructions
   SSE_UP_SP: count all unpacked SSE single precision instructions
   SSE_UP_DP: count all unpacked SSE double precision instructions

   Do to the design of the register set, only 2 of the three are countable
   at one time. Sorry folks.

2) The PAPI_PENTIUM4_FP_xxx defines.

   Set these in the EVENTFLAGS of either the Makefile.linux-perfctr-p4 or
   Makefile.linux-perfctr-em64t.

   -DPAPI_PENTIUM4_FP_X87
   -DPAPI_PENTIUM4_FP_X87_SSE_SP
   -DPAPI_PENTIUM4_FP_X87_SSE_DP
   -DPAPI_PENTIUM4_FP_SSE_SP_DP

   The default for Nocona/EM64T/Pentium 4 Model 3 is:

	 -DPAPI_PENTIUM4_FP_X87_SSE_DP.

   The default for anything else is:

	 -DPAPI_PENTIUM4_FP_X87.
