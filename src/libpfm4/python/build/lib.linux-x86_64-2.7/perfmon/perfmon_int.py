# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.4
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_perfmon_int', [dirname(__file__)])
        except ImportError:
            import _perfmon_int
            return _perfmon_int
        if fp is not None:
            try:
                _mod = imp.load_module('_perfmon_int', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _perfmon_int = swig_import_helper()
    del swig_import_helper
else:
    import _perfmon_int
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


PERF_TYPE_HARDWARE = _perfmon_int.PERF_TYPE_HARDWARE
PERF_TYPE_SOFTWARE = _perfmon_int.PERF_TYPE_SOFTWARE
PERF_TYPE_TRACEPOINT = _perfmon_int.PERF_TYPE_TRACEPOINT
PERF_TYPE_HW_CACHE = _perfmon_int.PERF_TYPE_HW_CACHE
PERF_TYPE_RAW = _perfmon_int.PERF_TYPE_RAW
PERF_TYPE_BREAKPOINT = _perfmon_int.PERF_TYPE_BREAKPOINT
PERF_TYPE_UNCORE = _perfmon_int.PERF_TYPE_UNCORE
PERF_TYPE_MAX = _perfmon_int.PERF_TYPE_MAX
PERF_COUNT_HW_CPU_CYCLES = _perfmon_int.PERF_COUNT_HW_CPU_CYCLES
PERF_COUNT_HW_INSTRUCTIONS = _perfmon_int.PERF_COUNT_HW_INSTRUCTIONS
PERF_COUNT_HW_CACHE_REFERENCES = _perfmon_int.PERF_COUNT_HW_CACHE_REFERENCES
PERF_COUNT_HW_CACHE_MISSES = _perfmon_int.PERF_COUNT_HW_CACHE_MISSES
PERF_COUNT_HW_BRANCH_INSTRUCTIONS = _perfmon_int.PERF_COUNT_HW_BRANCH_INSTRUCTIONS
PERF_COUNT_HW_BRANCH_MISSES = _perfmon_int.PERF_COUNT_HW_BRANCH_MISSES
PERF_COUNT_HW_BUS_CYCLES = _perfmon_int.PERF_COUNT_HW_BUS_CYCLES
PERF_COUNT_HW_MAX = _perfmon_int.PERF_COUNT_HW_MAX
PERF_COUNT_HW_CACHE_L1D = _perfmon_int.PERF_COUNT_HW_CACHE_L1D
PERF_COUNT_HW_CACHE_L1I = _perfmon_int.PERF_COUNT_HW_CACHE_L1I
PERF_COUNT_HW_CACHE_LL = _perfmon_int.PERF_COUNT_HW_CACHE_LL
PERF_COUNT_HW_CACHE_DTLB = _perfmon_int.PERF_COUNT_HW_CACHE_DTLB
PERF_COUNT_HW_CACHE_ITLB = _perfmon_int.PERF_COUNT_HW_CACHE_ITLB
PERF_COUNT_HW_CACHE_BPU = _perfmon_int.PERF_COUNT_HW_CACHE_BPU
PERF_COUNT_HW_CACHE_MAX = _perfmon_int.PERF_COUNT_HW_CACHE_MAX
PERF_COUNT_HW_CACHE_OP_READ = _perfmon_int.PERF_COUNT_HW_CACHE_OP_READ
PERF_COUNT_HW_CACHE_OP_WRITE = _perfmon_int.PERF_COUNT_HW_CACHE_OP_WRITE
PERF_COUNT_HW_CACHE_OP_PREFETCH = _perfmon_int.PERF_COUNT_HW_CACHE_OP_PREFETCH
PERF_COUNT_HW_CACHE_OP_MAX = _perfmon_int.PERF_COUNT_HW_CACHE_OP_MAX
PERF_COUNT_HW_CACHE_RESULT_ACCESS = _perfmon_int.PERF_COUNT_HW_CACHE_RESULT_ACCESS
PERF_COUNT_HW_CACHE_RESULT_MISS = _perfmon_int.PERF_COUNT_HW_CACHE_RESULT_MISS
PERF_COUNT_HW_CACHE_RESULT_MAX = _perfmon_int.PERF_COUNT_HW_CACHE_RESULT_MAX
PERF_COUNT_SW_CPU_CLOCK = _perfmon_int.PERF_COUNT_SW_CPU_CLOCK
PERF_COUNT_SW_TASK_CLOCK = _perfmon_int.PERF_COUNT_SW_TASK_CLOCK
PERF_COUNT_SW_PAGE_FAULTS = _perfmon_int.PERF_COUNT_SW_PAGE_FAULTS
PERF_COUNT_SW_CONTEXT_SWITCHES = _perfmon_int.PERF_COUNT_SW_CONTEXT_SWITCHES
PERF_COUNT_SW_CPU_MIGRATIONS = _perfmon_int.PERF_COUNT_SW_CPU_MIGRATIONS
PERF_COUNT_SW_PAGE_FAULTS_MIN = _perfmon_int.PERF_COUNT_SW_PAGE_FAULTS_MIN
PERF_COUNT_SW_PAGE_FAULTS_MAJ = _perfmon_int.PERF_COUNT_SW_PAGE_FAULTS_MAJ
PERF_COUNT_SW_ALIGNMENT_FAULTS = _perfmon_int.PERF_COUNT_SW_ALIGNMENT_FAULTS
PERF_COUNT_SW_EMULATION_FAULTS = _perfmon_int.PERF_COUNT_SW_EMULATION_FAULTS
PERF_COUNT_SW_MAX = _perfmon_int.PERF_COUNT_SW_MAX
PERF_SAMPLE_IP = _perfmon_int.PERF_SAMPLE_IP
PERF_SAMPLE_TID = _perfmon_int.PERF_SAMPLE_TID
PERF_SAMPLE_TIME = _perfmon_int.PERF_SAMPLE_TIME
PERF_SAMPLE_ADDR = _perfmon_int.PERF_SAMPLE_ADDR
PERF_SAMPLE_READ = _perfmon_int.PERF_SAMPLE_READ
PERF_SAMPLE_CALLCHAIN = _perfmon_int.PERF_SAMPLE_CALLCHAIN
PERF_SAMPLE_ID = _perfmon_int.PERF_SAMPLE_ID
PERF_SAMPLE_CPU = _perfmon_int.PERF_SAMPLE_CPU
PERF_SAMPLE_PERIOD = _perfmon_int.PERF_SAMPLE_PERIOD
PERF_SAMPLE_STREAM_ID = _perfmon_int.PERF_SAMPLE_STREAM_ID
PERF_SAMPLE_RAW = _perfmon_int.PERF_SAMPLE_RAW
PERF_SAMPLE_MAX = _perfmon_int.PERF_SAMPLE_MAX
PERF_FORMAT_TOTAL_TIME_ENABLED = _perfmon_int.PERF_FORMAT_TOTAL_TIME_ENABLED
PERF_FORMAT_TOTAL_TIME_RUNNING = _perfmon_int.PERF_FORMAT_TOTAL_TIME_RUNNING
PERF_FORMAT_ID = _perfmon_int.PERF_FORMAT_ID
PERF_FORMAT_GROUP = _perfmon_int.PERF_FORMAT_GROUP
PERF_FORMAT_MAX = _perfmon_int.PERF_FORMAT_MAX
PERF_ATTR_SIZE_VER0 = _perfmon_int.PERF_ATTR_SIZE_VER0
class perf_event_attr_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, perf_event_attr_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, perf_event_attr_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _perfmon_int.perf_event_attr_t_type_set
    __swig_getmethods__["type"] = _perfmon_int.perf_event_attr_t_type_get
    if _newclass:type = _swig_property(_perfmon_int.perf_event_attr_t_type_get, _perfmon_int.perf_event_attr_t_type_set)
    __swig_setmethods__["size"] = _perfmon_int.perf_event_attr_t_size_set
    __swig_getmethods__["size"] = _perfmon_int.perf_event_attr_t_size_get
    if _newclass:size = _swig_property(_perfmon_int.perf_event_attr_t_size_get, _perfmon_int.perf_event_attr_t_size_set)
    __swig_setmethods__["config"] = _perfmon_int.perf_event_attr_t_config_set
    __swig_getmethods__["config"] = _perfmon_int.perf_event_attr_t_config_get
    if _newclass:config = _swig_property(_perfmon_int.perf_event_attr_t_config_get, _perfmon_int.perf_event_attr_t_config_set)
    __swig_setmethods__["sample_type"] = _perfmon_int.perf_event_attr_t_sample_type_set
    __swig_getmethods__["sample_type"] = _perfmon_int.perf_event_attr_t_sample_type_get
    if _newclass:sample_type = _swig_property(_perfmon_int.perf_event_attr_t_sample_type_get, _perfmon_int.perf_event_attr_t_sample_type_set)
    __swig_setmethods__["read_format"] = _perfmon_int.perf_event_attr_t_read_format_set
    __swig_getmethods__["read_format"] = _perfmon_int.perf_event_attr_t_read_format_get
    if _newclass:read_format = _swig_property(_perfmon_int.perf_event_attr_t_read_format_get, _perfmon_int.perf_event_attr_t_read_format_set)
    __swig_setmethods__["disabled"] = _perfmon_int.perf_event_attr_t_disabled_set
    __swig_getmethods__["disabled"] = _perfmon_int.perf_event_attr_t_disabled_get
    if _newclass:disabled = _swig_property(_perfmon_int.perf_event_attr_t_disabled_get, _perfmon_int.perf_event_attr_t_disabled_set)
    __swig_setmethods__["inherit"] = _perfmon_int.perf_event_attr_t_inherit_set
    __swig_getmethods__["inherit"] = _perfmon_int.perf_event_attr_t_inherit_get
    if _newclass:inherit = _swig_property(_perfmon_int.perf_event_attr_t_inherit_get, _perfmon_int.perf_event_attr_t_inherit_set)
    __swig_setmethods__["pinned"] = _perfmon_int.perf_event_attr_t_pinned_set
    __swig_getmethods__["pinned"] = _perfmon_int.perf_event_attr_t_pinned_get
    if _newclass:pinned = _swig_property(_perfmon_int.perf_event_attr_t_pinned_get, _perfmon_int.perf_event_attr_t_pinned_set)
    __swig_setmethods__["exclusive"] = _perfmon_int.perf_event_attr_t_exclusive_set
    __swig_getmethods__["exclusive"] = _perfmon_int.perf_event_attr_t_exclusive_get
    if _newclass:exclusive = _swig_property(_perfmon_int.perf_event_attr_t_exclusive_get, _perfmon_int.perf_event_attr_t_exclusive_set)
    __swig_setmethods__["exclude_user"] = _perfmon_int.perf_event_attr_t_exclude_user_set
    __swig_getmethods__["exclude_user"] = _perfmon_int.perf_event_attr_t_exclude_user_get
    if _newclass:exclude_user = _swig_property(_perfmon_int.perf_event_attr_t_exclude_user_get, _perfmon_int.perf_event_attr_t_exclude_user_set)
    __swig_setmethods__["exclude_kernel"] = _perfmon_int.perf_event_attr_t_exclude_kernel_set
    __swig_getmethods__["exclude_kernel"] = _perfmon_int.perf_event_attr_t_exclude_kernel_get
    if _newclass:exclude_kernel = _swig_property(_perfmon_int.perf_event_attr_t_exclude_kernel_get, _perfmon_int.perf_event_attr_t_exclude_kernel_set)
    __swig_setmethods__["exclude_hv"] = _perfmon_int.perf_event_attr_t_exclude_hv_set
    __swig_getmethods__["exclude_hv"] = _perfmon_int.perf_event_attr_t_exclude_hv_get
    if _newclass:exclude_hv = _swig_property(_perfmon_int.perf_event_attr_t_exclude_hv_get, _perfmon_int.perf_event_attr_t_exclude_hv_set)
    __swig_setmethods__["exclude_idle"] = _perfmon_int.perf_event_attr_t_exclude_idle_set
    __swig_getmethods__["exclude_idle"] = _perfmon_int.perf_event_attr_t_exclude_idle_get
    if _newclass:exclude_idle = _swig_property(_perfmon_int.perf_event_attr_t_exclude_idle_get, _perfmon_int.perf_event_attr_t_exclude_idle_set)
    __swig_setmethods__["mmap"] = _perfmon_int.perf_event_attr_t_mmap_set
    __swig_getmethods__["mmap"] = _perfmon_int.perf_event_attr_t_mmap_get
    if _newclass:mmap = _swig_property(_perfmon_int.perf_event_attr_t_mmap_get, _perfmon_int.perf_event_attr_t_mmap_set)
    __swig_setmethods__["comm"] = _perfmon_int.perf_event_attr_t_comm_set
    __swig_getmethods__["comm"] = _perfmon_int.perf_event_attr_t_comm_get
    if _newclass:comm = _swig_property(_perfmon_int.perf_event_attr_t_comm_get, _perfmon_int.perf_event_attr_t_comm_set)
    __swig_setmethods__["freq"] = _perfmon_int.perf_event_attr_t_freq_set
    __swig_getmethods__["freq"] = _perfmon_int.perf_event_attr_t_freq_get
    if _newclass:freq = _swig_property(_perfmon_int.perf_event_attr_t_freq_get, _perfmon_int.perf_event_attr_t_freq_set)
    __swig_setmethods__["inherit_stat"] = _perfmon_int.perf_event_attr_t_inherit_stat_set
    __swig_getmethods__["inherit_stat"] = _perfmon_int.perf_event_attr_t_inherit_stat_get
    if _newclass:inherit_stat = _swig_property(_perfmon_int.perf_event_attr_t_inherit_stat_get, _perfmon_int.perf_event_attr_t_inherit_stat_set)
    __swig_setmethods__["enable_on_exec"] = _perfmon_int.perf_event_attr_t_enable_on_exec_set
    __swig_getmethods__["enable_on_exec"] = _perfmon_int.perf_event_attr_t_enable_on_exec_get
    if _newclass:enable_on_exec = _swig_property(_perfmon_int.perf_event_attr_t_enable_on_exec_get, _perfmon_int.perf_event_attr_t_enable_on_exec_set)
    __swig_setmethods__["task"] = _perfmon_int.perf_event_attr_t_task_set
    __swig_getmethods__["task"] = _perfmon_int.perf_event_attr_t_task_get
    if _newclass:task = _swig_property(_perfmon_int.perf_event_attr_t_task_get, _perfmon_int.perf_event_attr_t_task_set)
    __swig_setmethods__["watermark"] = _perfmon_int.perf_event_attr_t_watermark_set
    __swig_getmethods__["watermark"] = _perfmon_int.perf_event_attr_t_watermark_get
    if _newclass:watermark = _swig_property(_perfmon_int.perf_event_attr_t_watermark_get, _perfmon_int.perf_event_attr_t_watermark_set)
    __swig_setmethods__["precise_ip"] = _perfmon_int.perf_event_attr_t_precise_ip_set
    __swig_getmethods__["precise_ip"] = _perfmon_int.perf_event_attr_t_precise_ip_get
    if _newclass:precise_ip = _swig_property(_perfmon_int.perf_event_attr_t_precise_ip_get, _perfmon_int.perf_event_attr_t_precise_ip_set)
    __swig_setmethods__["mmap_data"] = _perfmon_int.perf_event_attr_t_mmap_data_set
    __swig_getmethods__["mmap_data"] = _perfmon_int.perf_event_attr_t_mmap_data_get
    if _newclass:mmap_data = _swig_property(_perfmon_int.perf_event_attr_t_mmap_data_get, _perfmon_int.perf_event_attr_t_mmap_data_set)
    __swig_setmethods__["sample_id_all"] = _perfmon_int.perf_event_attr_t_sample_id_all_set
    __swig_getmethods__["sample_id_all"] = _perfmon_int.perf_event_attr_t_sample_id_all_get
    if _newclass:sample_id_all = _swig_property(_perfmon_int.perf_event_attr_t_sample_id_all_get, _perfmon_int.perf_event_attr_t_sample_id_all_set)
    __swig_setmethods__["__reserved_1"] = _perfmon_int.perf_event_attr_t___reserved_1_set
    __swig_getmethods__["__reserved_1"] = _perfmon_int.perf_event_attr_t___reserved_1_get
    if _newclass:__reserved_1 = _swig_property(_perfmon_int.perf_event_attr_t___reserved_1_get, _perfmon_int.perf_event_attr_t___reserved_1_set)
    __swig_setmethods__["bp_type"] = _perfmon_int.perf_event_attr_t_bp_type_set
    __swig_getmethods__["bp_type"] = _perfmon_int.perf_event_attr_t_bp_type_get
    if _newclass:bp_type = _swig_property(_perfmon_int.perf_event_attr_t_bp_type_get, _perfmon_int.perf_event_attr_t_bp_type_set)
    __swig_getmethods__["sample"] = _perfmon_int.perf_event_attr_t_sample_get
    if _newclass:sample = _swig_property(_perfmon_int.perf_event_attr_t_sample_get)
    __swig_getmethods__["wakeup"] = _perfmon_int.perf_event_attr_t_wakeup_get
    if _newclass:wakeup = _swig_property(_perfmon_int.perf_event_attr_t_wakeup_get)
    __swig_getmethods__["bpa"] = _perfmon_int.perf_event_attr_t_bpa_get
    if _newclass:bpa = _swig_property(_perfmon_int.perf_event_attr_t_bpa_get)
    __swig_getmethods__["bpb"] = _perfmon_int.perf_event_attr_t_bpb_get
    if _newclass:bpb = _swig_property(_perfmon_int.perf_event_attr_t_bpb_get)
    __swig_destroy__ = _perfmon_int.delete_perf_event_attr_t
    __del__ = lambda self : None;
    def __init__(self): 
        this = _perfmon_int.new_perf_event_attr_t()
        try: self.this.append(this)
        except: self.this = this
perf_event_attr_t_swigregister = _perfmon_int.perf_event_attr_t_swigregister
perf_event_attr_t_swigregister(perf_event_attr_t)

class perf_event_attr_t_bpb(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, perf_event_attr_t_bpb, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, perf_event_attr_t_bpb, name)
    __repr__ = _swig_repr
    __swig_setmethods__["bp_len"] = _perfmon_int.perf_event_attr_t_bpb_bp_len_set
    __swig_getmethods__["bp_len"] = _perfmon_int.perf_event_attr_t_bpb_bp_len_get
    if _newclass:bp_len = _swig_property(_perfmon_int.perf_event_attr_t_bpb_bp_len_get, _perfmon_int.perf_event_attr_t_bpb_bp_len_set)
    __swig_setmethods__["config2"] = _perfmon_int.perf_event_attr_t_bpb_config2_set
    __swig_getmethods__["config2"] = _perfmon_int.perf_event_attr_t_bpb_config2_get
    if _newclass:config2 = _swig_property(_perfmon_int.perf_event_attr_t_bpb_config2_get, _perfmon_int.perf_event_attr_t_bpb_config2_set)
    def __init__(self): 
        this = _perfmon_int.new_perf_event_attr_t_bpb()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _perfmon_int.delete_perf_event_attr_t_bpb
    __del__ = lambda self : None;
perf_event_attr_t_bpb_swigregister = _perfmon_int.perf_event_attr_t_bpb_swigregister
perf_event_attr_t_bpb_swigregister(perf_event_attr_t_bpb)

class perf_event_attr_t_bpa(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, perf_event_attr_t_bpa, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, perf_event_attr_t_bpa, name)
    __repr__ = _swig_repr
    __swig_setmethods__["bp_addr"] = _perfmon_int.perf_event_attr_t_bpa_bp_addr_set
    __swig_getmethods__["bp_addr"] = _perfmon_int.perf_event_attr_t_bpa_bp_addr_get
    if _newclass:bp_addr = _swig_property(_perfmon_int.perf_event_attr_t_bpa_bp_addr_get, _perfmon_int.perf_event_attr_t_bpa_bp_addr_set)
    __swig_setmethods__["config1"] = _perfmon_int.perf_event_attr_t_bpa_config1_set
    __swig_getmethods__["config1"] = _perfmon_int.perf_event_attr_t_bpa_config1_get
    if _newclass:config1 = _swig_property(_perfmon_int.perf_event_attr_t_bpa_config1_get, _perfmon_int.perf_event_attr_t_bpa_config1_set)
    def __init__(self): 
        this = _perfmon_int.new_perf_event_attr_t_bpa()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _perfmon_int.delete_perf_event_attr_t_bpa
    __del__ = lambda self : None;
perf_event_attr_t_bpa_swigregister = _perfmon_int.perf_event_attr_t_bpa_swigregister
perf_event_attr_t_bpa_swigregister(perf_event_attr_t_bpa)

class perf_event_attr_t_wakeup(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, perf_event_attr_t_wakeup, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, perf_event_attr_t_wakeup, name)
    __repr__ = _swig_repr
    __swig_setmethods__["wakeup_events"] = _perfmon_int.perf_event_attr_t_wakeup_wakeup_events_set
    __swig_getmethods__["wakeup_events"] = _perfmon_int.perf_event_attr_t_wakeup_wakeup_events_get
    if _newclass:wakeup_events = _swig_property(_perfmon_int.perf_event_attr_t_wakeup_wakeup_events_get, _perfmon_int.perf_event_attr_t_wakeup_wakeup_events_set)
    __swig_setmethods__["wakeup_watermark"] = _perfmon_int.perf_event_attr_t_wakeup_wakeup_watermark_set
    __swig_getmethods__["wakeup_watermark"] = _perfmon_int.perf_event_attr_t_wakeup_wakeup_watermark_get
    if _newclass:wakeup_watermark = _swig_property(_perfmon_int.perf_event_attr_t_wakeup_wakeup_watermark_get, _perfmon_int.perf_event_attr_t_wakeup_wakeup_watermark_set)
    def __init__(self): 
        this = _perfmon_int.new_perf_event_attr_t_wakeup()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _perfmon_int.delete_perf_event_attr_t_wakeup
    __del__ = lambda self : None;
perf_event_attr_t_wakeup_swigregister = _perfmon_int.perf_event_attr_t_wakeup_swigregister
perf_event_attr_t_wakeup_swigregister(perf_event_attr_t_wakeup)

class perf_event_attr_t_sample(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, perf_event_attr_t_sample, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, perf_event_attr_t_sample, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sample_period"] = _perfmon_int.perf_event_attr_t_sample_sample_period_set
    __swig_getmethods__["sample_period"] = _perfmon_int.perf_event_attr_t_sample_sample_period_get
    if _newclass:sample_period = _swig_property(_perfmon_int.perf_event_attr_t_sample_sample_period_get, _perfmon_int.perf_event_attr_t_sample_sample_period_set)
    __swig_setmethods__["sample_freq"] = _perfmon_int.perf_event_attr_t_sample_sample_freq_set
    __swig_getmethods__["sample_freq"] = _perfmon_int.perf_event_attr_t_sample_sample_freq_get
    if _newclass:sample_freq = _swig_property(_perfmon_int.perf_event_attr_t_sample_sample_freq_get, _perfmon_int.perf_event_attr_t_sample_sample_freq_set)
    def __init__(self): 
        this = _perfmon_int.new_perf_event_attr_t_sample()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _perfmon_int.delete_perf_event_attr_t_sample
    __del__ = lambda self : None;
perf_event_attr_t_sample_swigregister = _perfmon_int.perf_event_attr_t_sample_swigregister
perf_event_attr_t_sample_swigregister(perf_event_attr_t_sample)

PERF_IOC_FLAG_GROUP = _perfmon_int.PERF_IOC_FLAG_GROUP
class perf_event_mmap_page(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, perf_event_mmap_page, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, perf_event_mmap_page, name)
    __repr__ = _swig_repr
    __swig_setmethods__["version"] = _perfmon_int.perf_event_mmap_page_version_set
    __swig_getmethods__["version"] = _perfmon_int.perf_event_mmap_page_version_get
    if _newclass:version = _swig_property(_perfmon_int.perf_event_mmap_page_version_get, _perfmon_int.perf_event_mmap_page_version_set)
    __swig_setmethods__["compat_version"] = _perfmon_int.perf_event_mmap_page_compat_version_set
    __swig_getmethods__["compat_version"] = _perfmon_int.perf_event_mmap_page_compat_version_get
    if _newclass:compat_version = _swig_property(_perfmon_int.perf_event_mmap_page_compat_version_get, _perfmon_int.perf_event_mmap_page_compat_version_set)
    __swig_setmethods__["lock"] = _perfmon_int.perf_event_mmap_page_lock_set
    __swig_getmethods__["lock"] = _perfmon_int.perf_event_mmap_page_lock_get
    if _newclass:lock = _swig_property(_perfmon_int.perf_event_mmap_page_lock_get, _perfmon_int.perf_event_mmap_page_lock_set)
    __swig_setmethods__["index"] = _perfmon_int.perf_event_mmap_page_index_set
    __swig_getmethods__["index"] = _perfmon_int.perf_event_mmap_page_index_get
    if _newclass:index = _swig_property(_perfmon_int.perf_event_mmap_page_index_get, _perfmon_int.perf_event_mmap_page_index_set)
    __swig_setmethods__["offset"] = _perfmon_int.perf_event_mmap_page_offset_set
    __swig_getmethods__["offset"] = _perfmon_int.perf_event_mmap_page_offset_get
    if _newclass:offset = _swig_property(_perfmon_int.perf_event_mmap_page_offset_get, _perfmon_int.perf_event_mmap_page_offset_set)
    __swig_setmethods__["time_enabled"] = _perfmon_int.perf_event_mmap_page_time_enabled_set
    __swig_getmethods__["time_enabled"] = _perfmon_int.perf_event_mmap_page_time_enabled_get
    if _newclass:time_enabled = _swig_property(_perfmon_int.perf_event_mmap_page_time_enabled_get, _perfmon_int.perf_event_mmap_page_time_enabled_set)
    __swig_setmethods__["time_running"] = _perfmon_int.perf_event_mmap_page_time_running_set
    __swig_getmethods__["time_running"] = _perfmon_int.perf_event_mmap_page_time_running_get
    if _newclass:time_running = _swig_property(_perfmon_int.perf_event_mmap_page_time_running_get, _perfmon_int.perf_event_mmap_page_time_running_set)
    __swig_setmethods__["__reserved"] = _perfmon_int.perf_event_mmap_page___reserved_set
    __swig_getmethods__["__reserved"] = _perfmon_int.perf_event_mmap_page___reserved_get
    if _newclass:__reserved = _swig_property(_perfmon_int.perf_event_mmap_page___reserved_get, _perfmon_int.perf_event_mmap_page___reserved_set)
    __swig_setmethods__["data_head"] = _perfmon_int.perf_event_mmap_page_data_head_set
    __swig_getmethods__["data_head"] = _perfmon_int.perf_event_mmap_page_data_head_get
    if _newclass:data_head = _swig_property(_perfmon_int.perf_event_mmap_page_data_head_get, _perfmon_int.perf_event_mmap_page_data_head_set)
    __swig_setmethods__["data_tail"] = _perfmon_int.perf_event_mmap_page_data_tail_set
    __swig_getmethods__["data_tail"] = _perfmon_int.perf_event_mmap_page_data_tail_get
    if _newclass:data_tail = _swig_property(_perfmon_int.perf_event_mmap_page_data_tail_get, _perfmon_int.perf_event_mmap_page_data_tail_set)
    def __init__(self): 
        this = _perfmon_int.new_perf_event_mmap_page()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _perfmon_int.delete_perf_event_mmap_page
    __del__ = lambda self : None;
perf_event_mmap_page_swigregister = _perfmon_int.perf_event_mmap_page_swigregister
perf_event_mmap_page_swigregister(perf_event_mmap_page)

class perf_event_header(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, perf_event_header, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, perf_event_header, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _perfmon_int.perf_event_header_type_set
    __swig_getmethods__["type"] = _perfmon_int.perf_event_header_type_get
    if _newclass:type = _swig_property(_perfmon_int.perf_event_header_type_get, _perfmon_int.perf_event_header_type_set)
    __swig_setmethods__["misc"] = _perfmon_int.perf_event_header_misc_set
    __swig_getmethods__["misc"] = _perfmon_int.perf_event_header_misc_get
    if _newclass:misc = _swig_property(_perfmon_int.perf_event_header_misc_get, _perfmon_int.perf_event_header_misc_set)
    __swig_setmethods__["size"] = _perfmon_int.perf_event_header_size_set
    __swig_getmethods__["size"] = _perfmon_int.perf_event_header_size_get
    if _newclass:size = _swig_property(_perfmon_int.perf_event_header_size_get, _perfmon_int.perf_event_header_size_set)
    def __init__(self): 
        this = _perfmon_int.new_perf_event_header()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _perfmon_int.delete_perf_event_header
    __del__ = lambda self : None;
perf_event_header_swigregister = _perfmon_int.perf_event_header_swigregister
perf_event_header_swigregister(perf_event_header)

PERF_EVENT_MISC_CPUMODE_MASK = _perfmon_int.PERF_EVENT_MISC_CPUMODE_MASK
PERF_EVENT_MISC_CPUMODE_UNKNOWN = _perfmon_int.PERF_EVENT_MISC_CPUMODE_UNKNOWN
PERF_EVENT_MISC_KERNEL = _perfmon_int.PERF_EVENT_MISC_KERNEL
PERF_EVENT_MISC_USER = _perfmon_int.PERF_EVENT_MISC_USER
PERF_EVENT_MISC_HYPERVISOR = _perfmon_int.PERF_EVENT_MISC_HYPERVISOR
PERF_RECORD_MISC_EXACT = _perfmon_int.PERF_RECORD_MISC_EXACT
PERF_RECORD_MISC_EXACT_IP = _perfmon_int.PERF_RECORD_MISC_EXACT_IP
PERF_RECORD_MISC_EXT_RESERVED = _perfmon_int.PERF_RECORD_MISC_EXT_RESERVED
PERF_RECORD_MMAP = _perfmon_int.PERF_RECORD_MMAP
PERF_RECORD_LOST = _perfmon_int.PERF_RECORD_LOST
PERF_RECORD_COMM = _perfmon_int.PERF_RECORD_COMM
PERF_RECORD_EXIT = _perfmon_int.PERF_RECORD_EXIT
PERF_RECORD_THROTTLE = _perfmon_int.PERF_RECORD_THROTTLE
PERF_RECORD_UNTHROTTLE = _perfmon_int.PERF_RECORD_UNTHROTTLE
PERF_RECORD_FORK = _perfmon_int.PERF_RECORD_FORK
PERF_RECORD_READ = _perfmon_int.PERF_RECORD_READ
PERF_RECORD_SAMPLE = _perfmon_int.PERF_RECORD_SAMPLE
PERF_RECORD_MAX = _perfmon_int.PERF_RECORD_MAX
PERF_CONTEXT_HV = _perfmon_int.PERF_CONTEXT_HV
PERF_CONTEXT_KERNEL = _perfmon_int.PERF_CONTEXT_KERNEL
PERF_CONTEXT_USER = _perfmon_int.PERF_CONTEXT_USER
PERF_CONTEXT_GUEST = _perfmon_int.PERF_CONTEXT_GUEST
PERF_CONTEXT_GUEST_KERNEL = _perfmon_int.PERF_CONTEXT_GUEST_KERNEL
PERF_CONTEXT_GUEST_USER = _perfmon_int.PERF_CONTEXT_GUEST_USER
PERF_CONTEXT_MAX = _perfmon_int.PERF_CONTEXT_MAX
PERF_FLAG_FD_NO_GROUP = _perfmon_int.PERF_FLAG_FD_NO_GROUP
PERF_FLAG_FD_OUTPUT = _perfmon_int.PERF_FLAG_FD_OUTPUT
PERF_FLAG_PID_CGROUP = _perfmon_int.PERF_FLAG_PID_CGROUP

def perf_event_open(*args):
  return _perfmon_int.perf_event_open(*args)
perf_event_open = _perfmon_int.perf_event_open
PR_TASK_PERF_EVENTS_ENABLE = _perfmon_int.PR_TASK_PERF_EVENTS_ENABLE
PR_TASK_PERF_EVENTS_DISABLE = _perfmon_int.PR_TASK_PERF_EVENTS_DISABLE
LIBPFM_VERSION = _perfmon_int.LIBPFM_VERSION
LIBPFM_ABI_VERSION = _perfmon_int.LIBPFM_ABI_VERSION
PFM_PLM0 = _perfmon_int.PFM_PLM0
PFM_PLM1 = _perfmon_int.PFM_PLM1
PFM_PLM2 = _perfmon_int.PFM_PLM2
PFM_PLM3 = _perfmon_int.PFM_PLM3
PFM_PLMH = _perfmon_int.PFM_PLMH
PFM_PMU_NONE = _perfmon_int.PFM_PMU_NONE
PFM_PMU_GEN_IA64 = _perfmon_int.PFM_PMU_GEN_IA64
PFM_PMU_ITANIUM = _perfmon_int.PFM_PMU_ITANIUM
PFM_PMU_ITANIUM2 = _perfmon_int.PFM_PMU_ITANIUM2
PFM_PMU_MONTECITO = _perfmon_int.PFM_PMU_MONTECITO
PFM_PMU_AMD64 = _perfmon_int.PFM_PMU_AMD64
PFM_PMU_I386_P6 = _perfmon_int.PFM_PMU_I386_P6
PFM_PMU_INTEL_NETBURST = _perfmon_int.PFM_PMU_INTEL_NETBURST
PFM_PMU_INTEL_NETBURST_P = _perfmon_int.PFM_PMU_INTEL_NETBURST_P
PFM_PMU_COREDUO = _perfmon_int.PFM_PMU_COREDUO
PFM_PMU_I386_PM = _perfmon_int.PFM_PMU_I386_PM
PFM_PMU_INTEL_CORE = _perfmon_int.PFM_PMU_INTEL_CORE
PFM_PMU_INTEL_PPRO = _perfmon_int.PFM_PMU_INTEL_PPRO
PFM_PMU_INTEL_PII = _perfmon_int.PFM_PMU_INTEL_PII
PFM_PMU_INTEL_ATOM = _perfmon_int.PFM_PMU_INTEL_ATOM
PFM_PMU_INTEL_NHM = _perfmon_int.PFM_PMU_INTEL_NHM
PFM_PMU_INTEL_NHM_EX = _perfmon_int.PFM_PMU_INTEL_NHM_EX
PFM_PMU_INTEL_NHM_UNC = _perfmon_int.PFM_PMU_INTEL_NHM_UNC
PFM_PMU_INTEL_X86_ARCH = _perfmon_int.PFM_PMU_INTEL_X86_ARCH
PFM_PMU_MIPS_20KC = _perfmon_int.PFM_PMU_MIPS_20KC
PFM_PMU_MIPS_24K = _perfmon_int.PFM_PMU_MIPS_24K
PFM_PMU_MIPS_25KF = _perfmon_int.PFM_PMU_MIPS_25KF
PFM_PMU_MIPS_34K = _perfmon_int.PFM_PMU_MIPS_34K
PFM_PMU_MIPS_5KC = _perfmon_int.PFM_PMU_MIPS_5KC
PFM_PMU_MIPS_74K = _perfmon_int.PFM_PMU_MIPS_74K
PFM_PMU_MIPS_R10000 = _perfmon_int.PFM_PMU_MIPS_R10000
PFM_PMU_MIPS_R12000 = _perfmon_int.PFM_PMU_MIPS_R12000
PFM_PMU_MIPS_RM7000 = _perfmon_int.PFM_PMU_MIPS_RM7000
PFM_PMU_MIPS_RM9000 = _perfmon_int.PFM_PMU_MIPS_RM9000
PFM_PMU_MIPS_SB1 = _perfmon_int.PFM_PMU_MIPS_SB1
PFM_PMU_MIPS_VR5432 = _perfmon_int.PFM_PMU_MIPS_VR5432
PFM_PMU_MIPS_VR5500 = _perfmon_int.PFM_PMU_MIPS_VR5500
PFM_PMU_MIPS_ICE9A = _perfmon_int.PFM_PMU_MIPS_ICE9A
PFM_PMU_MIPS_ICE9B = _perfmon_int.PFM_PMU_MIPS_ICE9B
PFM_PMU_POWERPC = _perfmon_int.PFM_PMU_POWERPC
PFM_PMU_CELL = _perfmon_int.PFM_PMU_CELL
PFM_PMU_SPARC_ULTRA12 = _perfmon_int.PFM_PMU_SPARC_ULTRA12
PFM_PMU_SPARC_ULTRA3 = _perfmon_int.PFM_PMU_SPARC_ULTRA3
PFM_PMU_SPARC_ULTRA3I = _perfmon_int.PFM_PMU_SPARC_ULTRA3I
PFM_PMU_SPARC_ULTRA3PLUS = _perfmon_int.PFM_PMU_SPARC_ULTRA3PLUS
PFM_PMU_SPARC_ULTRA4PLUS = _perfmon_int.PFM_PMU_SPARC_ULTRA4PLUS
PFM_PMU_SPARC_NIAGARA1 = _perfmon_int.PFM_PMU_SPARC_NIAGARA1
PFM_PMU_SPARC_NIAGARA2 = _perfmon_int.PFM_PMU_SPARC_NIAGARA2
PFM_PMU_PPC970 = _perfmon_int.PFM_PMU_PPC970
PFM_PMU_PPC970MP = _perfmon_int.PFM_PMU_PPC970MP
PFM_PMU_POWER3 = _perfmon_int.PFM_PMU_POWER3
PFM_PMU_POWER4 = _perfmon_int.PFM_PMU_POWER4
PFM_PMU_POWER5 = _perfmon_int.PFM_PMU_POWER5
PFM_PMU_POWER5p = _perfmon_int.PFM_PMU_POWER5p
PFM_PMU_POWER6 = _perfmon_int.PFM_PMU_POWER6
PFM_PMU_POWER7 = _perfmon_int.PFM_PMU_POWER7
PFM_PMU_PERF_EVENT = _perfmon_int.PFM_PMU_PERF_EVENT
PFM_PMU_INTEL_WSM = _perfmon_int.PFM_PMU_INTEL_WSM
PFM_PMU_INTEL_WSM_DP = _perfmon_int.PFM_PMU_INTEL_WSM_DP
PFM_PMU_INTEL_WSM_UNC = _perfmon_int.PFM_PMU_INTEL_WSM_UNC
PFM_PMU_AMD64_K7 = _perfmon_int.PFM_PMU_AMD64_K7
PFM_PMU_AMD64_K8_REVB = _perfmon_int.PFM_PMU_AMD64_K8_REVB
PFM_PMU_AMD64_K8_REVC = _perfmon_int.PFM_PMU_AMD64_K8_REVC
PFM_PMU_AMD64_K8_REVD = _perfmon_int.PFM_PMU_AMD64_K8_REVD
PFM_PMU_AMD64_K8_REVE = _perfmon_int.PFM_PMU_AMD64_K8_REVE
PFM_PMU_AMD64_K8_REVF = _perfmon_int.PFM_PMU_AMD64_K8_REVF
PFM_PMU_AMD64_K8_REVG = _perfmon_int.PFM_PMU_AMD64_K8_REVG
PFM_PMU_AMD64_FAM10H_BARCELONA = _perfmon_int.PFM_PMU_AMD64_FAM10H_BARCELONA
PFM_PMU_AMD64_FAM10H_SHANGHAI = _perfmon_int.PFM_PMU_AMD64_FAM10H_SHANGHAI
PFM_PMU_AMD64_FAM10H_ISTANBUL = _perfmon_int.PFM_PMU_AMD64_FAM10H_ISTANBUL
PFM_PMU_ARM_CORTEX_A8 = _perfmon_int.PFM_PMU_ARM_CORTEX_A8
PFM_PMU_ARM_CORTEX_A9 = _perfmon_int.PFM_PMU_ARM_CORTEX_A9
PFM_PMU_TORRENT = _perfmon_int.PFM_PMU_TORRENT
PFM_PMU_INTEL_SNB = _perfmon_int.PFM_PMU_INTEL_SNB
PFM_PMU_AMD64_FAM14H_BOBCAT = _perfmon_int.PFM_PMU_AMD64_FAM14H_BOBCAT
PFM_PMU_MAX = _perfmon_int.PFM_PMU_MAX
PFM_PMU_TYPE_UNKNOWN = _perfmon_int.PFM_PMU_TYPE_UNKNOWN
PFM_PMU_TYPE_CORE = _perfmon_int.PFM_PMU_TYPE_CORE
PFM_PMU_TYPE_UNCORE = _perfmon_int.PFM_PMU_TYPE_UNCORE
PFM_PMU_TYPE_OS_GENERIC = _perfmon_int.PFM_PMU_TYPE_OS_GENERIC
PFM_PMU_TYPE_MAX = _perfmon_int.PFM_PMU_TYPE_MAX
PFM_ATTR_NONE = _perfmon_int.PFM_ATTR_NONE
PFM_ATTR_UMASK = _perfmon_int.PFM_ATTR_UMASK
PFM_ATTR_MOD_BOOL = _perfmon_int.PFM_ATTR_MOD_BOOL
PFM_ATTR_MOD_INTEGER = _perfmon_int.PFM_ATTR_MOD_INTEGER
PFM_ATTR_RAW_UMASK = _perfmon_int.PFM_ATTR_RAW_UMASK
PFM_ATTR_MAX = _perfmon_int.PFM_ATTR_MAX
PFM_DTYPE_UNKNOWN = _perfmon_int.PFM_DTYPE_UNKNOWN
PFM_DTYPE_UINT64 = _perfmon_int.PFM_DTYPE_UINT64
PFM_DTYPE_INT64 = _perfmon_int.PFM_DTYPE_INT64
PFM_DTYPE_DOUBLE = _perfmon_int.PFM_DTYPE_DOUBLE
PFM_DTYPE_FIXED = _perfmon_int.PFM_DTYPE_FIXED
PFM_DTYPE_RATIO = _perfmon_int.PFM_DTYPE_RATIO
PFM_DTYPE_CHAR8 = _perfmon_int.PFM_DTYPE_CHAR8
PFM_DTYPE_MAX = _perfmon_int.PFM_DTYPE_MAX
PFM_ATTR_CTRL_UNKNOWN = _perfmon_int.PFM_ATTR_CTRL_UNKNOWN
PFM_ATTR_CTRL_PMU = _perfmon_int.PFM_ATTR_CTRL_PMU
PFM_ATTR_CTRL_PERF_EVENT = _perfmon_int.PFM_ATTR_CTRL_PERF_EVENT
PFM_ATTR_CTRL_MAX = _perfmon_int.PFM_ATTR_CTRL_MAX
PFM_OS_NONE = _perfmon_int.PFM_OS_NONE
PFM_OS_PERF_EVENT = _perfmon_int.PFM_OS_PERF_EVENT
PFM_OS_PERF_EVENT_EXT = _perfmon_int.PFM_OS_PERF_EVENT_EXT
PFM_OS_MAX = _perfmon_int.PFM_OS_MAX
class pfm_pmu_info_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pfm_pmu_info_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pfm_pmu_info_t, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _perfmon_int.delete_pfm_pmu_info_t
    __del__ = lambda self : None;
    __swig_setmethods__["name"] = _perfmon_int.pfm_pmu_info_t_name_set
    __swig_getmethods__["name"] = _perfmon_int.pfm_pmu_info_t_name_get
    if _newclass:name = _swig_property(_perfmon_int.pfm_pmu_info_t_name_get, _perfmon_int.pfm_pmu_info_t_name_set)
    __swig_setmethods__["desc"] = _perfmon_int.pfm_pmu_info_t_desc_set
    __swig_getmethods__["desc"] = _perfmon_int.pfm_pmu_info_t_desc_get
    if _newclass:desc = _swig_property(_perfmon_int.pfm_pmu_info_t_desc_get, _perfmon_int.pfm_pmu_info_t_desc_set)
    __swig_setmethods__["size"] = _perfmon_int.pfm_pmu_info_t_size_set
    __swig_getmethods__["size"] = _perfmon_int.pfm_pmu_info_t_size_get
    if _newclass:size = _swig_property(_perfmon_int.pfm_pmu_info_t_size_get, _perfmon_int.pfm_pmu_info_t_size_set)
    __swig_setmethods__["pmu"] = _perfmon_int.pfm_pmu_info_t_pmu_set
    __swig_getmethods__["pmu"] = _perfmon_int.pfm_pmu_info_t_pmu_get
    if _newclass:pmu = _swig_property(_perfmon_int.pfm_pmu_info_t_pmu_get, _perfmon_int.pfm_pmu_info_t_pmu_set)
    __swig_setmethods__["type"] = _perfmon_int.pfm_pmu_info_t_type_set
    __swig_getmethods__["type"] = _perfmon_int.pfm_pmu_info_t_type_get
    if _newclass:type = _swig_property(_perfmon_int.pfm_pmu_info_t_type_get, _perfmon_int.pfm_pmu_info_t_type_set)
    __swig_setmethods__["nevents"] = _perfmon_int.pfm_pmu_info_t_nevents_set
    __swig_getmethods__["nevents"] = _perfmon_int.pfm_pmu_info_t_nevents_get
    if _newclass:nevents = _swig_property(_perfmon_int.pfm_pmu_info_t_nevents_get, _perfmon_int.pfm_pmu_info_t_nevents_set)
    __swig_setmethods__["first_event"] = _perfmon_int.pfm_pmu_info_t_first_event_set
    __swig_getmethods__["first_event"] = _perfmon_int.pfm_pmu_info_t_first_event_get
    if _newclass:first_event = _swig_property(_perfmon_int.pfm_pmu_info_t_first_event_get, _perfmon_int.pfm_pmu_info_t_first_event_set)
    __swig_setmethods__["max_encoding"] = _perfmon_int.pfm_pmu_info_t_max_encoding_set
    __swig_getmethods__["max_encoding"] = _perfmon_int.pfm_pmu_info_t_max_encoding_get
    if _newclass:max_encoding = _swig_property(_perfmon_int.pfm_pmu_info_t_max_encoding_get, _perfmon_int.pfm_pmu_info_t_max_encoding_set)
    __swig_setmethods__["num_cntrs"] = _perfmon_int.pfm_pmu_info_t_num_cntrs_set
    __swig_getmethods__["num_cntrs"] = _perfmon_int.pfm_pmu_info_t_num_cntrs_get
    if _newclass:num_cntrs = _swig_property(_perfmon_int.pfm_pmu_info_t_num_cntrs_get, _perfmon_int.pfm_pmu_info_t_num_cntrs_set)
    __swig_setmethods__["num_fixed_cntrs"] = _perfmon_int.pfm_pmu_info_t_num_fixed_cntrs_set
    __swig_getmethods__["num_fixed_cntrs"] = _perfmon_int.pfm_pmu_info_t_num_fixed_cntrs_get
    if _newclass:num_fixed_cntrs = _swig_property(_perfmon_int.pfm_pmu_info_t_num_fixed_cntrs_get, _perfmon_int.pfm_pmu_info_t_num_fixed_cntrs_set)
    __swig_getmethods__["flags"] = _perfmon_int.pfm_pmu_info_t_flags_get
    if _newclass:flags = _swig_property(_perfmon_int.pfm_pmu_info_t_flags_get)
    def __init__(self): 
        this = _perfmon_int.new_pfm_pmu_info_t()
        try: self.this.append(this)
        except: self.this = this
pfm_pmu_info_t_swigregister = _perfmon_int.pfm_pmu_info_t_swigregister
pfm_pmu_info_t_swigregister(pfm_pmu_info_t)

class pfm_pmu_info_t_flags(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pfm_pmu_info_t_flags, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pfm_pmu_info_t_flags, name)
    __repr__ = _swig_repr
    __swig_setmethods__["is_present"] = _perfmon_int.pfm_pmu_info_t_flags_is_present_set
    __swig_getmethods__["is_present"] = _perfmon_int.pfm_pmu_info_t_flags_is_present_get
    if _newclass:is_present = _swig_property(_perfmon_int.pfm_pmu_info_t_flags_is_present_get, _perfmon_int.pfm_pmu_info_t_flags_is_present_set)
    __swig_setmethods__["is_dfl"] = _perfmon_int.pfm_pmu_info_t_flags_is_dfl_set
    __swig_getmethods__["is_dfl"] = _perfmon_int.pfm_pmu_info_t_flags_is_dfl_get
    if _newclass:is_dfl = _swig_property(_perfmon_int.pfm_pmu_info_t_flags_is_dfl_get, _perfmon_int.pfm_pmu_info_t_flags_is_dfl_set)
    __swig_setmethods__["reserved_bits"] = _perfmon_int.pfm_pmu_info_t_flags_reserved_bits_set
    __swig_getmethods__["reserved_bits"] = _perfmon_int.pfm_pmu_info_t_flags_reserved_bits_get
    if _newclass:reserved_bits = _swig_property(_perfmon_int.pfm_pmu_info_t_flags_reserved_bits_get, _perfmon_int.pfm_pmu_info_t_flags_reserved_bits_set)
    def __init__(self): 
        this = _perfmon_int.new_pfm_pmu_info_t_flags()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _perfmon_int.delete_pfm_pmu_info_t_flags
    __del__ = lambda self : None;
pfm_pmu_info_t_flags_swigregister = _perfmon_int.pfm_pmu_info_t_flags_swigregister
pfm_pmu_info_t_flags_swigregister(pfm_pmu_info_t_flags)

class pfm_event_info_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pfm_event_info_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pfm_event_info_t, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _perfmon_int.delete_pfm_event_info_t
    __del__ = lambda self : None;
    __swig_setmethods__["name"] = _perfmon_int.pfm_event_info_t_name_set
    __swig_getmethods__["name"] = _perfmon_int.pfm_event_info_t_name_get
    if _newclass:name = _swig_property(_perfmon_int.pfm_event_info_t_name_get, _perfmon_int.pfm_event_info_t_name_set)
    __swig_setmethods__["desc"] = _perfmon_int.pfm_event_info_t_desc_set
    __swig_getmethods__["desc"] = _perfmon_int.pfm_event_info_t_desc_get
    if _newclass:desc = _swig_property(_perfmon_int.pfm_event_info_t_desc_get, _perfmon_int.pfm_event_info_t_desc_set)
    __swig_setmethods__["equiv"] = _perfmon_int.pfm_event_info_t_equiv_set
    __swig_getmethods__["equiv"] = _perfmon_int.pfm_event_info_t_equiv_get
    if _newclass:equiv = _swig_property(_perfmon_int.pfm_event_info_t_equiv_get, _perfmon_int.pfm_event_info_t_equiv_set)
    __swig_setmethods__["size"] = _perfmon_int.pfm_event_info_t_size_set
    __swig_getmethods__["size"] = _perfmon_int.pfm_event_info_t_size_get
    if _newclass:size = _swig_property(_perfmon_int.pfm_event_info_t_size_get, _perfmon_int.pfm_event_info_t_size_set)
    __swig_setmethods__["code"] = _perfmon_int.pfm_event_info_t_code_set
    __swig_getmethods__["code"] = _perfmon_int.pfm_event_info_t_code_get
    if _newclass:code = _swig_property(_perfmon_int.pfm_event_info_t_code_get, _perfmon_int.pfm_event_info_t_code_set)
    __swig_setmethods__["pmu"] = _perfmon_int.pfm_event_info_t_pmu_set
    __swig_getmethods__["pmu"] = _perfmon_int.pfm_event_info_t_pmu_get
    if _newclass:pmu = _swig_property(_perfmon_int.pfm_event_info_t_pmu_get, _perfmon_int.pfm_event_info_t_pmu_set)
    __swig_setmethods__["dtype"] = _perfmon_int.pfm_event_info_t_dtype_set
    __swig_getmethods__["dtype"] = _perfmon_int.pfm_event_info_t_dtype_get
    if _newclass:dtype = _swig_property(_perfmon_int.pfm_event_info_t_dtype_get, _perfmon_int.pfm_event_info_t_dtype_set)
    __swig_setmethods__["idx"] = _perfmon_int.pfm_event_info_t_idx_set
    __swig_getmethods__["idx"] = _perfmon_int.pfm_event_info_t_idx_get
    if _newclass:idx = _swig_property(_perfmon_int.pfm_event_info_t_idx_get, _perfmon_int.pfm_event_info_t_idx_set)
    __swig_setmethods__["nattrs"] = _perfmon_int.pfm_event_info_t_nattrs_set
    __swig_getmethods__["nattrs"] = _perfmon_int.pfm_event_info_t_nattrs_get
    if _newclass:nattrs = _swig_property(_perfmon_int.pfm_event_info_t_nattrs_get, _perfmon_int.pfm_event_info_t_nattrs_set)
    __swig_setmethods__["reserved"] = _perfmon_int.pfm_event_info_t_reserved_set
    __swig_getmethods__["reserved"] = _perfmon_int.pfm_event_info_t_reserved_get
    if _newclass:reserved = _swig_property(_perfmon_int.pfm_event_info_t_reserved_get, _perfmon_int.pfm_event_info_t_reserved_set)
    __swig_getmethods__["flags"] = _perfmon_int.pfm_event_info_t_flags_get
    if _newclass:flags = _swig_property(_perfmon_int.pfm_event_info_t_flags_get)
    def __init__(self): 
        this = _perfmon_int.new_pfm_event_info_t()
        try: self.this.append(this)
        except: self.this = this
pfm_event_info_t_swigregister = _perfmon_int.pfm_event_info_t_swigregister
pfm_event_info_t_swigregister(pfm_event_info_t)

class pfm_event_info_t_flags(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pfm_event_info_t_flags, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pfm_event_info_t_flags, name)
    __repr__ = _swig_repr
    __swig_setmethods__["is_precise"] = _perfmon_int.pfm_event_info_t_flags_is_precise_set
    __swig_getmethods__["is_precise"] = _perfmon_int.pfm_event_info_t_flags_is_precise_get
    if _newclass:is_precise = _swig_property(_perfmon_int.pfm_event_info_t_flags_is_precise_get, _perfmon_int.pfm_event_info_t_flags_is_precise_set)
    __swig_setmethods__["reserved_bits"] = _perfmon_int.pfm_event_info_t_flags_reserved_bits_set
    __swig_getmethods__["reserved_bits"] = _perfmon_int.pfm_event_info_t_flags_reserved_bits_get
    if _newclass:reserved_bits = _swig_property(_perfmon_int.pfm_event_info_t_flags_reserved_bits_get, _perfmon_int.pfm_event_info_t_flags_reserved_bits_set)
    def __init__(self): 
        this = _perfmon_int.new_pfm_event_info_t_flags()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _perfmon_int.delete_pfm_event_info_t_flags
    __del__ = lambda self : None;
pfm_event_info_t_flags_swigregister = _perfmon_int.pfm_event_info_t_flags_swigregister
pfm_event_info_t_flags_swigregister(pfm_event_info_t_flags)

class pfm_event_attr_info_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pfm_event_attr_info_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pfm_event_attr_info_t, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _perfmon_int.delete_pfm_event_attr_info_t
    __del__ = lambda self : None;
    __swig_setmethods__["name"] = _perfmon_int.pfm_event_attr_info_t_name_set
    __swig_getmethods__["name"] = _perfmon_int.pfm_event_attr_info_t_name_get
    if _newclass:name = _swig_property(_perfmon_int.pfm_event_attr_info_t_name_get, _perfmon_int.pfm_event_attr_info_t_name_set)
    __swig_setmethods__["desc"] = _perfmon_int.pfm_event_attr_info_t_desc_set
    __swig_getmethods__["desc"] = _perfmon_int.pfm_event_attr_info_t_desc_get
    if _newclass:desc = _swig_property(_perfmon_int.pfm_event_attr_info_t_desc_get, _perfmon_int.pfm_event_attr_info_t_desc_set)
    __swig_setmethods__["equiv"] = _perfmon_int.pfm_event_attr_info_t_equiv_set
    __swig_getmethods__["equiv"] = _perfmon_int.pfm_event_attr_info_t_equiv_get
    if _newclass:equiv = _swig_property(_perfmon_int.pfm_event_attr_info_t_equiv_get, _perfmon_int.pfm_event_attr_info_t_equiv_set)
    __swig_setmethods__["size"] = _perfmon_int.pfm_event_attr_info_t_size_set
    __swig_getmethods__["size"] = _perfmon_int.pfm_event_attr_info_t_size_get
    if _newclass:size = _swig_property(_perfmon_int.pfm_event_attr_info_t_size_get, _perfmon_int.pfm_event_attr_info_t_size_set)
    __swig_setmethods__["code"] = _perfmon_int.pfm_event_attr_info_t_code_set
    __swig_getmethods__["code"] = _perfmon_int.pfm_event_attr_info_t_code_get
    if _newclass:code = _swig_property(_perfmon_int.pfm_event_attr_info_t_code_get, _perfmon_int.pfm_event_attr_info_t_code_set)
    __swig_setmethods__["type"] = _perfmon_int.pfm_event_attr_info_t_type_set
    __swig_getmethods__["type"] = _perfmon_int.pfm_event_attr_info_t_type_get
    if _newclass:type = _swig_property(_perfmon_int.pfm_event_attr_info_t_type_get, _perfmon_int.pfm_event_attr_info_t_type_set)
    __swig_setmethods__["idx"] = _perfmon_int.pfm_event_attr_info_t_idx_set
    __swig_getmethods__["idx"] = _perfmon_int.pfm_event_attr_info_t_idx_get
    if _newclass:idx = _swig_property(_perfmon_int.pfm_event_attr_info_t_idx_get, _perfmon_int.pfm_event_attr_info_t_idx_set)
    __swig_setmethods__["ctrl"] = _perfmon_int.pfm_event_attr_info_t_ctrl_set
    __swig_getmethods__["ctrl"] = _perfmon_int.pfm_event_attr_info_t_ctrl_get
    if _newclass:ctrl = _swig_property(_perfmon_int.pfm_event_attr_info_t_ctrl_get, _perfmon_int.pfm_event_attr_info_t_ctrl_set)
    __swig_getmethods__["flags"] = _perfmon_int.pfm_event_attr_info_t_flags_get
    if _newclass:flags = _swig_property(_perfmon_int.pfm_event_attr_info_t_flags_get)
    __swig_getmethods__["defaults"] = _perfmon_int.pfm_event_attr_info_t_defaults_get
    if _newclass:defaults = _swig_property(_perfmon_int.pfm_event_attr_info_t_defaults_get)
    def __init__(self): 
        this = _perfmon_int.new_pfm_event_attr_info_t()
        try: self.this.append(this)
        except: self.this = this
pfm_event_attr_info_t_swigregister = _perfmon_int.pfm_event_attr_info_t_swigregister
pfm_event_attr_info_t_swigregister(pfm_event_attr_info_t)

class pfm_event_attr_info_t_defaults(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pfm_event_attr_info_t_defaults, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pfm_event_attr_info_t_defaults, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dfl_val64"] = _perfmon_int.pfm_event_attr_info_t_defaults_dfl_val64_set
    __swig_getmethods__["dfl_val64"] = _perfmon_int.pfm_event_attr_info_t_defaults_dfl_val64_get
    if _newclass:dfl_val64 = _swig_property(_perfmon_int.pfm_event_attr_info_t_defaults_dfl_val64_get, _perfmon_int.pfm_event_attr_info_t_defaults_dfl_val64_set)
    __swig_setmethods__["dfl_str"] = _perfmon_int.pfm_event_attr_info_t_defaults_dfl_str_set
    __swig_getmethods__["dfl_str"] = _perfmon_int.pfm_event_attr_info_t_defaults_dfl_str_get
    if _newclass:dfl_str = _swig_property(_perfmon_int.pfm_event_attr_info_t_defaults_dfl_str_get, _perfmon_int.pfm_event_attr_info_t_defaults_dfl_str_set)
    __swig_setmethods__["dfl_bool"] = _perfmon_int.pfm_event_attr_info_t_defaults_dfl_bool_set
    __swig_getmethods__["dfl_bool"] = _perfmon_int.pfm_event_attr_info_t_defaults_dfl_bool_get
    if _newclass:dfl_bool = _swig_property(_perfmon_int.pfm_event_attr_info_t_defaults_dfl_bool_get, _perfmon_int.pfm_event_attr_info_t_defaults_dfl_bool_set)
    __swig_setmethods__["dfl_int"] = _perfmon_int.pfm_event_attr_info_t_defaults_dfl_int_set
    __swig_getmethods__["dfl_int"] = _perfmon_int.pfm_event_attr_info_t_defaults_dfl_int_get
    if _newclass:dfl_int = _swig_property(_perfmon_int.pfm_event_attr_info_t_defaults_dfl_int_get, _perfmon_int.pfm_event_attr_info_t_defaults_dfl_int_set)
    def __init__(self): 
        this = _perfmon_int.new_pfm_event_attr_info_t_defaults()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _perfmon_int.delete_pfm_event_attr_info_t_defaults
    __del__ = lambda self : None;
pfm_event_attr_info_t_defaults_swigregister = _perfmon_int.pfm_event_attr_info_t_defaults_swigregister
pfm_event_attr_info_t_defaults_swigregister(pfm_event_attr_info_t_defaults)

class pfm_event_attr_info_t_flags(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pfm_event_attr_info_t_flags, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pfm_event_attr_info_t_flags, name)
    __repr__ = _swig_repr
    __swig_setmethods__["is_dfl"] = _perfmon_int.pfm_event_attr_info_t_flags_is_dfl_set
    __swig_getmethods__["is_dfl"] = _perfmon_int.pfm_event_attr_info_t_flags_is_dfl_get
    if _newclass:is_dfl = _swig_property(_perfmon_int.pfm_event_attr_info_t_flags_is_dfl_get, _perfmon_int.pfm_event_attr_info_t_flags_is_dfl_set)
    __swig_setmethods__["is_precise"] = _perfmon_int.pfm_event_attr_info_t_flags_is_precise_set
    __swig_getmethods__["is_precise"] = _perfmon_int.pfm_event_attr_info_t_flags_is_precise_get
    if _newclass:is_precise = _swig_property(_perfmon_int.pfm_event_attr_info_t_flags_is_precise_get, _perfmon_int.pfm_event_attr_info_t_flags_is_precise_set)
    __swig_setmethods__["reserved_bits"] = _perfmon_int.pfm_event_attr_info_t_flags_reserved_bits_set
    __swig_getmethods__["reserved_bits"] = _perfmon_int.pfm_event_attr_info_t_flags_reserved_bits_get
    if _newclass:reserved_bits = _swig_property(_perfmon_int.pfm_event_attr_info_t_flags_reserved_bits_get, _perfmon_int.pfm_event_attr_info_t_flags_reserved_bits_set)
    def __init__(self): 
        this = _perfmon_int.new_pfm_event_attr_info_t_flags()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _perfmon_int.delete_pfm_event_attr_info_t_flags
    __del__ = lambda self : None;
pfm_event_attr_info_t_flags_swigregister = _perfmon_int.pfm_event_attr_info_t_flags_swigregister
pfm_event_attr_info_t_flags_swigregister(pfm_event_attr_info_t_flags)

class pfm_pmu_encode_arg_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pfm_pmu_encode_arg_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pfm_pmu_encode_arg_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["codes"] = _perfmon_int.pfm_pmu_encode_arg_t_codes_set
    __swig_getmethods__["codes"] = _perfmon_int.pfm_pmu_encode_arg_t_codes_get
    if _newclass:codes = _swig_property(_perfmon_int.pfm_pmu_encode_arg_t_codes_get, _perfmon_int.pfm_pmu_encode_arg_t_codes_set)
    __swig_setmethods__["fstr"] = _perfmon_int.pfm_pmu_encode_arg_t_fstr_set
    __swig_getmethods__["fstr"] = _perfmon_int.pfm_pmu_encode_arg_t_fstr_get
    if _newclass:fstr = _swig_property(_perfmon_int.pfm_pmu_encode_arg_t_fstr_get, _perfmon_int.pfm_pmu_encode_arg_t_fstr_set)
    __swig_setmethods__["size"] = _perfmon_int.pfm_pmu_encode_arg_t_size_set
    __swig_getmethods__["size"] = _perfmon_int.pfm_pmu_encode_arg_t_size_get
    if _newclass:size = _swig_property(_perfmon_int.pfm_pmu_encode_arg_t_size_get, _perfmon_int.pfm_pmu_encode_arg_t_size_set)
    __swig_setmethods__["count"] = _perfmon_int.pfm_pmu_encode_arg_t_count_set
    __swig_getmethods__["count"] = _perfmon_int.pfm_pmu_encode_arg_t_count_get
    if _newclass:count = _swig_property(_perfmon_int.pfm_pmu_encode_arg_t_count_get, _perfmon_int.pfm_pmu_encode_arg_t_count_set)
    __swig_setmethods__["idx"] = _perfmon_int.pfm_pmu_encode_arg_t_idx_set
    __swig_getmethods__["idx"] = _perfmon_int.pfm_pmu_encode_arg_t_idx_get
    if _newclass:idx = _swig_property(_perfmon_int.pfm_pmu_encode_arg_t_idx_get, _perfmon_int.pfm_pmu_encode_arg_t_idx_set)
    def __init__(self): 
        this = _perfmon_int.new_pfm_pmu_encode_arg_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _perfmon_int.delete_pfm_pmu_encode_arg_t
    __del__ = lambda self : None;
pfm_pmu_encode_arg_t_swigregister = _perfmon_int.pfm_pmu_encode_arg_t_swigregister
pfm_pmu_encode_arg_t_swigregister(pfm_pmu_encode_arg_t)

PFM_PMU_INFO_ABI0 = _perfmon_int.PFM_PMU_INFO_ABI0
PFM_EVENT_INFO_ABI0 = _perfmon_int.PFM_EVENT_INFO_ABI0
PFM_ATTR_INFO_ABI0 = _perfmon_int.PFM_ATTR_INFO_ABI0
PFM_RAW_ENCODE_ABI0 = _perfmon_int.PFM_RAW_ENCODE_ABI0

def pfm_initialize():
  return _perfmon_int.pfm_initialize()
pfm_initialize = _perfmon_int.pfm_initialize

def pfm_terminate():
  return _perfmon_int.pfm_terminate()
pfm_terminate = _perfmon_int.pfm_terminate

def pfm_strerror(*args):
  return _perfmon_int.pfm_strerror(*args)
pfm_strerror = _perfmon_int.pfm_strerror

def pfm_get_version():
  return _perfmon_int.pfm_get_version()
pfm_get_version = _perfmon_int.pfm_get_version

def pfm_get_pmu_info(*args):
  return _perfmon_int.pfm_get_pmu_info(*args)
pfm_get_pmu_info = _perfmon_int.pfm_get_pmu_info

def pfm_get_event_next(*args):
  return _perfmon_int.pfm_get_event_next(*args)
pfm_get_event_next = _perfmon_int.pfm_get_event_next

def pfm_find_event(*args):
  return _perfmon_int.pfm_find_event(*args)
pfm_find_event = _perfmon_int.pfm_find_event

def pfm_get_event_info(*args):
  return _perfmon_int.pfm_get_event_info(*args)
pfm_get_event_info = _perfmon_int.pfm_get_event_info

def pfm_get_os_event_encoding(*args):
  return _perfmon_int.pfm_get_os_event_encoding(*args)
pfm_get_os_event_encoding = _perfmon_int.pfm_get_os_event_encoding

def pfm_get_event_attr_info(*args):
  return _perfmon_int.pfm_get_event_attr_info(*args)
pfm_get_event_attr_info = _perfmon_int.pfm_get_event_attr_info

def pfm_pmu_validate(*args):
  return _perfmon_int.pfm_pmu_validate(*args)
pfm_pmu_validate = _perfmon_int.pfm_pmu_validate

def pfm_get_event_encoding(*args):
  return _perfmon_int.pfm_get_event_encoding(*args)
pfm_get_event_encoding = _perfmon_int.pfm_get_event_encoding
PFM_SUCCESS = _perfmon_int.PFM_SUCCESS
PFM_ERR_NOTSUPP = _perfmon_int.PFM_ERR_NOTSUPP
PFM_ERR_INVAL = _perfmon_int.PFM_ERR_INVAL
PFM_ERR_NOINIT = _perfmon_int.PFM_ERR_NOINIT
PFM_ERR_NOTFOUND = _perfmon_int.PFM_ERR_NOTFOUND
PFM_ERR_FEATCOMB = _perfmon_int.PFM_ERR_FEATCOMB
PFM_ERR_UMASK = _perfmon_int.PFM_ERR_UMASK
PFM_ERR_NOMEM = _perfmon_int.PFM_ERR_NOMEM
PFM_ERR_ATTR = _perfmon_int.PFM_ERR_ATTR
PFM_ERR_ATTR_VAL = _perfmon_int.PFM_ERR_ATTR_VAL
PFM_ERR_ATTR_SET = _perfmon_int.PFM_ERR_ATTR_SET
PFM_ERR_TOOMANY = _perfmon_int.PFM_ERR_TOOMANY
PFM_ERR_TOOSMALL = _perfmon_int.PFM_ERR_TOOSMALL

def pfm_get_perf_event_encoding(*args):
  return _perfmon_int.pfm_get_perf_event_encoding(*args)
pfm_get_perf_event_encoding = _perfmon_int.pfm_get_perf_event_encoding
# This file is compatible with both classic and new-style classes.


