# $Id$
# Definitions of x86 performance-monitoring events
#
# Copyright (C) 1999-2002  Mikael Pettersson
# 
# References
# ----------
# [IA32, Volume 3] "Intel Architecture Software Developer's Manual,
# Volume 3: System Programming Guide". Intel document number 245472-03.
# (at http://developer.intel.com/)
#
# [Cyrix 6x86MX] "Cyrix 6x86MX Processor".
# [Cyrix MII] "Cyrix M II Data Book".
# [Cyrix III] "Cyrix III Processor DataBook" Ver. 1.0, 1/25/00.
# Note: This "Cyrix III" was code-named "Joshua", and it was apparently
# cancelled by VIA due to disappointing performance.
# (MII and III docs at http://www.viatech.com/)
#
# [VIA C3] "VIA C3 Samuel 2 Processor Datasheet", Ver. 1.03, April 2001.
# Note: The C3 was originally called "Cyrix III", but it is a Centaur
# design developed as a replacement for Cyrix' "Joshua".
# (at http://www.viatech.com/)
#
# [WinChip C6] "WinChip C6 Processor Data Sheet".
# [WinChip 2A] "WinChip 2 Processor Version A Data Sheet".
# [WinChip 3] "WinChip 3 Processor Data Sheet".
# (at http://www.centtech.com/)
#
# [K7] "AMD Athlon Processor x86 Code Optimization Guide",
# Appendix D: "Performance Monitoring Counters".
# AMD Publication #22007, Revision J.
# (at http://www.amd.com/)
#
# Format of this file
# -------------------
# A line starting with "#" is taken as a comment and is ignored.
# Empty lines are also ignored.
#
# A line "begin:FORMAT" declares FORMAT (a C identifier)
# as a valid format name. The following declarations, until
# end-of-file or another "begin" line, define the events
# that are valid for this format.
#
# A line "include:FORMAT" declares that all events defined for
# FORMAT also are valid for the format currently being defined.
#
# A line "qualifier:NAME" declares NAME as qualifier valid
# in the format currently being defined.

# A line "CODE:NAME:COUNTER:QUALIFIER", where
#	CODE is a hexadecimal number without leading 0x
#	NAME is a C identifier
#	COUNTER is either empty, 0, or 1
#	QUALIFIER is either empty or the name of a defined qualifier
# defines event NAME to be valid in the format currently being defined,
# and assigns it code CODE. If COUNTER is empty, any counter may be
# programmed with this event code, otherwise the event with this name
# may only be used in the given counter. (The NAME is restricted
# instead of the CODE, since a particular code may denote different
# events depending on which counter is programmed with it.)
# The qualifier is associated with the event NAME as meta-data, the
# interpretation of which is left to external software.
#

# Intel P5
begin:P5
# Events
00:DATA_READ
01:DATA_WRITE
02:DATA_TLB_MISS
03:DATA_READ_MISS
04:DATA_WRITE_MISS
05:WRITE_HIT_TO_M_OR_E_STATE_LINES
06:DATA_CACHE_LINES_WRITTEN_BACK
07:EXTERNAL_SNOOPS
08:EXTERNAL_DATA_CACHE_SNOOP_HITS
09:MEMORY_ACCESSES_IN_BOTH_PIPES
0A:BANK_CONFLICTS
0B:MISALIGNED_DATA_MEMORY_OR_IO_REFERENCES
0C:CODE_READ
0D:CODE_TLB_MISS
0E:CODE_CACHE_MISS
0F:ANY_SEGMENT_REGISTER_LOADED
# 0x10 to 0x11 -- reserved
12:BRANCHES
13:BTB_HITS
14:TAKEN_BRANCH_OR_BTB_HIT
15:PIPELINE_FLUSHES
16:INSTRUCTIONS_EXECUTED
17:INSTRUCTIONS_EXECUTED_IN_V_PIPE
18:BUS_CYCLE_DURATION
19:WRITE_BUFFER_FULL_STALL_DURATION
1A:WAITING_FOR_DATA_MEMORY_READ_STALL_DURATION
1B:STALL_ON_WRITE_TO_AN_E_OR_M_STATE_LINE
1C:LOCKED_BUS_CYCLE
1D:IO_READ_OR_WRITE_CYCLE
1E:NONCACHEABLE_MEMORY_READS
1F:PIPELINE_AGI_STALLS
# 0x20 to 0x21 -- reserved
22:FLOPS
23:BREAKPOINT_MATCH_ON_DR0_REGISTER
24:BREAKPOINT_MATCH_ON_DR1_REGISTER
25:BREAKPOINT_MATCH_ON_DR2_REGISTER
26:BREAKPOINT_MATCH_ON_DR3_REGISTER
27:HARDWARE_INTERRUPTS
28:DATA_READ_OR_WRITE
29:DATA_READ_MISS_OR_WRITE_MISS

# Intel P5MMX
begin:P5MMX
include:P5
# Events
2A:BUS_OWNERSHIP_LATENCY:0
2A:BUS_OWNERSHIP_TRANSFERS:1
2B:MMX_INSTRUCTIONS_EXECUTED_U_PIPE:0
2B:MMX_INSTRUCTIONS_EXECUTED_V_PIPE:1
2C:CACHE_M_STATE_LINE_SHARING:0
2C:CACHE_LINE_SHARING:1
2D:EMMS_INSTRUCTIONS_EXECUTED:0
2D:TRANSITIONS_BETWEEN_MMX_AND_FP_INSTRUCTIONS:1
# note: BUS_UTILIZATION_DUE_TO_PROCESSOR_ACTIVITY is incorrectly
# labelled as having code 0x2D in [IA32, Volume 3, Table A-7].
2E:BUS_UTILIZATION_DUE_TO_PROCESSOR_ACTIVITY:0
2E:WRITES_TO_NONCACHEABLE_MEMORY:1
2F:SATURATING_MMX_INSTRUCTIONS_EXECUTED:0
2F:SATURATIONS_PERFORMED:1
30:NUMBER_OF_CYCLES_NOT_IN_HALT_STATE:0
30:DATA_CACHE_TLB_MISS_STALL_DURATION:1
31:MMX_INSTRUCTION_DATA_READS:0
31:MMX_INSTRUCTION_DATA_READ_MISSES:1
32:FLOATING_POINT_STALLS_DURATION:0
32:TAKEN_BRANCHES:1
33:D1_STARVATION_AND_FIFO_IS_EMPTY:0
33:D1_STARVATION_AND_ONLY_ONE_INSTRUCTION_IN_FIFO:1
34:MMX_INSTRUCTION_DATA_WRITES:0
34:MMX_INSTRUCTION_DATA_WRITE_MISSES:1
35:PIPELINE_FLUSHES_DUE_TO_WRONG_BRANCH_PREDICTIONS:0
35:PIPELINE_FLUSHES_DUE_TO_WRONG_BRANCH_PREDICTIONS_RESOLVED_IN_WB_STAGE:1
36:MISALIGNED_DATA_MEMORY_REFERENCE_ON_MMX_INSTRUCTIONS:0
36:PIPELINE_ISTALL_FOR_MMX_INSTRUCTION_DATA_MEMORY_READS:1
37:MISPREDICTED_OR_UNPREDICTED_RETURNS:0
37:PREDICTED_RETURNS:1
38:MMX_MULTIPLY_UNIT_INTERLOCK:0
38:MOVD_MOVQ_STORE_STALL_DUE_TO_PREVIOUS_MMX_OPERATION:1
39:RETURNS:0
# 0x39, counter 1 -- reserved
3A:BTB_FALSE_ENTRIES:0
3A:BTB_MISS_PREDICTION_ON_NOT_TAKEN_BRANCH:1
3B:FULL_WRITE_BUFFER_STALL_DURATION_WHILE_EXECUTING_MMX_INSTRUCTIONS:0
3B:STALL_ON_MMX_INSTRUCTION_WRITE_TO_E_OR_M_STATE_LINE:1

# Intel P6
begin:P6
# The event descriptions below use qualifiers to describe
# the contents of the UNIT MASK field in the PerfEvtSel registers.
# An absent qualifier implies a zero unit mask.
#
# Unit mask MESI: bit mask selecting a subset of MESI cache states:
# M (0x8), E (0x4), S (0x2), I (0x1). Use 0xF to count for all states.
qualifier:MESI
# Unit mask EBL: count only self-generated bus transations (0x00), or
# transations that result from any processor on the bus (0x20).
qualifier:EBL
# Events (order here follows [IA32, Volume 3, Table A-6])
43:DATA_MEM_REFS
45:DCU_LINES_IN
46:DCU_M_LINES_IN
47:DCU_M_LINES_OUT
48:DCU_MISS_OUTSTANDING
80:IFU_FETCH
81:IFU_FETCH_MISS
85:ITLB_MISS
86:IFU_MEM_STALL
87:ILD_STALL
28:L2_IFETCH::MESI
29:L2_LD::MESI
2A:L2_ST::MESI
24:L2_LINES_IN
26:L2_LINES_OUT
25:L2_M_LINES_INM
27:L2_M_LINES_OUTM
2E:L2_RQSTS::MESI
21:L2_ADS
22:L2_DBUS_BUSY
23:L2_DBUS_BUSY_RD
62:BUS_DRDY_CLOCKS::EBL
63:BUS_LOCK_CLOCKS::EBL
60:BUS_REQ_OUTSTANDING
65:BUS_TRAN_BRD::EBL
66:BUS_TRAN_RFO::EBL
67:BUS_TRANS_WB::EBL
68:BUS_TRAN_IFETCH::EBL
69:BUS_TRAN_INVAL::EBL
6A:BUS_TRAN_PWR::EBL
6B:BUS_TRANS_P::EBL
6C:BUS_TRANS_IO::EBL
6D:BUS_TRAN_DEF::EBL
6E:BUS_TRAN_BURST::EBL
70:BUS_TRAN_ANY::EBL
6F:BUS_TRAN_MEM::EBL
64:BUS_DATA_RCV
61:BUS_BNR_DRV
7A:BUS_HIT_DRV
7B:BUS_HITM_DRV
7E:BUS_SNOOP_STALL
C1:FLOPS:0
10:FP_COMP_OPS_EXE:0
11:FP_ASSIST:1
12:MUL:1
13:DIV:1
14:CYCLES_DIV_BUSY:0
03:LD_BLOCKS
04:SB_DRAINS
05:MISALIGN_MEM_REF
C0:INST_RETIRED
C2:UOPS_RETIRED
D0:INST_DECODED
C8:HW_INT_RX
C6:CYCLES_INT_MASKED
C7:CYCLES_INT_PENDING_AND_MASKED
C4:BR_INST_RETIRED
C5:BR_MISS_PRED_RETIRED
C9:BR_TAKEN_RETIRED
CA:BR_MISS_PRED_TAKEN_RET
E0:BR_INST_DECODED
E2:BTB_MISSES
E4:BR_BOGUS
E6:BACLEARS
A2:RESOURCE_STALLS
D2:PARTIAL_RAT_STALLS
06:SEGMENT_REG_LOADS
79:CPU_CLK_UNHALTED

# Intel PII
begin:PII
include:P6
# Unit mask MMX_UOPS_EXEC: always 0x0F.
qualifier:MMX_UOPS_EXEC
# Unit mask MMX_INSTR_TYPE_EXEC: selects type of MMX instructions to count:
# multiplies (0x01), shifts (0x02), packs (0x04), unpacks (0x08), packed
# logical (0x10), packed arithmetic (0x20).
qualifier:MMX_INSTR_TYPE_EXEC
# Unit mask FP_MMX_TRANS: selects transition direction: from MMX to FP (0x00),
# from FP to MMX (0x01).
qualifier:FP_MMX_TRANS
# Unit mask SEG_REG: bit mask selecting a subset of the segment registers:
# ES (0x01), DS (0x02), FS (0x04), GS (0x08) [typo in manual].
qualifier:SEG_REG
# Events
B0:MMX_INSTR_EXEC
B1:MMX_SAT_INSTR_EXEC
B2:MMX_UOPS_EXEC::MMX_UOPS_EXEC
B3:MMX_INSTR_TYPE_EXEC::MMX_INSTR_TYPE_EXEC
CC:FP_MMX_TRANS::FP_MMX_TRANS
CD:MMX_ASSIST
CE:MMX_INSTR_RET
D4:SEG_RENAME_STALLS::SEG_REG
D5:SEG_REG_RENAMES::SEG_REG
D6:RET_SEG_RENAMES

# Intel PIII
begin:PIII
# A strict interpretation of [IA32, Volume 3, Table A-6]
# would imply that events 0xB0 and 0xCE are invalid for PIII.
# For now, ignore the issue.
include:PII
# Unit mask KNI_PREFETCH: 0x00 (prefetch NTA), 0x01 (prefetch T1),
# 0x02 (prefetch T2), 0x03 (weakly ordered stores).
qualifier:KNI_PREFETCH
# Unit mask KNI_PACKED: 0x00 (packed & scalar), 0x01 (scalar)
qualifier:KNI_PACKED
# Events
07:EMON_KNI_PREF_DISPATCHED::KNI_PREFETCH
4B:EMON_KNI_PREF_MISS::KNI_PREFETCH
D8:EMON_KNI_INST_RETIRED::KNI_PACKED
D9:EMON_KNI_COMP_INST_RET::KNI_PACKED

# Cyrix 6x86MX, MII, and III.
begin:MII
include:P5
# Events
# 0x2A -- reserved
2B:MMX_INSTRUCTIONS_EXECUTED_IN_X_PIPE:0
2B:MMX_INSTRUCTIONS_EXECUTED_IN_Y_PIPE:1
# 0x2C -- reserved
2D:EMMS_INSTRUCTIONS_EXECUTED:0
2D:TRANSITIONS_BETWEEN_MMX_AND_FP_INSTRUCTIONS:1
# 0x2E -- reserved
2F:SATURATING_MMX_INSTRUCTIONS_EXECUTED:0
2F:SATURATIONS_PERFORMED:1
# 0x30 -- reserved
31:MMX_INSTRUCTION_DATA_READS:0
32:TAKEN_BRANCHES:1
# 0x33 to 0x36 -- reserved
37:RETURNS_PREDICTED_INCORRECTLY:0
37:RETURNS_PREDICTED:1
38:MMX_MULTIPLY_UNIT_INTERLOCK:0
38:MOVD_MOVQ_STORE_STALL_DUE_TO_PREVIOUS_OPERATION:1
39:RETURNS:0
39:RSB_OVERFLOWS:1
3A:BTB_FALSE_ENTRIES:0
3A:BTB_MISS_PREDICTION_ON_NOT_TAKEN_BRANCH:1
3B:FULL_WRITE_BUFFER_STALL_DURATION_WHILE_EXECUTING_MMX_INSTRUCTIONS:0
3B:STALL_ON_MMX_INSTRUCTION_WRITE_TO_E_OR_M_STATE_LINE:1
# 0x3C to 0x3F -- reserved
# NOTE: The manuals list the following events as having codes 40-48.
# However, the 7-bit event code is actually split in the CESR, using
# bits 0-5 and 10, and similarly for the high half of the CESR.
# Since the driver also parses the other fields (bits 6-9) in a user's
# evntsel, the events are listed here with their actual in-CESR values.
400:L2_TLB_MISSES
401:L1_TLB_DATA_MISS
402:L1_TLB_CODE_MISS
403:L1_TLB_MISS
404:TLB_FLUSHES
405:TLB_PAGE_INVALIDATES
406:TLB_PAGE_INVALIDATES_THAT_HIT
# 0x407 -- reserved
408:INSTRUCTIONS_DECODED

# VIA C3
# This processor is a Centaur design, tweaked to look like a Celeron.
# Its perfctr MSRs have the same addresses as in the P6, but PERFCTR0
# is an alias for the TSC and EVNTSEL0 is read-only. It appears that
# rdpmc(0) returns the TSC truncated to 40 bits. Only EVNTSEL1 and
# PERFCTR1 can be used. EVNTSEL1 has a different format than in P6: the
# event selection field is 9 bits, and no other fields are defined.
# The data sheet only lists the three events defined below.
begin:VC3
# Events
79:INTERNAL_CLOCKS
C0:INSTRUCTIONS_EXECUTED
1C0:INSTRUCTIONS_EXECUTED_AND_STRING_ITERATIONS

# Centaur WinChip C6
begin:WCC6
# Events
# Note: The manual lists the codes in decimal, not hex as done here.
00:INTERNAL_CLOCKS
01:VALID_CYCLES_REACHING_WRITEBACKS
02:X86_INSTRUCTIONS
47:DATA_READ_CACHE_MISSES
4A:DATA_WRITE_CACHE_MISSES
63:INSTRUCTION_FETCH_CACHE_MISSES

# Centaur WinChip 2 and 3
begin:WC2
# Events
# Note: The manual lists the codes in decimal, not hex as done here.
00:DATA_READ
01:DATA_WRITE
02:DATA_TLB_MISS
03:DATA_READ_CACHE_MISS
04:DATA_WRITE_CACHE_MISS
06:DATA_CACHE_WRITEBACKS
08:DATA_CACHE_SNOOP_HITS
09:PUSH_PUSH_POP_POP_PAIRING
0B:MISALIGNED_DATA_MEMORY_NOT_IO
0C:CODE_READ
0D:CODE_TLB_MISS
0E:INSTRUCTION_FETCH_CACHE_MISS
13:BHT_HITS
14:BHT_CANDIDATE
16:INSTRUCTIONS_EXECUTED
17:INSTRUCTIONS_IN_PIPE_2
18:BUS_UTILIZATION
1D:IO_READ_OR_WRITE_CYCLE
28:DATA_READ_OR_DATA_WRITE
2B:MMX_INSTRUCTIONS_U_PIPE:0
2B:MMX_INSTRUCTIONS_V_PIPE:1
37:RETURNS_PREDICTED_INCORRECTLY:0
37:RETURNS_PREDICTED_CORRECTLY:1
3F:INTERNAL_CLOCKS

# AMD K7
# The K7 performance counters are similar to the ones in Intel's P6,
# except K7 has four PerfEvtSel and four 48-bit PerfCtr registers.
# The formatting of the PerfEvtSel registers is identical to P6,
# but the event selectors and unit masks use different values.
# Note: Different revisions of AMD #22007 list different sets of events,
# so there is a risk that some of the events below aren't implemented
# on all K7 models.
begin:K7
# Unit mask SEG_REG: bit mask selecting a subset of the segment registers:
# 0x01 (ES), 0x02 (CS), 0x04 (SS), 0x08 (DS), 0x10 (FS), 0x20 (GS),
# 0x40 (HS), 0x80 (reserved).
qualifier:SEG_REG
# Unit mask MOESI: bit mask selecting a subset of MOESI cache states:
# 0x01 (Invalid), 0x02 (Shared), 0x04 (Exclusive), 0x08 (Owner), 0x10 (Modified).
qualifier:MOESI
# Unit mask SYSTEM_REQUEST_TYPE: bit mask selecting a subset of system
# request types: 0x01 (UC), 0x04 (WC), 0x10 (WT), 0x20 (WP), 0x40 (WB).
qualifier:SYSTEM_REQUEST_TYPE
# Unit mask SNOOP_HITS: bit mask selecting a subset of snoop hit cases:
# 0x01 (I-cache), 0x02 (D-cache), 0x04 (L2 hit and no DC hit).
qualifier:SNOOP_HITS
# Unit mask ECC: bit mask selecting a subset of single-bit ECC errors:
# 0x01 (System single bit error), 0x02 (L2 single bit error).
qualifier:ECC
# Unit mask LINE_INVALIDATES: bit mask selecting a subset of cache line
# invalidate cases: 0x01 (D invalidates I), 0x02 (D invalidates D),
# 0x04 (I invalidates I), 0x08 (I invalidates D).
qualifier:LINE_INVALIDATES
# Unit mask L2_REQUESTS: bit mask selecting a subset of L2 request types:
# 0x01 (Tag read), 0x02 (Tag write), 0x04 (Data block read instruction),
# 0x08 (Data block read data load), 0x10 (Data block read data store),
# 0x20 (Data block write from the system), 0x40 (Data block write from
# the DC), 0x80 (Data block write from the L2 (TLB RMW)).
qualifier:L2_REQUESTS
# Events
20:SEGMENT_REGISTER_LOADS::SEG_REG
21:STORES_TO_ACTIVE_INSTRUCTION_STREAM
40:DATA_CACHE_ACCESSES
41:DATA_CACHE_MISSES
42:DATA_CACHE_REFILLS::MOESI
43:DATA_CACHE_REFILLS_FROM_SYSTEM::MOESI
44:DATA_CACHE_WRITEBACKS::MOESI
45:L1_DTLB_MISSES_AND_L2_DTLB_HITS
46:L1_AND_L2_DTLB_MISSES
47:MISALIGNED_DATA_REFERENCES
64:DRAM_SYSTEM_REQUESTS
65:SYSTEM_REQUESTS_WITH_THE_SELECTED_TYPE::SYSTEM_REQUEST_TYPE
73:SNOOP_HITS::SNOOP_HITS
74:SINGLE_BIT_ECC_ERRORS_DETECTED_OR_CORRECTED::ECC
75:INTERNAL_CACHE_LINE_INVALIDATES::LINE_INVALIDATES
76:CYCLES_PROCESSOR_IS_RUNNING
79:L2_REQUESTS::L2_REQUESTS
7A:CYCLES_THAT_AT_LEAST_ONE_FILL_REQUEST_WAITED_TO_USE_THE_L2
80:INSTRUCTION_CACHE_FETCHES
81:INSTRUCTION_CACHE_MISSES
82:INSTRUCTION_CACHE_REFILLS_FROM_L2
83:INSTRUCTION_CACHE_REFILLS_FROM_SYSTEM
84:L1_ITLB_MISSES
85:L2_ITLB_MISSES
86:SNOOP_RESYNCS
87:INSTRUCTION_FETCH_STALL_CYCLES
88:RETURN_STACK_HITS
89:RETURN_STACK_OVERFLOW
C0:RETIRED_INSTRUCTIONS
C1:RETIRED_OPS
C2:RETIRED_BRANCHES
C3:RETIRED_BRANCHES_MISPREDICTED
C4:RETIRED_TAKEN_BRANCHES
C5:RETIRED_TAKEN_BRANCHES_MISPREDICTED
C6:RETIRED_FAR_CONTROL_TRANSFERS
C7:RETIRED_RESYNC_BRANCHES
C8:RETIRED_NEAR_RETURNS
C9:RETIRED_NEAR_RETURNS_MISPREDICTED
CA:RETIRED_INDIRECT_BRANCHES_WITH_TARGET_MISPREDICTED
CD:INTERRUPTS_MASKED_CYCLES
CE:INTERRUPTS_MASKED_WHILE_PENDING_CYCLES
CF:NUMBER_OF_TAKEN_HARDWARE_INTERRUPTS
D0:INSTRUCTION_DECODER_EMPTY
D1:DISPATCH_STALLS
D2:BRANCH_ABORTS_TO_RETIRE
D3:SERIALIZE
D4:SEGMENT_LOAD_STALL
D5:ICU_FULL
D6:RESERVATION_STATIONS_FULL
D7:FPU_FULL
D8:LS_FULL
D9:ALL_QUIET_STALL
DA:FAR_TRANSFER_OR_RESYNC_BRANCH_PENDING
DC:BREAKPOINT_MATCHES_FOR_DR0
DD:BREAKPOINT_MATCHES_FOR_DR1
DE:BREAKPOINT_MATCHES_FOR_DR2
DF:BREAKPOINT_MATCHES_FOR_DR3
