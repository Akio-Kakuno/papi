--- linux-2.5.2-perfctr/CREDITS.~1~	Tue Jan 15 05:38:28 2002
+++ linux-2.5.2-perfctr/CREDITS	Wed Jan 16 23:50:16 2002
@@ -2313,6 +2313,7 @@
 E: mikpe@csd.uu.se
 W: http://www.csd.uu.se/~mikpe/
 D: Miscellaneous fixes
+D: Performance-monitoring counters driver
 
 N: Reed H. Petty
 E: rhp@draper.net
--- linux-2.5.2-perfctr/Documentation/Configure.help.~1~	Tue Jan 15 05:38:28 2002
+++ linux-2.5.2-perfctr/Documentation/Configure.help	Wed Jan 16 23:50:16 2002
@@ -3833,6 +3833,72 @@
 
   If unsure, say N.
 
+Performance-monitoring counters support
+CONFIG_PERFCTR
+  This driver provides access to the performance-monitoring counter
+  registers available in some (but not all) modern processors.
+  These special-purpose registers can be programmed to count low-level
+  performance-related events which occur during program execution,
+  such as cache misses, pipeline stalls, etc.
+
+  The driver supports most x86-class processors known to have
+  performance-monitoring counters: Intel Pentium to Pentium III,
+  AMD K7, Cyrix 6x86MX/MII/III, VIA C3, and WinChip C6/2/3.
+
+  On processors which have a time-stamp counter but no performance-
+  monitoring counters, such as the AMD K6 family, the driver supports
+  plain cycle-count performance measurements only.
+
+  On WinChip C6/2/3 processors the performance-monitoring counters
+  cannot be used unless the time-stamp counter has been disabled.
+  Please read <file:drivers/perfctr/x86.c> for further information.
+
+  You can safely say Y here, even if you intend to run the kernel
+  on a processor without performance-monitoring counters.
+
+  You can also say M here to compile the driver as a module; the
+  module will be called `perfctr.o'.
+
+Additional internal consistency checks
+CONFIG_PERFCTR_DEBUG
+  This option enables additional internal consistency checking in
+  the perfctr driver. The scope of these checks is unspecified and
+  may vary between different versions of the driver.
+
+  Enabling this option will reduce performance, so say N unless you
+  are debugging the driver.
+
+Init-time hardware tests
+CONFIG_PERFCTR_INIT_TESTS
+  This option makes the driver run additional hardware tests
+  during initialisation. This is not necessary for normal
+  operation, but it can be useful during driver development.
+
+  If unsure, say N.
+
+Virtual performance counters support
+CONFIG_PERFCTR_VIRTUAL
+  The processor's performance-monitoring counters are special-purpose
+  global registers. This option adds support for virtual per-process
+  performance-monitoring counters which only run when the process
+  to which they belong is executing. This improves the accuracy of
+  performance measurements by reducing "noise" from other processes.
+
+  Say Y.
+
+Global performance counters support
+CONFIG_PERFCTR_GLOBAL
+  This option adds driver support for global-mode (system-wide)
+  performance-monitoring counters. In this mode, the driver allows
+  each performance-monitoring counter on each processor to be
+  controlled and read. The driver provides a sampling timer to
+  maintain 64-bit accumulated event counts.
+
+  Global-mode performance counters cannot be used if some process
+  is currently using virtual-mode performance counters, and vice versa.
+
+  Say Y.
+
 VGA text console
 CONFIG_VGA_CONSOLE
   Saying Y here will allow you to use Linux in text mode through a
--- linux-2.5.2-perfctr/Documentation/ioctl-number.txt.~1~	Thu Jul 12 01:35:37 2001
+++ linux-2.5.2-perfctr/Documentation/ioctl-number.txt	Wed Jan 16 23:50:16 2002
@@ -187,5 +187,7 @@
 0xB1	00-1F	PPPoX			<mailto:mostrows@styx.uwaterloo.ca>
 0xCB	00-1F	CBM serial IEC bus	in development:
 					<mailto:michael.klein@puffin.lb.shuttle.de>
+0xD0	all	performance counters	in development:
+					<mailto:mikpe@csd.uu.se>
 
 0xFE	00-9F	Logical Volume Manager	<mailto:linux-lvm@sistina.com>
--- linux-2.5.2-perfctr/MAINTAINERS.~1~	Tue Jan 15 05:38:28 2002
+++ linux-2.5.2-perfctr/MAINTAINERS	Wed Jan 16 23:50:16 2002
@@ -1206,6 +1206,12 @@
 L:	linux-net@vger.kernel.org
 S:	Maintained
 
+PERFORMANCE-MONITORING COUNTERS DRIVER
+P:	Mikael Pettersson
+M:	mikpe@csd.uu.se
+W:	http://www.csd.uu.se/~mikpe/linux/perfctr/
+S:	Maintained
+
 PNP SUPPORT
 P:	Tom Lees
 M:	tom@lpsg.demon.co.uk
--- linux-2.5.2-perfctr/Makefile.~1~	Tue Jan 15 05:38:28 2002
+++ linux-2.5.2-perfctr/Makefile	Wed Jan 16 23:50:16 2002
@@ -184,6 +184,7 @@
 DRIVERS-$(CONFIG_MD) += drivers/md/mddev.o
 DRIVERS-$(CONFIG_BLUEZ) += drivers/bluetooth/bluetooth.o
 DRIVERS-$(CONFIG_HOTPLUG_PCI) += drivers/hotplug/vmlinux-obj.o
+DRIVERS-$(CONFIG_KPERFCTR) += drivers/perfctr/kperfctr.o
 
 DRIVERS := $(DRIVERS-y)
 
--- linux-2.5.2-perfctr/arch/i386/config.in.~1~	Tue Jan 15 05:38:29 2002
+++ linux-2.5.2-perfctr/arch/i386/config.in	Wed Jan 16 23:50:16 2002
@@ -230,6 +230,7 @@
 fi
 
 source drivers/pci/Config.in
+source drivers/perfctr/Config.in
 
 bool 'EISA support' CONFIG_EISA
 
--- linux-2.5.2-perfctr/arch/i386/kernel/i8259.c.~1~	Tue Sep 18 08:03:09 2001
+++ linux-2.5.2-perfctr/arch/i386/kernel/i8259.c	Wed Jan 16 23:50:16 2002
@@ -21,6 +21,7 @@
 #include <asm/delay.h>
 #include <asm/desc.h>
 #include <asm/apic.h>
+#include <asm/perfctr.h>
 
 #include <linux/irq.h>
 
@@ -489,6 +490,10 @@
 	set_intr_gate(ERROR_APIC_VECTOR, error_interrupt);
 #endif
 
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+	set_intr_gate(LOCAL_PERFCTR_VECTOR, perfctr_interrupt);
+#endif
+
 	/*
 	 * Set the clock to HZ Hz, we already have a valid
 	 * vector now:
--- linux-2.5.2-perfctr/arch/i386/kernel/irq.c.~1~	Tue Dec 18 00:40:11 2001
+++ linux-2.5.2-perfctr/arch/i386/kernel/irq.c	Wed Jan 16 23:50:16 2002
@@ -44,6 +44,7 @@
 #include <asm/delay.h>
 #include <asm/desc.h>
 #include <asm/irq.h>
+#include <asm/perfctr.h>
 
 
 
@@ -171,6 +172,12 @@
 		seq_printf(p, "%10u ", apic_timer_irqs[cpu_logical_map(j)]);
 	seq_putc(p, '\n');
 #endif
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+	seq_printf(p, "PMC: ");
+	for (j = 0; j < smp_num_cpus; j++)
+		seq_printf(p, "%10u ", apic_lvtpc_irqs[cpu_logical_map(j)]);
+	seq_putc(p, '\n');
+#endif
 	seq_printf(p, "ERR: %10u\n", atomic_read(&irq_err_count));
 #ifdef CONFIG_X86_IO_APIC
 #ifdef APIC_MISMATCH_DEBUG
--- linux-2.5.2-perfctr/arch/i386/kernel/process.c.~1~	Tue Jan 15 05:38:29 2002
+++ linux-2.5.2-perfctr/arch/i386/kernel/process.c	Wed Jan 16 23:50:16 2002
@@ -32,6 +32,7 @@
 #include <linux/delay.h>
 #include <linux/reboot.h>
 #include <linux/init.h>
+#include <linux/perfctr.h>
 #include <linux/mc146818rtc.h>
 
 #include <asm/uaccess.h>
@@ -511,7 +512,7 @@
  */
 void exit_thread(void)
 {
-	/* nothing to do ... */
+	perfctr_exit_thread(&current->thread);
 }
 
 void flush_thread(void)
@@ -593,6 +594,8 @@
 	unlazy_fpu(current);
 	struct_cpy(&p->thread.i387, &current->thread.i387);
 
+	perfctr_copy_thread(&p->thread);
+
 	return 0;
 }
 
@@ -675,6 +678,8 @@
 				 *next = &next_p->thread;
 	struct tss_struct *tss = init_tss + smp_processor_id();
 
+	perfctr_suspend_thread(prev);
+
 	unlazy_fpu(prev_p);
 
 	/*
@@ -730,6 +735,8 @@
 			 */
 			tss->bitmap = INVALID_IO_BITMAP_OFFSET;
 	}
+
+	perfctr_resume_thread(next);
 }
 
 asmlinkage int sys_fork(struct pt_regs regs)
--- linux-2.5.2-perfctr/drivers/Makefile.~1~	Sun Nov 11 19:09:32 2001
+++ linux-2.5.2-perfctr/drivers/Makefile	Wed Jan 16 23:50:16 2002
@@ -47,4 +47,7 @@
 
 subdir-$(CONFIG_BLUEZ)		+= bluetooth
 
+mod-subdirs += perfctr
+subdir-$(CONFIG_KPERFCTR)	+= perfctr
+
 include $(TOPDIR)/Rules.make
--- linux-2.5.2-perfctr/fs/proc/base.c.~1~	Tue Jan 15 05:38:30 2002
+++ linux-2.5.2-perfctr/fs/proc/base.c	Wed Jan 16 23:50:16 2002
@@ -23,6 +23,7 @@
 #include <linux/init.h>
 #include <linux/file.h>
 #include <linux/string.h>
+#include <linux/perfctr.h>
 #include <linux/seq_file.h>
 #include <linux/namespace.h>
 #include <linux/mm.h>
@@ -540,6 +541,7 @@
 	PROC_PID_STATM,
 	PROC_PID_MAPS,
 	PROC_PID_CPU,
+	PROC_PID_PERFCTR,
 	PROC_PID_MOUNTS,
 	PROC_PID_FD_DIR = 0x8000,	/* 0x8000-0xffff */
 };
@@ -560,6 +562,9 @@
   E(PROC_PID_CWD,	"cwd",		S_IFLNK|S_IRWXUGO),
   E(PROC_PID_ROOT,	"root",		S_IFLNK|S_IRWXUGO),
   E(PROC_PID_EXE,	"exe",		S_IFLNK|S_IRWXUGO),
+#ifdef CONFIG_PERFCTR_VIRTUAL
+  E(PROC_PID_PERFCTR,	"perfctr",	PERFCTR_PROC_PID_MODE),
+#endif
   E(PROC_PID_MOUNTS,	"mounts",	S_IFREG|S_IRUGO),
   {0,0,NULL,0}
 };
@@ -923,6 +928,11 @@
 		case PROC_PID_MOUNTS:
 			inode->i_fop = &proc_mounts_operations;
 			break;
+#ifdef CONFIG_PERFCTR_VIRTUAL
+		case PROC_PID_PERFCTR:
+			perfctr_set_proc_pid_ops(inode);
+			break;
+#endif
 		default:
 			printk("procfs: impossible type (%d)",p->type);
 			iput(inode);
--- linux-2.5.2-perfctr/include/asm-i386/apic.h.~1~	Thu Nov 22 20:46:19 2001
+++ linux-2.5.2-perfctr/include/asm-i386/apic.h	Wed Jan 16 23:50:16 2002
@@ -92,6 +92,9 @@
 #define NMI_LOCAL_APIC	2
 #define NMI_INVALID	3
 
+extern struct pm_dev *nmi_pmdev;
+extern unsigned int nmi_perfctr_msr;
+
 #endif /* CONFIG_X86_LOCAL_APIC */
 
 #endif /* __ASM_APIC_H */
--- linux-2.5.2-perfctr/include/asm-i386/hw_irq.h.~1~	Thu Nov 22 20:46:18 2001
+++ linux-2.5.2-perfctr/include/asm-i386/hw_irq.h	Wed Jan 16 23:50:16 2002
@@ -49,14 +49,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 extern int irq_vector[NR_IRQS];
 #define IO_APIC_VECTOR(irq)	irq_vector[irq]
--- linux-2.5.2-perfctr/include/asm-i386/processor.h.~1~	Thu Nov 22 20:46:19 2001
+++ linux-2.5.2-perfctr/include/asm-i386/processor.h	Wed Jan 16 23:50:16 2002
@@ -362,6 +362,11 @@
 	unsigned long __cacheline_filler[5];
 };
 
+/*
+ * Virtual per-process performance-monitoring counters.
+ */
+struct vperfctr;	/* opaque; no need to depend on <linux/perfctr.h> */
+
 struct thread_struct {
 	unsigned long	esp0;
 	unsigned long	eip;
@@ -381,6 +386,8 @@
 /* IO permissions */
 	int		ioperm;
 	unsigned long	io_bitmap[IO_BITMAP_SIZE+1];
+/* performance counters */
+	struct vperfctr *perfctr;
 };
 
 #define INIT_THREAD  {						\
@@ -390,7 +397,8 @@
 	0, 0, 0,						\
 	{ { 0, }, },		/* 387 state */			\
 	0,0,0,0,0,0,						\
-	0,{~0,}			/* io permissions */		\
+	0,{~0,},		/* io permissions */		\
+	NULL,			/* performance counters */	\
 }
 
 #define INIT_TSS  {						\
--- linux-2.5.2-perfctr/kernel/timer.c.~1~	Tue Jan 15 05:38:32 2002
+++ linux-2.5.2-perfctr/kernel/timer.c	Wed Jan 16 23:50:16 2002
@@ -22,6 +22,7 @@
 #include <linux/smp_lock.h>
 #include <linux/interrupt.h>
 #include <linux/kernel_stat.h>
+#include <linux/perfctr.h>
 
 #include <asm/uaccess.h>
 
@@ -572,6 +573,7 @@
 	do_process_times(p, user, system);
 	do_it_virt(p, user);
 	do_it_prof(p);
+	perfctr_sample_thread(&p->thread);
 }	
 
 /*
