--- linux-2.5.64-perfctr/CREDITS.~1~	2003-02-24 23:25:35.000000000 +0100
+++ linux-2.5.64-perfctr/CREDITS	2003-03-08 17:24:38.000000000 +0100
@@ -2458,6 +2458,7 @@
 E: mikpe@csd.uu.se
 W: http://www.csd.uu.se/~mikpe/
 D: Miscellaneous fixes
+D: Performance-monitoring counters driver
 
 N: Reed H. Petty
 E: rhp@draper.net
--- linux-2.5.64-perfctr/Documentation/ioctl-number.txt.~1~	2003-03-08 17:22:31.000000000 +0100
+++ linux-2.5.64-perfctr/Documentation/ioctl-number.txt	2003-03-08 17:24:38.000000000 +0100
@@ -189,3 +189,5 @@
 0xB1	00-1F	PPPoX			<mailto:mostrows@styx.uwaterloo.ca>
 0xCB	00-1F	CBM serial IEC bus	in development:
 					<mailto:michael.klein@puffin.lb.shuttle.de>
+0xD0	all	performance counters	in development:
+					<mailto:mikpe@csd.uu.se>
--- linux-2.5.64-perfctr/MAINTAINERS.~1~	2003-03-08 17:22:31.000000000 +0100
+++ linux-2.5.64-perfctr/MAINTAINERS	2003-03-08 17:24:38.000000000 +0100
@@ -1428,6 +1428,12 @@
 L:	linux-net@vger.kernel.org
 S:	Maintained
 
+PERFORMANCE-MONITORING COUNTERS DRIVER
+P:	Mikael Pettersson
+M:	mikpe@csd.uu.se
+W:	http://www.csd.uu.se/~mikpe/linux/perfctr/
+S:	Maintained
+
 PNP SUPPORT
 P:	Adam Belay
 M:	ambx1@neo.rr.com
--- linux-2.5.64-perfctr/arch/i386/Kconfig.~1~	2003-03-08 17:22:31.000000000 +0100
+++ linux-2.5.64-perfctr/arch/i386/Kconfig	2003-03-08 17:24:38.000000000 +0100
@@ -1061,6 +1061,8 @@
 
 source "drivers/pci/Kconfig"
 
+source "drivers/perfctr/Kconfig"
+
 config ISA
 	bool "ISA support"
 	depends on !(X86_VOYAGER || X86_VISWS)
--- linux-2.5.64-perfctr/arch/i386/kernel/entry.S.~1~	2003-03-08 17:22:31.000000000 +0100
+++ linux-2.5.64-perfctr/arch/i386/kernel/entry.S	2003-03-08 17:24:38.000000000 +0100
@@ -402,6 +402,16 @@
 /* The include is where all of the SMP etc. interrupts come from */
 #include "entry_arch.h"
 
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+ENTRY(perfctr_interrupt)
+	pushl $LOCAL_PERFCTR_VECTOR-256
+	SAVE_ALL
+	pushl %esp
+	call do_perfctr_interrupt
+	addl $4, %esp
+	jmp ret_from_intr
+#endif
+
 ENTRY(divide_error)
 	pushl $0			# no error code
 	pushl $do_divide_error
--- linux-2.5.64-perfctr/arch/i386/kernel/i8259.c.~1~	2003-02-24 23:25:35.000000000 +0100
+++ linux-2.5.64-perfctr/arch/i386/kernel/i8259.c	2003-03-08 17:24:38.000000000 +0100
@@ -23,6 +23,7 @@
 #include <asm/apic.h>
 #include <asm/arch_hooks.h>
 #include <asm/i8259.h>
+#include <asm/perfctr.h>
 
 #include <linux/irq.h>
 
@@ -426,6 +427,10 @@
 	 */
 	intr_init_hook();
 
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+	set_intr_gate(LOCAL_PERFCTR_VECTOR, perfctr_interrupt);
+#endif
+
 	/*
 	 * Set the clock to HZ Hz, we already have a valid
 	 * vector now:
--- linux-2.5.64-perfctr/arch/i386/kernel/irq.c.~1~	2003-03-08 17:22:31.000000000 +0100
+++ linux-2.5.64-perfctr/arch/i386/kernel/irq.c	2003-03-08 17:24:38.000000000 +0100
@@ -43,6 +43,7 @@
 #include <asm/delay.h>
 #include <asm/desc.h>
 #include <asm/irq.h>
+#include <asm/perfctr.h>
 
 
 
@@ -174,6 +175,13 @@
 			p += seq_printf(p, "%10u ", irq_stat[j].apic_timer_irqs);
 	seq_putc(p, '\n');
 #endif
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+	seq_printf(p, "PMC: ");
+	for (j = 0; j < NR_CPUS; j++)
+		if (cpu_online(j))
+			p += seq_printf(p, "%10u ", apic_lvtpc_irqs[j]);
+	seq_putc(p, '\n');
+#endif
 	seq_printf(p, "ERR: %10u\n", atomic_read(&irq_err_count));
 #ifdef CONFIG_X86_IO_APIC
 #ifdef APIC_MISMATCH_DEBUG
--- linux-2.5.64-perfctr/arch/i386/kernel/process.c.~1~	2003-02-24 23:25:35.000000000 +0100
+++ linux-2.5.64-perfctr/arch/i386/kernel/process.c	2003-03-08 17:24:38.000000000 +0100
@@ -33,6 +33,7 @@
 #include <linux/delay.h>
 #include <linux/reboot.h>
 #include <linux/init.h>
+#include <linux/perfctr.h>
 #include <linux/mc146818rtc.h>
 #include <linux/module.h>
 #include <linux/kallsyms.h>
@@ -244,6 +245,7 @@
 		kfree(tsk->thread.ts_io_bitmap);
 		tsk->thread.ts_io_bitmap = NULL;
 	}
+	perfctr_exit_thread(&tsk->thread);
 }
 
 void flush_thread(void)
@@ -300,6 +302,8 @@
 	unlazy_fpu(tsk);
 	struct_cpy(&p->thread.i387, &tsk->thread.i387);
 
+	perfctr_copy_thread(&p->thread);
+
 	if (unlikely(NULL != tsk->thread.ts_io_bitmap)) {
 		p->thread.ts_io_bitmap = kmalloc(IO_BITMAP_BYTES, GFP_KERNEL);
 		if (!p->thread.ts_io_bitmap)
@@ -437,6 +441,8 @@
 
 	/* never put a printk in __switch_to... printk() calls wake_up*() indirectly */
 
+	perfctr_suspend_thread(prev);
+
 	unlazy_fpu(prev_p);
 
 	/*
@@ -499,6 +505,9 @@
 			 */
 			tss->bitmap = INVALID_IO_BITMAP_OFFSET;
 	}
+
+	perfctr_resume_thread(next);
+
 	return prev_p;
 }
 
--- linux-2.5.64-perfctr/drivers/Makefile.~1~	2003-02-18 02:06:53.000000000 +0100
+++ linux-2.5.64-perfctr/drivers/Makefile	2003-03-08 17:24:38.000000000 +0100
@@ -46,3 +46,4 @@
 obj-$(CONFIG_MCA)		+= mca/
 obj-$(CONFIG_EISA)		+= eisa/
 obj-$(CONFIG_CPU_FREQ)		+= cpufreq/
+obj-$(CONFIG_KPERFCTR)		+= perfctr/
--- linux-2.5.64-perfctr/fs/proc/base.c.~1~	2003-02-18 02:06:53.000000000 +0100
+++ linux-2.5.64-perfctr/fs/proc/base.c	2003-03-08 17:24:38.000000000 +0100
@@ -32,6 +32,7 @@
 #include <linux/mount.h>
 #include <linux/security.h>
 #include <linux/ptrace.h>
+#include <linux/perfctr.h>
 
 /*
  * For hysterical raisins we keep the same inumbers as in the old procfs.
@@ -58,6 +59,7 @@
 	PROC_PID_MAPS,
 	PROC_PID_MOUNTS,
 	PROC_PID_WCHAN,
+	PROC_PID_PERFCTR,
 	PROC_PID_FD_DIR = 0x8000,	/* 0x8000-0xffff */
 };
 
@@ -85,6 +87,9 @@
 #ifdef CONFIG_KALLSYMS
   E(PROC_PID_WCHAN,	"wchan",	S_IFREG|S_IRUGO),
 #endif
+#ifdef CONFIG_PERFCTR_VIRTUAL
+  E(PROC_PID_PERFCTR,	"perfctr",	PERFCTR_PROC_PID_MODE),
+#endif
   {0,0,NULL,0}
 };
 #undef E
@@ -1042,6 +1047,11 @@
 			ei->op.proc_read = proc_pid_wchan;
 			break;
 #endif
+#ifdef CONFIG_PERFCTR_VIRTUAL
+		case PROC_PID_PERFCTR:
+			perfctr_set_proc_pid_ops(inode);
+			break;
+#endif
 		default:
 			printk("procfs: impossible type (%d)",p->type);
 			iput(inode);
--- linux-2.5.64-perfctr/include/asm-i386/apic.h.~1~	2002-10-20 18:51:08.000000000 +0200
+++ linux-2.5.64-perfctr/include/asm-i386/apic.h	2003-03-08 17:24:38.000000000 +0100
@@ -96,6 +96,9 @@
 #define NMI_LOCAL_APIC	2
 #define NMI_INVALID	3
 
+extern struct pm_dev *nmi_pmdev;
+extern unsigned int nmi_perfctr_msr;
+
 #endif /* CONFIG_X86_LOCAL_APIC */
 
 #endif /* __ASM_APIC_H */
--- linux-2.5.64-perfctr/include/asm-i386/mach-default/irq_vectors.h.~1~	2002-12-24 13:53:50.000000000 +0100
+++ linux-2.5.64-perfctr/include/asm-i386/mach-default/irq_vectors.h	2003-03-08 17:24:38.000000000 +0100
@@ -56,14 +56,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 #define TIMER_IRQ 0
 
--- linux-2.5.64-perfctr/include/asm-i386/processor.h.~1~	2003-02-24 23:25:38.000000000 +0100
+++ linux-2.5.64-perfctr/include/asm-i386/processor.h	2003-03-08 17:24:38.000000000 +0100
@@ -373,6 +373,11 @@
 	unsigned long __cacheline_filler[5];
 };
 
+/*
+ * Virtual per-process performance-monitoring counters.
+ */
+struct vperfctr;	/* opaque; no need to depend on <linux/perfctr.h> */
+
 struct thread_struct {
 /* cached TLS descriptors. */
 	struct desc_struct tls_array[GDT_ENTRY_TLS_ENTRIES];
@@ -394,6 +399,8 @@
 	unsigned int		saved_fs, saved_gs;
 /* IO permissions */
 	unsigned long	*ts_io_bitmap;
+/* performance counters */
+	struct vperfctr *perfctr;
 };
 
 #define INIT_THREAD  {							\
--- linux-2.5.64-perfctr/kernel/timer.c.~1~	2003-03-08 17:22:32.000000000 +0100
+++ linux-2.5.64-perfctr/kernel/timer.c	2003-03-08 17:24:38.000000000 +0100
@@ -28,6 +28,7 @@
 #include <linux/thread_info.h>
 #include <linux/time.h>
 #include <linux/jiffies.h>
+#include <linux/perfctr.h>
 
 #include <asm/uaccess.h>
 #include <asm/div64.h>
@@ -703,6 +704,7 @@
 	do_process_times(p, user, system);
 	do_it_virt(p, user);
 	do_it_prof(p);
+	perfctr_sample_thread(&p->thread);
 }	
 
 /*
