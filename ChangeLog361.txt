2008-08-01	mucci
	* INSTALL.txt 1.28:
		Fixed up sicortex docs

2008-07-31	terpstra
	* man/html/papi.html 1.19:
	...
		Updated html files to match man pages.

	* src/libpfm-3.y/README 1.1.1.7:
	...
		Import of libpfm 3.5

	* man/man3/PAPI.3 1.27:
	* man/man3/PAPI_get_real_cyc.3 1.10:
	* man/man3/PAPI_get_virt_cyc.3 1.11:
		Tweaks to better document new get_ns functions.

2008-07-30	you
	* src/multiplex.c 1.69:
		minor fix

	* src/configure 1.84:
	* src/configure.in 1.85:
		set PMAPI for power6

2008-07-30	terpstra
	* src/ftests/fdmemtest.F 1.3:
		Remove tab characters that threw warnings for gfortran 4.3

	* src/genpapifdef.c 1.39:
		Remove tab characters that threw warnings for gfortran 4.3
		Rework evaluation of the 0x80000000 value and the description of the
		problem. This may throw a warning for some compilers, but there are ways
		to turn the warning off.

2008-07-29	sbk
	* man/man3/PAPI.3 1.26:
	* man/man3/PAPIF.3 1.14:
	* man/man3/PAPI_attach.3 1.4:
	* man/man3/PAPI_enum_event.3 1.10:
	* man/man3/PAPI_flops.3 1.12:
	* man/man3/PAPI_get_dmem_info.3 1.9:
	* man/man3/PAPI_get_hardware_info.3 1.11:
	* man/man3/PAPI_overflow.3 1.18:
	* man/man3/PAPI_profil.3 1.12:
	* man/man3/PAPI_set_domain.3 1.13:
		Spelling error corrections.

2008-07-29	terpstra
	* man/html/papi_num_hwctrs.html 1.7:
	* man/man3/PAPI_num_hwctrs.3 1.7:
		Corrected faulty reference to PAPI_init_library instead of 
		PAPI_library_init.

2008-07-28	you
	* src/multiplex.c 1.68:
		add fix for aix-power6

2008-07-28	terpstra
	* src/libpfm-3.y/README 1.1.1.6:
	...
			Update to latest sourceforge version

2008-07-26	mucci
	* src/configure 1.83:
		Regenerated with 2.61 of autoconf to fix DOCDIR

2008-07-24	you
	* src/Makefile.aix-power6 1.1:
	* src/configure 1.82:
	* src/configure.in 1.84:
		add power6 support

2008-07-17	you
	* src/aix.c 1.75:
		remove a printf message

2008-07-17	terpstra
	* src/utils/event_info.c 1.8:
		Tweaked a MACRO definition that caused a segfault due to an uninitialized
		variable, but only for PAPI versions < 3.9.
		Fixes problem reported by Wyatt Spear.

2008-07-16	mucci
	* src/threads.c 1.30:
		Fixup for recent commit for AIX systems that set 
		ANY_THREAD_GETS_SIGNAL

2008-07-16	sbk
	* src/papi.c 1.324:
		Get rid of compilation message by removing decl of unused 
		variable.

2008-07-14	mucci
	* man/man3/PAPI_get_real_cyc.3 1.9:
	* man/man3/PAPI_get_real_ns.3 1.1:
	* man/man3/PAPI_get_virt_cyc.3 1.10:
	* man/man3/PAPI_get_virt_ns.3 1.1:
		PAPI*ns function info

2008-07-14	sbk
	* src/perfmon.c 1.70:
		The length of the device in the maps file can be longer than just the five
		bytes that are used by the sscanf() to fetch from the character buffer. Increase
		the size of the array to hold the device name to 16 and read it from the
		buffer as a "%s". Also initialize the integral values to zero before
		sscanf() reads them out of the buffer to better identify invalid acquistion
		of data.
		
		This changes now ensures that the maps files for Cray XT and X2 compute
		nodes are read correctly and test/data/bss address/size details are correct.
		
		This was applied to just the perfmon-version of reading the maps file, but
		it probably can be applied to other platforms that also read the file.
		
		Also fix a GNU complaint about paranthesis.

2008-07-11	mucci
	* src/papi_internal.c 1.125:
		emoved duplicate CLK_TCK line

	* src/ctests/burn.c 1.3:
	* src/ctests/do_loops.c 1.31:
	* src/ctests/earprofile.c 1.22:
	* src/ctests/fork_exec_overflow.c 1.7:
	* src/ctests/kufrin.c 1.8:
	* src/ctests/multiplex1.c 1.47:
	* src/ctests/multiplex1_pthreads.c 1.46:
	* src/ctests/multiplex2.c 1.29:
	* src/ctests/multiplex3_pthreads.c 1.35:
	* src/ctests/overflow3_pthreads.c 1.18:
	* src/ctests/papi-fork/summary 1.2:
	* src/ctests/papi_test.h 1.30:
	* src/ctests/profile_twoevents.c 1.18:
	* src/ctests/sprofile.c 1.27:
	* src/ctests/subinfo.c 1.5:
	* src/ctests/test_utils.c 1.70:
	* src/ctests/test_utils.h 1.34:
	* src/ftests/fmultiplex1.F 1.28:
	* src/ftests/fmultiplex2.F 1.22:
	* src/utils/cost.c 1.28:
	* src/utils/event_info.c 1.7:
		Correct comment

	* src/papi_internal.c 1.124:
	* src/papi_internal.h 1.173:
		Hot path analysis revealed:
		
		- Every machine has false sharing on the dynamic array that holds the EventSet 
		number to address mapping. This means, for multithreaded apps, that a PAPI read 
		usally means a cache miss. Fix, instead of allocating an array of pointers, 
		allocate an array of structs. This provides natural padding between EventSetInfo 
		objects, greatly reducing the ping-pong effects.
		
		- Structure access order improvements when analyzing performance of PAPI_read

	* man/man3/PAPI_get_opt.3 1.21:
	* man/man3/PAPI_read.3 1.18:
	* src/ctests/overflow_force_software.c 1.17:
	* src/extras.c 1.146:
	* src/multiplex.c 1.67:
	* src/papi.c 1.323:
	* src/papi.h 1.180:
		This commit adds:
		
		* Support for sampling/triggering on any itimer and/or signal with a time interval.
		* All time metrics in PAPI are now kept in 'ns'.
		* Add PAPI_get_virt_nsec/virt_cyc as optional calls.
		
		The API call to do this is:
		
		   PAPI_option_t itimer;
		   memset(&itimer,0,sizeof(itimer));
		   itimer.itimer.itimer_num = ITIMER_VIRTUAL;
		   itimer.itimer.itimer_sig = SIGVTALRM;
		   itimer.itimer.itimer_ns = 1; /* if 0 then ignored */
		   if (PAPI_set_opt(PAPI_DEF_ITIMER,&itimer) != PAPI_OK)
		      error_out;
		
		Or to set the NS interval:
		   PAPI_option_t itimer;
		   memset(&itimer,0,sizeof(itimer));
		   itimer.itimer.itimer_ns = 1; /* if 0 then ignored */
		   if (PAPI_set_opt(PAPI_DEF_ITIMER_NS,&itimer) != PAPI_OK)
		      error_out;

	* src/Makefile.inc 1.128:
		Part 2 of the previous commit for standalone test building 
		support.

	* src/aix.c 1.74:
	* src/any-null.c 1.48:
	* src/any-proc-null.c 1.11:
	* src/genpapifdef.c 1.38:
	* src/irix-mips.c 1.113:
	* src/linux-bgl.c 1.6:
	* src/linux-ia64.c 1.170:
	* src/linux.c 1.61:
	* src/papi_fwrappers.c 1.77:
	* src/papi_protos.h 1.65:
	* src/papi_vector.c 1.15:
	* src/perfctr-p3.c 1.84:
	* src/perfctr-p4.c 1.103:
	* src/perfctr-ppc32.c 1.6:
	* src/perfctr-ppc64.c 1.14:
	* src/perfctr-ppc64.h 1.8:
	* src/perfmon.c 1.69:
	* src/solaris-ultra.c 1.119:
	* src/unicos-ev5.c 1.66:
	* src/x1.c 1.35:
		More support for setting ITIMER_NS in switching

	* man/man3/PAPI_get_opt.3 1.22:
		Minor fixup in type

	* src/ctests/Makefile 1.149:
	* src/ftests/Makefile 1.62:
	* src/utils/Makefile 1.14:
		Updates to Makefiles to support standalone building of tests. i.e. If
		you have an installed papi in the standard places, you should be able to
		build the tests against it. Now you can.
		
		If you don't have the tests installed in a standard place, set:
		LDFLAGS = <otherldflags> -L/path/to/installed/papi/includes
		CFLAGS = <othercflags> -I/path/to/installed/papi/includes
		FFLAGS = <othercflags> -I/path/to/installed/papi/includes

2008-07-08	terpstra
	* src/libpfm-3.y/config.mk 1.1.1.9:
	* src/libpfm-3.y/lib/pfmlib_gen_ia32.c 1.1.1.4:
	* src/libpfm-3.y/lib/pfmlib_sicortex.c 1.1.1.2:
		Import latest updates from sourceforge

	* INSTALL.txt 1.27:
		Added text for Cell, SiCortex, and IBM POWER/Linux series with 
		Perfmon2.

2008-07-02	you
	* src/aix.c 1.73:
		add proc type detection, and init preset table from csv file.
		support power4 power5 power5+ power6.
		only tested on power5

	* src/Makefile.aix-powerpc.common 1.5:
	* src/aix.c 1.72:
	* src/pmapi-ppc64.c 1.5:
	* src/pmapi-ppc64_events.c 1.4:
	* src/ppc64_events.h 1.4:
		generating native_table without using event mapping table.
		use csv file for preset definition. only tested on power5.

2008-07-02	terpstra
	* src/perfctr-2.6.x/CHANGES 1.1.1.24:
	...
		Import of perfctr 2.6.35

	* src/perfctr-2.6.x/patches/aliases 1.9:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.5-1.358-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.5-7.95-suse 1.2:
	* src/perfctr-2.6.x/usr.lib/Makefile 1.26:
		Merge of 2.6.35

	* src/linux-ia64.c 1.169:
		Change size of calloc in _papi_hwd_update_shlib_info as identified by a
		customer of Gary Mohr at Bull.
		Thanks, Gary

	* src/configure.in 1.83:
		Condition assignment of pfm_libdir and pfm_incdir to avoid clobbering command-line settings.
		Thanks to Chris Arges of IBM.

2008-06-27	sbk
	* src/Makefile.CNL-perfmon2 1.13:
		Use GNU gfortran for CNL builds on XT.

2008-06-26	mucci
	* INSTALL.txt 1.26:
		Install instructions for SiCortex, native and cross as well as 
		MIPS64/MIPS Linux

	* src/config.h.in 1.7:
	* src/configure 1.81:
	* src/configure.in 1.82:
	* src/perfmon.c 1.68:
		Fixed up clock for SiCortex systems, old fast trap known to be broken.
		Also, added detection of that into configure.
		Added --disable-papi-vector to configure to be able to compile systems
		with -DPAPI_NO_VECTOR. Currently, something in the code is still preventing
		this, but we should be able to do it for systems where it is a benefit.

2008-06-24	terpstra
	* src/Rules.perfctr 1.37:
	* src/Rules.perfctr-pfm 1.14:
		Changes to better support DESTDIR during install.
		Thanks to Steve Blackburn.

	* src/linux.c 1.60:
	* src/perfctr-p3.c 1.83:
	* src/perfctr-p4.c 1.102:
		Changes to support the new VPERFCTR_CONTROL_CLOEXEC flag
		in perfctr. Needs testing.

2008-06-23	mucci
	* src/Makefile.in 1.19:
	* src/configure 1.80:
	* src/configure.in 1.81:
		Fixed up handling of datadir and datarootdir, which allows us to handle
		these in a standard way and remove hacks from the configure file.

2008-06-23	terpstra
	* src/perfmon.h 1.16:
		Fix OVERFLOWADDRESS macro for powerpc64 builds.
		Thanks to Chris Arges of IBM.

2008-06-18	terpstra
	* src/Makefile.in 1.18:
	* src/configure.in 1.80:
	* src/papi.h 1.179:
		Bump version number to 3.6.1 in prep for the next release.

2008-06-13	terpstra
	* src/papi_pfm_events.c 1.27:
		Modify csv event loader to optionally load CYCLES and TOT_INS from either
		the perfmon built-in routines or from the table.
		Previously assumed they always came from the built-ins.

	* src/perfmon_events.csv 1.30:
		Added some initial event definitions for Cell.

2008-06-12	terpstra
	* src/ctests/first.c 1.46:
		Re-Corrected verification output. Although columns appear to be added
		together, the verification is in terms of multipliers.

2008-06-11	terpstra
	* man/html/papi_add_event.html 1.11:
	* man/html/papi_add_events.html 1.11:
	* man/man3/PAPI_add_event.3 1.20:
		Clarification of return values.

	* src/utils/event_info.c 1.5:
		Substitute character entities for illegal characters in strings.
		This includes <>& for now.
		Might add others later.

	* src/papi_pfm_events.c 1.26:
		load_preset_table previously assumed that the cycles and instructions events
		always existed. This is not true for Cell. This change relaxes this assumption
		and checks for the existence of these events before automatically adding them.

	* src/genpapifdef.c 1.37:
		Modification to always represent the maximum negative number symbolically
		rather than numerically. Originally identified as a problem for the Cray Fortran
		compiler, Jim Rosinski demonstrated that it now exists on gcc Fortran as well.
		This fix (a hack, really) appears to work everywhere.

	* src/perfmon.c 1.67:
		Format tweaks for some debug and error messages.

	* src/perfmon_events.csv 1.29:
		Add a place holder for a Cell event table.

	* src/libpfm-3.y/README 1.1.1.5:
	...
		Import latest libpfm sources

	* src/utils/event_info.c 1.6:
		Added single and double quotes while I was at it.

2008-06-10	sbk
	* src/perfmon.c 1.66:
		When writing a counter that has been set up for overflow, add to the
		desired value the long reset value (overflow frequency). This assumes (and
		defines) the counter value being passed in as the actual number of counts
		(zero-based).  This adds symmetry to the _hwd_read() function which
		already accounts for the long reset value, subtracting it off from the
		returned pfm_read_pmds() call.
		
		Leave the _hwd_reset() function as setting it to the long reset value.

2008-06-05	mucci
	* src/papi_pfm_events.c 1.25:
		Small commit to avoid a redundant space.

2008-06-05	terpstra
	* src/papi_pfm_events.c 1.24:
		Oops.
		Leftover chevrons from cvs conflict.

2008-06-04	mucci
	* src/papi_pfm_events.c 1.22:
		Removed redundant space ahead of Unit Mask qualifier

2008-06-04	terpstra
	* src/utils/native_avail.c 1.36:
		Modify argument parsing to prevent false error message on event name for
		-e option.

	* src/utils/native_avail.c 1.37:
		Rework the -e option to display unit mask information for events that have
		unit masks defined but not specified.

	* src/utils/avail.c 1.42:
		Rework the -e option for native events to display unit mask information
		for events that have unit masks defined but not specified.
		Mirrors new functionality in native_avail.

	* src/linux-ia64.c 1.168:
	* src/papi_pfm_events.c 1.23:
		Rework _papi_pfm_ntv_name_to_code to return a valid base event code
		even for events with unspecified unit masks.
		Also some random format cleanup.

	* src/perfmon.c 1.65:
		Add a debug statement.

2008-06-03	sbk
	* src/Rules.perfctr-pfm 1.13:
		Pass the PFM_VERSION_FLAG down even on perfctr (Catamount) builds to fully
		qualify the installed include/perfmon/perfmon.h file.

2008-06-02	terpstra
	* src/perfctr-2.6.x/patches/aliases 1.8:
	* src/perfctr-2.6.x/usr.lib/Makefile 1.25:
		merge of 2.6.34

	* src/perfctr-2.6.x/CHANGES 1.1.1.23:
	...
		Import of perfctr 2.6.34

2008-05-30	mucci
	* src/ctests/Makefile 1.148:
	* src/ftests/Makefile 1.61:
	* src/utils/Makefile 1.13:
		Add CFLAGS back in

2008-05-30	terpstra
	* src/papi_pfm_events.c 1.21:
		Remove a block of duplicate code in _papi_pfm_ntv_bits_to_info() that was
		introduced in version 1.13

	* src/papi.c 1.322:
		One line change in the conditional execution of PAPI_overflow to make
		profiling work on Intel Core 2 processors.
		Thanks to Rick Kufrin for pointing out this problem.
		See papi.c 1.315 and 1.316 for the context in which this  bug was introduced.

2008-05-29	mucci
	* src/configure 1.79:
		Regenerated with autoconf 2.61

	* src/perfmon.c 1.64:
		SiCortex has umasks and a fast timer.

	* src/ctests/fork_exec_overflow.c 1.6:
		TEST_QUIET fixes. We really should have made this an environment 
		variable, not an argument.

	* src/configure 1.78:
	* src/configure.in 1.79:
		Ok, this fixes the --with-perfmon argument to be consistent.
		
		The argument is now specified as a true version number, i.e. 2.3, 2.4 and is checked
		for format.
		
		If this is not specified and we are not cross compiling, the script looks at
		/sys/kernel/perfmon/version and /proc/perfmon to find the current version.
		
		If anything is found over 2.0, it sets the PFMLIB_VERSION_xx where xx are the
		two digits.
		
		Tested on:
		 IA64/kernel 2.4.x (perfmon 1.6)
		 IA64/kernel 2.6.x (perfmon 2.0)
		 PIV/kernel 2.6.25+perfmon2 patches (perfmon v2.8)
		
		Attention Cray folks, you'll need to pass --with-perfmon=2.3 or 2.2

	* src/run_tests.sh 1.33:
		export TESTS_QUIET as env variable also

2008-05-29	terpstra
	* src/linux.c 1.59:
		Eliminate spurious warning in _papi_hwd_shutdown

2008-05-28	mucci
	* src/perfmon.c 1.58:
		Don't hardcode clockrate for sicortex to 500.

	* src/perfmon.c 1.60:
		Move back pfarg_msg_t.

	* src/configure 1.75:
	* src/papi.h 1.178:
	* src/perfmon.c 1.57:
	* src/perfmon.h 1.15:
		Added support for changing the multiplexing interval for Perfmon2 platforms, both default and for individual eventsets.
		Uses the reserved_ints[1] in the substrate structure to store the minimal kernel timeout. This will also prevent failures of PAPI on newer systems with dynamic ticks. Also, code to check/adjust the default multiplexing interval at initialization time. Found a failure on my 2.6.25 core2 due to this. Also, regenerated configure with 2.61 autoconf.

	* src/configure 1.76:
	* src/configure.in 1.77:
		Fixes to allow SiCortex to compile natively. Save Dan some headaches. Still
		needs pfm_msg_t fixup. But now chooses the right cycle timer if a SC machine is
		detected. But cross compiling is so much more fun...

	* src/configure.in 1.78:
	* src/perfmon.c 1.63:
		ha. Finally got the PFM_MSG_TYPE right

	* src/configure 1.77:
		Regenerated with autoconf 2.61

	* src/perfmon.c 1.61:
		Fix clock logic #ifdefs.

	* src/perfmon.c 1.59:
		Little fudge in the clock to get it right.

2008-05-28	terpstra
	* src/Rules.perfctr-pfm 1.12:
	* src/Rules.pfm2 1.24:
		Move the static perfmon_events_table.h file to MISCHDRS;
		Remove LIBS parameter from Rules.perfctr-libpfm;
		Standardize on sh instead of ksh in both files.
		This fixes dependency on generated event header for shared library
		in both cases.

	* src/ctests/burn.c 1.2:
	* src/ctests/fork_exec_overflow.c 1.5:
		Stomp out some annoying warning messages.

	* src/perfmon.c 1.62:
		Eliminate unused variable warning message.

2008-05-24	mucci
	* man/Makefile 1.15:
		More explicit directory creation

2008-05-23	sbk
	* src/Rules.pfm2 1.23:
		Missed passing the PFMLIB_VERSION_* flag to the install step of libpfm so
		that the perfmon.h header file an include it upon installing libpfm headers.

	* src/Makefile.CNL-perfmon2 1.12:
	* src/Makefile.catamount-perfctr-opteron 1.13:
	* src/configure 1.74:
	* src/configure.in 1.76:
		Accommodate the new/upcoming changes to libpfm 3.4. PFM_VERSION_FLAG is
		defined as PFMLIB_VERSION_22 or PFMLIB_VERSION_23, w/o the -D compilation
		flag. The Cray make files that use it as a compilation macro now require
		the -D preceeding it. Configure issues it with no -D in the generated
		Makefile.

2008-05-23	terpstra
	* src/libpfm-3.y/config.mk 1.1.1.7:
	...
		Import of latest libpfm sources

	* src/perfctr-2.6.x/CHANGES 1.1.1.22:
	...
		Import of perfctr 2.6.33

	* src/perfctr-2.6.x/patches/aliases 1.7:
	* src/perfctr-2.6.x/usr.lib/Makefile 1.24:
		merge of changes to perfctr 2.6.33

	* src/papi_pfm_events.c 1.20:
		Restructured event search logic:
		If the PAPI_PERFMON_EVENT_FILE environment variable is set,
		it looks for that file with no massaging and fails if not found.
		else if the static table is included it uses it.
		else it parses for various combinations of the default file and data directory.

2008-05-22	mucci
	* src/ctests/Makefile 1.147:
	* src/ctests/burn.c 1.1:
	* src/ctests/fork_exec_overflow.c 1.4:
		Added system() tests while overflowing, including a non-papi 
		cycle burner.

	* src/ctests/fork_exec_overflow.c 1.3:
		Added stop before exec, allows perfctr to pass

2008-05-22	terpstra
	* src/perfmon.h 1.14:
		Removed duplicate definition of PERFMON_EVENT_FILE which is
		preferentially defined in papi_pfm_events.h.
		While I was at it I also deleted some other deprecated definitions which had
		been moved to papi_pfm_events.h a long time ago.

	* src/configure 1.73:
	* src/configure.in 1.75:
		Change default for with-pfm-events from 'file' to 'static'.
		NOTE: This version of configure was built with autoconf 2.59.

2008-05-21	mucci
	* src/ctests/Makefile 1.146:
	* src/ctests/fork_exec_overflow.c 1.1:
		Ported Mark Krentels most excellent fork/exec/overflow test to the PAPI test
		structure. Note that this will fail on unpatched, vanilla, IA64 kernels as
		that kernel has the (very naughty) bug meaning self sampling is really boned
		for codes that fork there.. Up-to-date Perfmon2 kernels now
		have been fixed. Awaiting testing on Perfmon2.

	* src/ctests/fork_exec_overflow.c 1.2:
		adjust threshold for error detection...

2008-05-21	you
	* src/ctests/shlib.c 1.17:
		remove creation of fullname. only use libpapi.so and 
		libpapi64.so. always assume library is in LD_LIBRARY_PATH.

2008-05-20	mucci
	* src/papi_pfm_events.c 1.19:
		Correct path of file when looking for events

	* src/papi_internal.c 1.123:
	* src/papi_internal.h 1.172:
		Add PID and Thread ID to debug output display

	* src/configure 1.72:
	* src/configure.in 1.74:
		Removed redundant definition for PAPI_DATADIR that broke the non-
		static file build

2008-05-13	mucci
	* man/Makefile 1.14:
		We were changing permissions of wrong directory
		Spotted on SiCortex

	* src/configure 1.71:
	* src/configure.in 1.73:
		Docs should be installed in prefix/share/doc/papi by default, 
		not directly in prefix/share/doc

2008-05-09	mucci
	* src/papi.h 1.177:
		Add PAPI_ENUM_ALL #define for backwards compatibility.

2008-05-08	mucci
	* src/perfctr-ppc32.c 1.5:
	* src/perfctr-ppc64.c 1.13:
		Move hwd_shutdown to linux.c as with other perfctrs. So much 
		duplicated code!

	* src/utils/Makefile 1.11:
		papi_xml_event_info is actually called papi_event_info, otherwise the Makefile
		will keep rebuildng

2008-05-07	mucci
	* src/ctests/Makefile 1.145:
	* src/ftests/Makefile 1.60:
		Proper ordering for includes and flags. Don't compile dummy and 
		do_loops with any flags.

	* src/utils/Makefile 1.10:
		$(INCLUDE) always comes before $(CFLAGS) unless you want to pick 
		up stale headers.

	* src/ctests/overflow.c 1.62:
		Threshold env variable for testing

	* src/ctests/matrix-hl.c 1.13:
		Always call dummy. Solves fail on mips/linux.

	* src/run_tests_exclude.txt 1.3:
		Removed basic fork/exec tests from this. Overflow/running 
		counters still broken across fork exec.

2008-05-07	you
	* src/perfctr-p4.c 1.101:
	* src/perfctr-p4.c [papi-3-6-0] 1.99.2.1:
		fix for recognizing intel Pentium4 model 2, 3

2008-05-05	mucci
	* src/linux.c 1.58:
	* src/perfctr-p3.c 1.82:
	* src/perfctr-p4.c 1.100:
		1) Add new call to vperfctr_open_mode so that we can still open our context after forking
		2) Remove errors from vperfctr_unlink, allow shutdown to always succeed
		
		This patch allows forkexec3 and forkexec4 to run on Perfctr platforms. This does NOT fix
		the current outstand fork/exec issues where counters are running and overflowing across
		fork/exec.

