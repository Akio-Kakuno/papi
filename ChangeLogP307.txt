2004-12-01  terpstra
	* src/papi.h 1.135:
		Change the PAPI version number to 3.0.7

	* doc/PAPI_Prog_Ref.doc 1.5:
	* doc/progref_template.doc 1.5:
		Updated for PAPI 3.0.7.
		Actually only changes PAPI-get_hardware_info.

	* man/html/papi_get_hardware_info.html 1.10:
		Updated to match Phil's recent change.

2004-12-01  mucci
	* src/perfctr-2.6.x/CHANGES 1.1.1.8:
	* src/perfctr-2.6.x/examples/signal/signal.c 1.1.1.2:
	* src/perfctr-2.6.x/linux/drivers/perfctr/Config.in 1.1.1.2:
	* src/perfctr-2.6.x/linux/drivers/perfctr/Kconfig 1.1.1.2:
	* src/perfctr-2.6.x/linux/drivers/perfctr/RELEASE-NOTES 1.1.1.8:
	* src/perfctr-2.6.x/linux/drivers/perfctr/compat.h 1.1.1.3:
	* src/perfctr-2.6.x/linux/drivers/perfctr/compat24.h 1.1.1.4:
	* src/perfctr-2.6.x/linux/drivers/perfctr/cpumask.h 1.1.1.3:
	* src/perfctr-2.6.x/linux/drivers/perfctr/ppc.c 1.1.1.5:
	* src/perfctr-2.6.x/linux/drivers/perfctr/ppc_setup.c 1.1.1.2:
	* src/perfctr-2.6.x/linux/drivers/perfctr/version.h 1.1.1.8:
	* src/perfctr-2.6.x/linux/drivers/perfctr/virtual.c 1.1.1.4:
	* src/perfctr-2.6.x/linux/drivers/perfctr/virtual_stub.c 1.1.1.2:
	* src/perfctr-2.6.x/linux/drivers/perfctr/x86.c 1.1.1.7:
	* src/perfctr-2.6.x/linux/drivers/perfctr/x86_setup.c 1.1.1.5:
	* src/perfctr-2.6.x/linux/include/asm-i386/perfctr.h 1.1.1.4:
	* src/perfctr-2.6.x/linux/include/asm-ppc/perfctr.h 1.1.1.3:
	* src/perfctr-2.6.x/linux/include/linux/perfctr.h 1.1.1.3:
	* src/perfctr-2.6.x/patches/aliases 1.1.1.5:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.20-28.8-redhat 1.1.1.1:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.20-31.9-redhat 1.1.1.1:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.21 1.1.1.3:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.21-193-suse 1.1.1.3:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.21-20.EL-redhat 1.1.1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.22 1.1.1.3:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.23 1.1.1.3:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.25 1.1.1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.26 1.1.1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.27 1.1.1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.28-rc3 1.1.1.1:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.10-rc1 1.1.1.1:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.5 1.1.1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.5-1.358-redhat 1.1.1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.5-7.95-suse 1.1.1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.6 1.1.1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.7 1.1.1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.8.1 1.1.1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.9 1.1.1.2:
	* src/perfctr-2.6.x/perfctr.spec 1.1.1.8:
	* src/perfctr-2.6.x/usr.lib/Makefile 1.1.1.8:
	* src/perfctr-2.6.x/usr.lib/ppc.c 1.1.1.4:
		Import of PerfCtr 2.6.11

	* src/perfctr-2.6.x/linux/drivers/perfctr/x86_64.c 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.16 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.17 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.18 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.18-14-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.18-17.8.0-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.18-27.8.0-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.18-3-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.19 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.19.SuSE-206 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.20 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.20-19.8-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.20-19.9-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.20-8-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.20-9.2-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.21-15.EL-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.21-4.0.2.EL-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.21-6.EL-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.22-1.2115.nptl-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.22-1.2174.nptl-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.22-1.2179.nptl-redhat 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.27-pre1 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.27-pre3 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.4.28-pre4 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.0 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.1 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.2 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.3 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.4 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.6-rc3 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.7-rc1 1.2:
	* src/perfctr-2.6.x/patches/patch-kernel-2.6.7-rc1-mm1 1.2:
	* src/perfctr-2.6.x/usr.lib/Makefile 1.9:
		Resolve conflicts from import

2004-11-30  mucci
	* INSTALL.txt 1.12:
		Updated note about Linux/Alpha being stale.
		
		Added note to Linux/PerfCtr section about NEVER USING PERFCTR 2.4.x
		UNLESS YOU HAVE TO!

	* src/p3_events.c 1.41:
		Marked ADD_PIPE,MULT_PIPE and ADD_MULT_PIPE for Opteron as Speculative

2004-11-30  terpstra
	* src/ctests/second.c 1.34:
		More informative descriptive messages of what's happening;
		rearrangement of outputs to match descriptions and validation tests;
		rearrangements of variable declarations so it would compile.
		Muchly improved, thanks to Phil's recent revisions.
		Next time it would be even better if it compiled :)

	* src/perfctr-p3.c 1.56:
	* src/perfctr-p4.c 1.84:
		Changed name of clear_control_state to clear_cs_events to more accurately reflect the functionality.
		Removed unneeded call to init_control_state from update_control_state.
		Modified p3 clear routine to preserve state of ENABLE bit in event register.

	* RELEASENOTES.txt 1.3:
		Updated for PAPI 3.0.7

	* src/p4_events.c 1.47:
		Removed unneccessary setting of CPL(1) in ESCR for definition of all native events.
		This bit set the USR domain bit for every native event, which was then OR'd into
		the event set control state whether you wanted it or not.
		This fix takes care of Rick Kufrin's PAPI_set_domain problem from last week.

	* src/any-null.c 1.38:
		Modified to match p3 substrate re: update_control_state.

	* ChangeLogP307.txt 1.1:
		Created for PAPI 3.0.7

2004-11-29  mucci
	* man/man3/PAPI_get_hardware_info.3 1.10:
		Removed misleading comment.

	* src/ctests/memory.c 1.18:
		Fix for new definitions and more rigorous testing...
		Output on Opteron....
		
		L1 Instruction Write through Unknown policy Cache:
		  Total size: 64KB
		  Line size: 64B
		  Number of Lines: 1024
		  Associativity: 2
		
		L1 Data Write back Pseudo LRU policy Cache:
		  Total size: 64KB
		  Line size: 64B
		  Number of Lines: 1024
		  Associativity: 2
		
		L2 Unified Write through Pseudo LRU policy Cache:
		  Total size: 1024KB
		  Line size: 64B
		  Number of Lines: 16384
		  Associativity: 16

	* src/papi.h 1.133:
		Changed the definitions of WT and WB caches so they are exclusive. By default,
		all caches now have the LRU and Write Through attribute. Please check your
		processor! linux-memory.c and memory.c need to be updated to set and test
		for the correct bits. Everyone grab a processor...I'll take the AMD's...
		
		Here's the change.
		
		> #define PAPI_MH_CACHE_TYPE(a) (a & 0xf)
		> #define PAPI_MH_TYPE_WT       0x00  /* write-through cache */
		> #define PAPI_MH_TYPE_WB       0x10  /* write-back cache */
		> #define PAPI_MH_CACHE_WRITE_POLICY(a) (a & 0xf0)
		> #define PAPI_MH_TYPE_LRU      0x000
		> #define PAPI_MH_TYPE_PSEUDO_LRU 0x100
		> #define PAPI_MH_REPLACEMENT_POLICY(a) (a & 0xf00)
		
		BTW, an Opteron has WB L1, WT L2, both with Pseudo LRU support.

	* src/linux-memory.c 1.27:
	* src/papi.h 1.134:
	* src/perfctr-p3.c 1.55:
		Minor fixes for the Opteron and Pentium cache information. Pentium series
		cache attributes may be incorrect.

2004-11-25  mucci
	* src/ctests/val_omp.c 1.2:
		Brian's update

	* src/ctests/second.c 1.33:
		Much improved test case that demonstrates domain setting bug on Linux/x86
		and x86_64 systems.

	* src/ctests/Makefile 1.123:
		Added val_omp.c test to the makefile

	* src/p3_events.c 1.40:
		I sure thought I fixed this. My bad. Added correct PAPI_L1_TCM and PAPI_L2_TCM
		events to Opteron preset map.

2004-11-24  you
	* src/jni/PapiJ.java 1.4:
		remove defines of PAPI_FLOPS PAPI_IPS

2004-11-23  mucci
	* src/aix.c 1.50:
		This is a fix for Brian Wylie's bug in AIX/Power.
		
		The issue? A STATIC VARIABLE definition in _papi_hwd_read. It was
		causing BOGUS results on HEAVILY threaded programs. Thanks to
		Brian for catching this one. We should have a test case for this!
		
		Those of you who don't want to download the CVS version should change this
		line in aix.c
		<    static pm_data_t data;
		---
		>    pm_data_t data;

	* src/ctests/val_omp.c 1.1:
		Test case that caught the thread bug on AIX from Brian Wylie

2004-11-23  terpstra
	* src/perfctr-p3.c 1.54:
	* src/perfctr-p4.c 1.83:
		Fixed bug in p4 where _papi_hwd_init_control_state wasn't being called inside _papi_update_control_state.
		This should make control_states properly inherit default domains as set by PAPI_set_opt,
		but will still cause local (non-default) domains set by PAPI_set_opt(PAPI_DOMAIN) to get trashed.

2004-11-18  mucci
	* src/p3_events.c 1.39:
		Added better L2_TCM metric. Removed INVALID cache specifier from L2 events.
		According to AMD a refill to L1 from L2 or SYS cannot be in Invalid state.
		Which makes sense of course....

2004-11-18  you
	* src/jni/EventSet.java 1.2:
	* src/jni/Papi.c 1.6:
		modify EventSet class definition
		add num_events() function.
		fix create_eventset(), make it set eventset=PAPI_NULL

2004-11-17  jthomas
	* doc/PAPI_Software_Spec.doc 1.4:
		Updated a few events and grammatical errors that Office found.

2004-11-15  mucci
	* src/threads.h 1.2:
		Added NO_TLS definition at the head of threads.h. This will allow us to turn off
		TLS storage.

	* src/Rules.perfctr 1.18:
		Added test for lib64 installation of PerfCtr on x86_64.

	* src/ctests/shlib.c 1.15:
		Added a better placed dlerror call to print out the library
		loading failure.

	* src/p3_events.c 1.38:
		Updated lots of Opteron cache metrics and branch metrics. The only remaining
		questions are PAPI_L2_TCH and PAPI_L2_TCM. Thanks to AMD and Anoop Iyer for the
		preset mappings. VENDORS TAKE NOTE. IF YOU HAVE NOT HELPED US GET YOUR PRESET
		MAPS RIGHT, THEY MAY NOT BE CORRECT!
		
		The following metrics have been updated:
		PAPI_MEM_SCY: cycles stalled waiting for memory accesses. The counter
		used is in PAPI d8h, which counts dispatch stalls caused by the LS unit
		being full. These are not the same. The processor can spend cycles
		waiting for memory accesses without the LS unit being full. We do not
		have a native counter or a combination of counters that can accurately
		count cycles stalled waiting for memory accesses.
		
		PAPI_BR_UCN: unconditional branch instructions. The counter used in PAPI
		is c6h, which counts retired far control transfers. This is incorrect;
		far control transfers can be conditional or unconditional. We do not
		have a native counter or a combination of counters that can accurately
		count unconditional branch instructions.
		
		PAPI_BR_CN: conditional branch instructions. The counter used in PAPI is
		c2h, which counts retired branches including exceptions and interrupts.
		Exceptions and interrupts are not conditional branches, they are
		unconditional. We do not have a native counter or a combination of
		counters that can accurately count conditional branch instructions.
		
		PAPI_BR_NTK: conditional branches not taken. This quantity is derived in
		PAPI as the difference of branches (c2h) and taken branches (c4h). The
		problem is the same as that above; there is no way to count conditional
		branches.
		
		PAPI_BR_PRC: conditional branches correctly predicted. Ditto.
		
		PAPI_BR_INS: branches. This quantity is derived in PAPI as the sum of
		counter c2h (retired branches including exceptions and interrupts) and
		c6h (retired far control transfers). The correct way is to use c2h alone.
		
		PAPI_FP_STAL: cycles the FP units are stalled. The counter used in PAPI
		is 01h, which actually counts cycles when the FP units are idle (as
		opposed to stalled). This counter is correctly used in PAPI for
		PAPI_FPU_IDL. There is no way to count cycles when the FP units are stalled.
		
		
		Enhancements
		
		Some cache events in K8 include speculative activity. We recommend
		revamping the cache stats as follows:
		
		PAPI_L1_DCA: 40h. No change.
		
		PAPI_L1_DCM: 41h. We recommend calculating this as the sum of 1e42h and
		1e43h, which are DC refill from L2 and DC refill from system respectively.
		
		PAPI_L1_DCH: 40h - 41h. We recommend calculating this as 40h - (1e42h +
		1e43h); see previous paragraph.
		
		PAPI_L2_DCA: 41h. We recommend calculating this as the sum of 1e42h and
		1e43h, which are DC refill from L2 and DC refill from system respectively.
		
		PAPI_L2_DCM: 27eh. We recommend using 1e43h, which counts DC refill from
		system (which is the same as DC refills which missed in the L2).
		
		PAPI_L2_DCH: 1f42h. No change.
		
		PAPI_L1_ICA: 80h. No change.
		
		PAPI_L1_ICM: 81h. We recommend calculating this as the sum of 82h and
		83h, which are IC refill from L2 and IC refill from system respectively.
		
		PAPI_L1_ICH: Currently blank. We recommend calculating this as 80h -
		(82h + 83h); see previous paragraph.
		
		PAPI_L2_ICA: 81h. We recommend calculating this as the sum of 82h and
		83h, which are IC refill from L2 and IC refill from system respectively.
		
		PAPI_L2_ICM: 17eh. We recommend using 83h, which counts IC refills from
		system (which is the same as IC refills which missed in the L2).
		
		PAPI_L2_ICH: Currently blank. We recommend using 82h, which counts IC
		refills from L2.
		
		(Opteron and Athlon-64 processors have a unified L2 cache. When I say
		L2_DCH above I am referring to hits in the unified L2 resulting from L1
		DC misses. This is in line with the counters already in PAPI.)
		
		
		Additions
		
		The following stats which are not computed by PAPI can be computed using
		combinations of the above counters. Some of them require more than four
		native events, so the calculation is not feasible without multiplexing.
		
		     * PAPI_L1_ICH
		     * PAPI_L2_ICH
		     * PAPI_L2_ICR
		     * PAPI_L2_ICW
		     * PAPI_L1_TCH
		     * PAPI_L2_TCH
		     * PAPI_L2_TCA
		     * PAPI_L1_TCR
		     * PAPI_L2_TCR

2004-11-10  jthomas
	* src/solaris-ultra.c 1.100:
		Added Bryan Wylie's fixes for some event definitions.

2004-11-05  terpstra
	* src/ftests/fmultiplex2.F 1.19:
		Finally fixed that &*%! integer too large warning message.

2004-11-01  jthomas
	* src/p3_events.c 1.37:
		Typo for one of the Opteron events #defines.  BAD!!

2004-10-28  jthomas
	* src/Matlab/PAPI_Matlab.readme 1.7:
		A better compile string for our mex compile.

	* src/Matlab/flops.readme 1.3:
		A better compile string for mex.

	* src/Matlab/PAPI_flops.c 1.3:
		We were using the // comment format instead of the /* */ format.

2004-10-28  london
	* src/multiplex.c 1.58:
		Fix for an assert that was reported by Sameer

