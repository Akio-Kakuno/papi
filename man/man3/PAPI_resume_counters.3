.\" $Id$
.TH PAPI_resume_counters 3 "October, 2000" "PAPI Programmer's Manual" "PAPI"

.SH NAME
PAPI_resume_counters \- PAPI High Level: resume counting hardware events
from previously stopped counters

.SH SYNOPSIS
.B #include <papi.h>

.BI int\ PAPI_resume_counters(\|)

.SH DESCRIPTION
.LP
.B PAPI_resume_counters(\|)
resumes counting the events enabled through a call to
.B PAPI_start_counters()
and currently stopped after a call to
.B PAPI_stop_counters.  

The return value is an integer that indicates whether the call
succeeded (PAPI_OK) or failed (not PAPI_OK).  

.SH RETURN VALUES
On success, this function returns
.I "PAPI_OK."
On error, a non-zero error code is returned.

.SH ERRORS
.TP
.B "PAPI_EINVAL"
The counters have not been set-up through a call to
.B PAPI_start_counters()
earlier.
.TP
.B "PAPI_ESYS"
A system or C library call failed inside PAPI, see the 
.I "errno"
variable.
.TP
.B "PAPI_EISRUN"
The EventSet is currently counting events.
.LP
The function makes a call to
.B PAPI_start()
using an internal event set. In case the users mixes high-level and
low-level calls in the PAPI interface other error codes could occur
due to incompatible event sets in use. See 
.BR PAPI_start (3)
for details.

.SH EXAMPLES
.nf
.if t .ft CW
  long long Counts[2];
  int num_cntrs = 2;
	
  /* Hold counting of events */
  if (PAPI_stop_counters(Events, num_cntrs) != PAPI_OK)
    handle_error(1);

  /* Do some I/O stuff */
  Application_Check_Point()

  /* Resume counting of events */
  if (PAPI_resume_counters(Events, num_hwcntrs) != PAPI_OK)
    handle_error(1);
.if t .ft CW
.fi

.SH AUTHOR
Philip J. Mucci <mucci@cs.utk.edu>

.SH BUGS
This function has no known bugs (yet).

.SH SEE ALSO
.BR PAPI_read_counters "(3),"
.BR PAPI_start_counters "(3),"
.BR PAPI_stop_counters "(3),"
.BR PAPI_start "(3),"
The PAPI Web Site: 
.B http://icl.cs.utk.edu/projects/papi
