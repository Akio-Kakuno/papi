.\" $Id$
.TH PAPI_state 3

.SH NAME
PAPI_state \- start counting events contained in an EventSet

.SH SYNOPSIS
.B #include <papi.h>

.BI "int\ PAPI_state (int " EventSet ", int *" status);

.SH DESCRIPTION
.LP
int EventSet --  a reference to an EventSetInfo structure
.LP
.LP
.B PAPI_state(\|) 
returns the counting state of the EventSet in
.I status.
If the call succeeds, then
.I status
is either 
.I PAPI_RUNNING
or
.I PAPI_STOPPED.

.SH RETURN VALUES
On success, this function returns
.I "PAPI_OK."
On error, a non-zero error code is returned.

.SH ERRORS
.TP
.B "PAPI_EINVAL"
One or more of the arguments is invalid.
.TP
.B "PAPI_ENOEVST"
The EventSet specified does not exist.

.SH EXAMPLES
.LP
.PP
.RS
.nf
int EventSet = PAPI_NULL;
int status = 0;  
.LP
if (PAPI_create_eventset(&EventSet) != PAPI_OK)
  handle_error(1);

/* Add Total Instructions Executed to our EventSet */

if (PAPI_add_event(&EventSet, PAPI_TOT_INS) != PAPI_OK)
  handle_error(1);

/* Start counting */

if (PAPI_state(EventSet, &status) != PAPI_OK)
  handle_error(1);

printf("State is now %d\en",status);

if (PAPI_start(EventSet) != PAPI_OK)
  handle_error(1);

if (PAPI_state(EventSet, &status) != PAPI_OK)
  handle_error(1);

printf("State is now %d\en",status);
.fi
.RE
.PP

.SH AUTHOR
Philip J. Mucci <mucci@cs.utk.edu>

.SH BUGS
This function has no known bugs.

.SH SEE ALSO
.BR PAPI_start "(3), " 
.BR PAPI_stop "(3), "
The PAPI Web Site: 
.B http://icl.cs.utk.edu/projects/papi
