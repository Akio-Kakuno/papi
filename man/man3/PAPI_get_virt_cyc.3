.\" $Id$
.TH PAPI_get_virt_cyc 3 "October, 2000" "PAPI Programmer's Manual" "PAPI"

.SH NAME
PAPI_get_virt_cyc, PAPI_get_virt_usec \- get virtual time counter values

.SH SYNOPSIS
.B #include <papi.h>

.nf
.BI "long long PAPI_get_virt_cyc(void);"
.BI "long long PAPI_get_virt_usec(void);"
.fi

.SH DESCRIPTION
Both of these functions return the total number of virtual units from
some arbitrary starting point. Virtual units accrue every time the
process is running in user-mode on behalf of the process. Like the
real time counters, these are guaranteed to exist on every platform
PAPI supports. However on some platforms, the resolution can be as bad
as 1/Hz as defined by the operating system.

.SH ERRORS
This function always succeeds.

.SH EXAMPLE
.LP
.nf
.if t .ft CW
long long s, e;
	
if (PAPI_library_init(PAPI_VER_CURRENT) != PAPI_VER_CURRENT)
  exit(1);

s = PAPI_get_virt_cyc();

your_slow_code();

e = PAPI_get_virt_cyc();
printf("Process has run for cycles: %lld\en",e-s);
.if t .fr P
.fi

.SH AUTHOR
Philip J. Mucci <mucci@cs.utk.edu>

.SH BUGS
This function has no known bugs.

.SH SEE ALSO
.BR PAPI_library_init "(3), "
.BR PAPI_get_real_usec "(3), " 
.BR PAPI_get_real_cyc "(3), " 
The PAPI Web Site: 
.B http://icl.cs.utk.edu/projects/papi
