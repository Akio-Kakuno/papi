.\" $Id$
.TH PAPI_add_event 3 "October, 2000" "" "PAPI"

.SH NAME
PAPI_add_event, PAPI_add_events, PAPI_add_pevent \- add PAPI preset or native hardware event to an EventSet

.SH SYNOPSIS
.B #include <papi.h>

.BI "int\ PAPI_add_event(int *" EventSet ", int " EventCode);
.BI "int\ PAPI_add_events(int *" EventSet ", int *" EventCode ", int "num);
.in \\n
.BI "int\ PAPI_add_pevent(int *" EventSet ", int " code ", void * " misc);

.SH DESCRIPTION
.B PAPI_add_event()
adds a hardware event to a PAPI Event Set. 
.B PAPI_add_events()
does the same, but for an array of hardware event codes.
.B PAPI_add_pevent() 
is reserved for future use.

Each of these functions takes the following as its first argument:
.LP
.I "EventSet"
--  an integer handle for a PAPI Event Set as created by
.BR "PAPI_create_eventset" (3)

A hardware event can be either a PAPI Preset or a native hardware event code. 
For a list of PAPI preset events, see
.BR PAPI_preset "(3)"
or run the
.I avail
test case in the PAPI distribution. PAPI Presets can be passed to
.BR PAPI_query "(3)"
to see if they exist on the underlying architecture. For the encoding
of native events, see the <arch>.README file also included the distribution. 

.SH RETURN VALUES
On success, this function returns
.I "PAPI_OK."
On error, a non-zero error code is returned.

.SH ERRORS
.TP
.B "PAPI_EINVAL"
One or more of the arguments is invalid.
.TP
.B "PAPI_ENOMEM"
Insufficient memory to complete the operation.
.TP
.B "PAPI_ENOEVST"
The EventSet specified does not exist.
.TP
.B "PAPI_EISRUN"
The EventSet is currently counting events.
.TP
.B "PAPI_ECNFLCT"
The underlying counter hardware can not count this event and other events
in the EventSet simultaneously.
.TP
.B "PAPI_NOEVNT"
The PAPI preset is not available on the underlying hardware. 

.SH EXAMPLES
.LP

  int EventSet = PAPI_NULL;
  unsigned int native = 0x0;
.LP
	
  if (PAPI_create_eventset(&EventSet) != PAPI_OK)
    handle_error(1);

  /* Add Total Instructions Executed to our EventSet */

  if (PAPI_add_event(&EventSet, PAPI_TOT_INS) != PAPI_OK)
    handle_error(1);

  /* Add native event (0xc1 on hardware counter 1) */

  native = (0xc1 << 8) | 1;
  if (PAPI_add_event(&EventSet, native) != PAPI_OK)
    handle_error(1);

  /* Start counting */

  if (PAPI_start(EventSet) != PAPI_OK)
    handle_error(1);

.SH AUTHOR
Philip J. Mucci <mucci@cs.utk.edu>

.SH BUGS
This function has no known bugs.

.SH SEE ALSO
.BR PAPI_preset "(3), "
.BR PAPI_set_opt "(3), " PAPI_start "(3), " PAPI_rem_event "(3), " 
.BR PAPI_rem_events "(3), " PAPI_query "(3), "
.BR PAPI_cleanup_eventset "(3), " PAPI_destroy_eventset "(3), " 
The PAPI Web Site: 
.B http://icl.cs.utk.edu/projects/papi
