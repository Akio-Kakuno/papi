.\" $Id$
.TH PAPI_stop_counters 3 "October, 2000" "PAPI Programmer's Manual" "PAPI"

.SH NAME
PAPI_stop_counters \- PAPI High Level: stop counting hardware events

.SH SYNOPSIS
.B #include <papi.h>

.BI "int\ PAPI_stop_counters(long long *" values ", int " array_len ");"

.SH DESCRIPTION
.LP
.B PAPI_stop_counters(\|)
.LP
This function stops the counters and returns their values. The
counters must have been started by a previous call to
PAPI_start_counters().
.LP
.I *values
-- an array where to put the counter values
.LP
.I array_len 
-- the number of items in the *values array
.LP
The return value is an integer that indicates whether the call
succeeded (PAPI_OK) or failed (not PAPI_OK).  

.SH RETURN VALUES
On success, this function returns
.I "PAPI_OK."
On error, a non-zero error code is returned.

.SH ERRORS
.TP
.B "PAPI_EINVAL"
One or more of the arguments is invalid.

.SH EXAMPLES
.nf
.if t .ft CW
  int Events[2] = { PAPI_TOT_CYC, PAPI_TOT_INS };
  long long values[2];
  int num_hwcntrs = 0;
	
  if ((num_hwcntrs = PAPI_num_counters()) != PAPI_OK)
    handle_error(1);

  if (num_hwcntrs > 2)
    num_hwcntrs = 2;

  /* Start counting events */

  if (PAPI_start_counters(Events, num_hwcntrs) != PAPI_OK)
    handle_error(1);

  your_slow_code();

  /* Stop counting events */

  if (PAPI_stop_counters(values, num_hwcntrs) != PAPI_OK)
    handle_error(1);
.if t .ft P
.fi

.SH AUTHOR
Philip J. Mucci <mucci@cs.utk.edu>

.SH BUGS
This function has no known bugs.

.SH SEE ALSO
.BR PAPI_num_counters "(3),"
.BR PAPI_start_counters "(3),"
.BR PAPI_read_counters "(3),"
The PAPI Web Site: 
.B http://icl.cs.utk.edu/projects/papi
