.\" $Id$
.TH PAPI_get_real_cyc 3 "September, 2002" "PAPI Programmer's Reference" "PAPI"

.SH NAME
PAPI_get_real_cyc, PAPI_get_real_usec \- get real time counter values

.SH SYNOPSIS
.B C Interface
.nf
.B #include <papi.h>
.BI "long_long PAPI_get_real_cyc(void);"
.BI "long_long PAPI_get_real_usec(void);"
.fi
.B Fortran Interface
.nf
.B #include "fpapi.h"
.BI PAPIF_get_real_usec(C_LONG_LONG\  time)
.BI PAPIF_get_real_cyc(C_LONG_LONG\  real_cyc)
.fi

.SH DESCRIPTION
Both of these functions return the total real time passed since 
some arbitrary starting point. The time is returned in clock cycles 
or microseconds respectively. These calls are equivalent to
wall clock time. 

.SH ERRORS
These functions always succeed.

.SH EXAMPLE
.LP
.nf
.if t .ft CW
long_long s, e;
	
if (PAPI_library_init(PAPI_VER_CURRENT) != PAPI_VER_CURRENT)
  exit(1);

s = PAPI_get_real_cyc();

your_slow_code();

e = PAPI_get_real_cyc();
printf("Wallclock cycles: %lld\en",e-s);
.if t .ft P
.fi

.SH AUTHOR
Philip J. Mucci <mucci@cs.utk.edu>

.SH BUGS
These functions have no known bugs.

.SH SEE ALSO
.BR PAPI_library_init "(3), "
.BR PAPI_get_virt_usec "(3), " 
.BR PAPI_get_virt_cyc "(3), " 
 The PAPI Web Site: 
http://icl.cs.utk.edu/projects/papi
