.\" $Id$
.TH PAPI_start 3 "December, 2001" "PAPI Function Reference" "PAPI"

.SH NAME
PAPI_start, PAPI_stop \- start/stop counting hardware events in an event set

.SH SYNOPSIS
.B C Interface
.nf
.B #include <papi.h>
.BI "int\ PAPI_start(int " EventSet ");"
.BI "int\ PAPI_stop(int " EventSet ", long_long *" values ");"
.fi
.B Fortran Interface
.nf
.B #include "fpapi.h"
.BI PAPIF_start(C_INT\  EventSet,\  C_INT\  check )
.BI PAPIF_stop(C_INT\  EventSet,\  C_LONG_LONG(*)\  values,\  C_INT\  check )
.fi

.SH DESCRIPTION
.B PAPI_start
starts the counting of a previously defined event set
.LP
.B PAPI_stop
halts the counting of a previously defined event set

.SH ARGUMENTS
.I "EventSet"
--  an integer handle for a PAPI event set as created by
.BR "PAPI_create_eventset" (3)
.LP
.I *values
-- an array to hold the counter values of the counting events

.SH RETURN VALUES
On success, this function returns
.B "PAPI_OK."
 On error, a non-zero error code is returned.

.SH ERRORS
.TP
.B "PAPI_EINVAL"
One or more of the arguments is invalid.
.TP
.B "PAPI_ESYS"
A system or C library call failed inside PAPI, see the 
.I "errno"
variable.
.TP
.B "PAPI_ENOEVST"
The EventSet specified does not exist.
.TP
.B "PAPI_EISRUN"
The EventSet is currently counting events.
.BR ""  ( "PAPI_start() " only)
.TP
.B "PAPI_ENOTRUN"
The EventSet is currently not running.
.BR "" ( "PAPI_stop() " only)
.TP
.B "PAPI_ECNFLCT"
The underlying counter hardware can not count this event and other events
in the EventSet simultaneously.
.TP
.B "PAPI_ENOEVNT"
The PAPI preset is not available on the underlying hardware. 

.SH EXAMPLES
.nf         
.if t .ft CW
  int EventSet = PAPI_NULL;
  unsigned int native = 0x0;
  long_long values[1];
	
  if (PAPI_create_eventset(&EventSet) != PAPI_OK)
    handle_error(1);

  /* Add Total Instructions Executed to our EventSet */

  if (PAPI_add_event(&EventSet, PAPI_TOT_INS) != PAPI_OK)
    handle_error(1);

  /* Start counting */

  if (PAPI_start(EventSet) != PAPI_OK)
    handle_error(1);

  poorly_tuned_function();

  if (PAPI_stop(EventSet, values) != PAPI_OK)
    handle_error(1);

  printf("%lld\\n",values[0]);
.if t .ft P
.fi         
.SH AUTHOR
Philip J. Mucci <mucci@cs.utk.edu>

.SH BUGS
These functions have no known bugs.

.SH SEE ALSO
.BR PAPI_create_eventset "(3), " PAPI_destroy_eventset "(3), " 
.BR PAPI_add_event "(3), " PAPI_rem_event "(3), " 
.BR PAPI_reset "(3), " PAPI_set_opt "(3), " 
 The PAPI Web Site: 
http://icl.cs.utk.edu/projects/papi
