.\" $Id$
.TH PAPI_rem_event 3 "October, 2000" "PAPI Programmer's Manual" "PAPI"

.SH NAME
PAPI_rem_event, PAPI_rem_events, PAPI_rem_pevent \- remove PAPI preset or native hardware event from an EventSet

.SH SYNOPSIS
.B #include <papi.h>

.nf
.BI "int\ PAPI_rem_event(int *" EventSet ", int " EventCode ");"
.BI "int\ PAPI_rem_events(int *" EventSet ", int *" EventCode ", int " num ");"
.BI "int\ PAPI_rem_pevent(int *" EventSet ", int " code ", void * " misc ");"
.fi

.SH DESCRIPTION
.nf
.BR "PAPI_rem_event(\|) " "removes a hardware event to a PAPI event set."
.BR "PAPI_rem_events(\|) " "does the same, but for an array of hardware event codes."
.BR "PAPI_rem_pevents(\|) " "is reserved for future use."
.fi

Each of these functions takes the following as its first argument:
.LP
.I "EventSet"
--  an integer handle for a PAPi event set as created by
.BR "PAPI_create_eventset" (3)
.LP
The other arguments are:
.LP
.I EventCode
-- a defined event such as PAPI_TOT_INS or a native event.
.LP
.I *EventCode
-- an array of defined events
.LP
.I num
-- an integer indicating the number of events in the array
.I *EventCode

A hardware event can be either a PAPI Preset or a native hardware event code. 
For a list of PAPI preset events, see
.BR "PAPI_preset" "(3) or run the"
.I avail
test case in the PAPI distribution. PAPI Presets can be passed to
.BR "PAPI_query" "(3) to see if they exist on the underlying architecture."
For the encoding of native events, see the <arch>.README file 
also included the distribution. 

.SH RETURN VALUES
On success, this function returns
.I "PAPI_OK."
On error, a non-zero error code is returned.

.SH ERRORS
.TP
.B "PAPI_EINVAL"
One or more of the arguments is invalid.
.TP
.B "PAPI_ENOEVST"
The EventSet specified does not exist.
.TP
.B "PAPI_EISRUN"
The EventSet is currently counting events.
.TP
.B "PAPI_ECNFLCT"
The underlying counter hardware can not count this event and other events
in the EventSet simultaneously.
.TP
.B "PAPI_NOEVNT"
The PAPI preset is not available on the underlying hardware. 

.SH EXAMPLES
.LP
.nf
.if t .ft CW
int EventSet = PAPI_NULL;
unsigned int native = 0x0;
	
if (PAPI_create_eventset(&EventSet) != PAPI_OK)
  handle_error(1);

/* Add Total Instructions Executed to our EventSet */

if (PAPI_add_event(&EventSet, PAPI_TOT_INS) != PAPI_OK)
  handle_error(1);

/* Start counting */

if (PAPI_start(EventSet) != PAPI_OK)
  handle_error(1);

/* Stop counting, ignore values */

if (PAPI_stop(EventSet, NULL) != PAPI_OK)
  handle_error(1);

/* Remove event */

if (PAPI_rem_event(&EventSet, PAPI_TOT_INS) != PAPI_OK)
  handle_error(1);
.if t .ft P
.fi

.SH AUTHOR
Philip J. Mucci <mucci@cs.utk.edu>

.SH BUGS
This function has no known bugs.

.SH SEE ALSO
.BR PAPI_preset "(3), "
.BR PAPI_set_opt "(3), " PAPI_start "(3), " PAPI_add_event "(3), " 
.BR PAPI_add_events "(3), " PAPI_add_pevents "(3), " PAPI_query "(3), "
.BR PAPI_cleanup_eventset "(3), " PAPI_destroy_eventset "(3), " 
The\ PAPI\ Web\ Site: 
.B http://icl.cs.utk.edu/projects/papi
