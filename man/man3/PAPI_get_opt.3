.\" $Id$
.TH PAPI_get_opt 3 "October, 2000" "PAPI Programmer's Manual" "PAPI"

.SH NAME
PAPI_get_opt, PAPI_set_opt \- get/set PAPI library or event set options

.SH SYNOPSIS
.B #include <papi.h>

.nf
.BI "int PAPI_get_opt(int " option ", PAPI_option_t *" ptr ");"
.BI "int PAPI_set_opt(int " option ", PAPI_option_t *" ptr ");"
.if

.SH DESCRIPTION
.B PAPI_get_opt()
and
.B PAPI_set_opt() 
query or change the options of the PAPI library or a specific event set 
created by
.BR "PAPI_create_eventset" (3).
These functions have a C interface only.
Not all options require or return information in the
PAPI_option_t structure.  
.LP
The reader is urged to see the example code in the PAPI distribution
for usage of PAPI_get_opt.  The file papi.h contains
definitions for the structures unioned in the PAPI_option_t structure.  

.I "option"
-- is an input parameter describing the course of action. Its possible
values are defined in 
.B papi.h
and briefly described below.
.LP
.I "ptr"
-- is both an input and output parameter. It is defined in
.B papi.h
and its definition is enclosed below.

.LP
.TS H
allbox tab($);
cB cB
cI s
lB lw(45).
.TH
Predefined name$Explanation
General information requests
PAPI_GET_CLOCKRATE$T{
Return clockrate in MHz.
T}
PAPI_GET_MAX_CPUS$T{
Return number of CPUs.
T}
PAPI_GET_MAX_HWCTRS$T{
Return number of counters.
T}
PAPI_GET_EXEINFO$T{
Addresses for text/data/bss.
T}
PAPI_GET_HWINFO$T{
Info. about hardware.
T}
PAPI_GET_PRELOAD$T{
Get ``LD_PRELOAD'' environment equivalent.
T}
.T&
cI s
lB lw(45).
Defaults for the global library
PAPI_GET_DEFDOM$T{
Return default counting domain for newly created event sets.
T}
PAPI_SET_DEFDOM$T{
Set default counting domain.
T}
PAPI_GET_DEFGRN$T{
Return default counting granularity.
T}
PAPI_SET_DEFGRN$T{
Set default counting granularity.
T}
PAPI_GET_DEBUG$T{
Get the PAPI debug state. The available debug states are
defined in
.BR papi.h .
The debug state is available in ptr->debug
T}
PAPI_SET_DEBUG$T{
Set the PAPI debug state
T}
.T&
cI s
lB lw(45).
Multiplexing control
PAPI_GET_MULTIPLEX$T{
Get options for multiplexing. Currently not implemented.
T}
PAPI_SET_MULTIPLEX$T{
Set options for multiplexing
T}
.T&
cI s
lB lw(45).
Manipulating individual event sets
PAPI_GET_DOMAIN$T{
Get domain for a single event set. The event set is specified 
in ptr->domain.eventset
T}
PAPI_SET_DOMAIN$T{
Set the domain for a single event set.
T}
PAPI_GET_GRANUL$T{
Get granularity for a single event set. The event set is specified 
in ptr->granularity.eventset
T}
PAPI_SET_GRANUL$T{
Set the granularity for a single event set.
T}
.TE

.LP
.nf
.if t .ft CW
typedef union {
  PAPI_preload_option_t preload;
  PAPI_debug_option_t debug;
  PAPI_inherit_option_t inherit;
  PAPI_granularity_option_t granularity; 
  PAPI_granularity_option_t defgranularity; 
  PAPI_domain_option_t domain; 
  PAPI_domain_option_t defdomain; 
  PAPI_hw_info_t *hw_info;
  PAPI_exe_info_t *exe_info; } PAPI_option_t;
.if t .ft P
.fi


.SH RETURN VALUES
On success, this function returns
.I "PAPI_OK."
On error, a non-zero error code is returned.

.SH ERRORS
.TP
.B "PAPI_EINVAL"
One or more of the arguments is invalid.
.TP
.B "PAPI_ENOEVST"
The event set specified does not exist.
.TP
.B "PAPI_EISRUN"
The event set is currently counting events.

.SH EXAMPLES
.LP
.nf
.if t .ft CW
int num, EventSet = PAPI_NULL;
PAPI_option_t options;

if ((num = PAPI_get_opt(PAPI_GET_MAX_HWCTRS,NULL)) <= 0)
  handle_error();

printf("This machine has %d counters.\n",num);

if (PAPI_create_eventset(&EventSet) != PAPI_OK)
  handle_error();

/* Set the domain of this EventSet 
   to counter user and kernel modes for this
   process */
	
memset(&options,0x0,sizeof(options));

options.domain.eventset = EventSet;
options.domain.domain = PAPI_DOM_ALL;
if (PAPI_set_opt(PAPI_SET_DOMAIN, &options) != PAPI_OK)
  handle_error();
.if t .ft P
.fi

.SH AUTHOR
Philip J. Mucci <mucci@cs.utk.edu>

.SH BUGS
This woeful excuse for a man page.

.SH SEE ALSO
.BR PAPI_create_eventset "(3), " PAPI_add_event "(3), " PAPI_start "(3), " 
The\ PAPI\ Web\ Site: 
.B http://icl.cs.utk.edu/projects/papi
