.TH "The High Level API" 3 "Fri Aug 26 2011" "Version 4.1.4.0" "PAPI-C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
The High Level API \- 
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBPAPI_accum_counters\fP (long long *values, int array_len)"
.br
.ti -1c
.RI "int \fBPAPI_num_counters\fP (void)"
.br
.ti -1c
.RI "int \fBPAPI_num_components\fP (void)"
.br
.ti -1c
.RI "int \fBPAPI_read_counters\fP (long long *values, int array_len)"
.br
.ti -1c
.RI "int \fBPAPI_start_counters\fP (int *events, int array_len)"
.br
.ti -1c
.RI "int \fBPAPI_stop_counters\fP (long long *values, int array_len)"
.br
.ti -1c
.RI "int \fBPAPI_flips\fP (float *rtime, float *ptime, long long *flpins, float *mflips)"
.br
.ti -1c
.RI "int \fBPAPI_flops\fP (float *rtime, float *ptime, long long *flpops, float *mflops)"
.br
.ti -1c
.RI "int \fBPAPI_ipc\fP (float *rtime, float *ptime, long long *ins, float *ipc)"
.br
.in -1c
.SH "Detailed Description"
.PP 
The simple interface implemented by the following eight routines allows the user to access and count specific hardware events from both C and Fortran'\&. It should be noted that this API can be used in conjunction with the low level API'\&. 
.SH "Function Documentation"
.PP 
.SS "int \fBPAPI_accum_counters\fP (long long *values, intarray_len)"add current counts to array and reset counters 
.SS "int \fBPAPI_flips\fP (float *rtime, float *ptime, long long *flpins, float *mflips)"simplified call to get Mflips/s (floating point instruction rate), real and processor time 
.SS "int \fBPAPI_flops\fP (float *rtime, float *ptime, long long *flpops, float *mflops)"simplified call to get Mflops/s (floating point operation rate), real and processor time 
.SS "int \fBPAPI_ipc\fP (float *rtime, float *ptime, long long *ins, float *ipc)"gets instructions per cycle, real and processor time 
.SS "int \fBPAPI_num_components\fP (void)"get the number of components available on the system 
.SS "int \fBPAPI_num_counters\fP (void)"get the number of hardware counters available on the system 
.SS "int \fBPAPI_read_counters\fP (long long *values, intarray_len)"copy current counts to array and reset counters 
.SS "int \fBPAPI_start_counters\fP (int *events, intarray_len)"start counting hardware events 
.SS "int \fBPAPI_stop_counters\fP (long long *values, intarray_len)"stop counters and return current counts 
.SH "Author"
.PP 
Generated automatically by Doxygen for PAPI-C from the source code'\&.
