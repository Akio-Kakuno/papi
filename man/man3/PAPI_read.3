.\" $Id$
.TH PAPI_read 3 "December, 2001" "PAPI Function Reference" "PAPI"

.SH NAME
PAPI_read, PAPI_accum \- read hardware events, accumulate and reset hardware
events from an event set

.SH SYNOPSIS
.B C Interface
.nf
.B #include <papi.h>
.BI "int\ PAPI_read(int " EventSet ", long_long *" values ");"
.BI "int\ PAPI_accum(int " EventSet ", long_long *" values ");"
.fi
.B Fortran Interface
.nf
.B #include "fpapi.h"
.BI PAPIF_read(C_INT\  EventSet,\  C_LONG_LONG(*)\  values,\  C_INT\  check )
.BI PAPIF_accum(C_INT\  EventSet,\  C_LONG_LONG(*)\  values,\  C_INT\  check )
.fi

.SH DESCRIPTION
.B PAPI_read()
copies the counters of the indicated event set into 
the array
.IR values .
The counters are left counting after the read.
.LP
.B PAPI_accum()
adds the counters of the indicated event set into the array
.IR values .
The counters are zeroed and left counting after the operation.

.SH ARGUMENTS
.I EventSet
--  an integer handle for a PAPI Event Set as created by
.BR "PAPI_create_eventset" (3)
.LP
.I *values
-- an array to hold the counter values of the counting events

.SH RETURN VALUES
On success, these functions return
.B "PAPI_OK."
 On error, a non-zero error code is returned.

.SH ERRORS
.TP
.B "PAPI_EINVAL"
One or more of the arguments is invalid.
.TP
.B "PAPI_ESYS"
A system or C library call failed inside PAPI, see the 
.I "errno"
variable.
.TP
.B "PAPI_ENOEVST"
The event set specified does not exist.

.SH EXAMPLES
.nf
.if t .ft CW
  int EventSet = PAPI_NULL;
  unsigned int native = 0x0;
  long_long values[1] = (long_long) 0;
	
  if (PAPI_create_eventset(&EventSet) != PAPI_OK)
    handle_error(1);

  /* Add Total Instructions Executed to our EventSet */

  if (PAPI_add_event(&EventSet, PAPI_TOT_INS) != PAPI_OK)
    handle_error(1);

  /* Start counting */

  if (PAPI_start(EventSet) != PAPI_OK)
    handle_error(1);

  poorly_tuned_function();

  if (PAPI_accum(EventSet, values) != PAPI_OK)
    handle_error(1);

  printf("%lld\\n",values[0]);

  poorly_tuned_function();

  if (PAPI_stop(EventSet, values) != PAPI_OK)
    handle_error(1);

  printf("%lld\\n",values[0]);
.if t .ft P
.fi

.SH AUTHOR
Philip J. Mucci <mucci@cs.utk.edu>

.SH BUGS
These functions have no known bugs.

.SH SEE ALSO
.BR PAPI_add_event "(3), " PAPI_reset "(3), "
.BR PAPI_set_opt "(3), " PAPI_rem_event "(3), " 
.BR PAPI_cleanup_eventset "(3), " PAPI_destroy_eventset "(3), " 
 The PAPI Web Site: 
http://icl.cs.utk.edu/projects/papi
